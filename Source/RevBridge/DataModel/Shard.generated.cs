//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModel
{
	/// <summary>
	/// Database       : SRO_VT_SHARD
	/// Data Source    : MERT-PC\SQL
	/// Server Version : 14.00.2027
	/// </summary>
	public partial class ShardDb : LinqToDB.Data.DataConnection
	{
		public ITable<AccountJID>                                 AccountJıds                                 { get { return this.GetTable<AccountJID>(); } }
		public ITable<AlliedClan>                                 AlliedClans                                 { get { return this.GetTable<AlliedClan>(); } }
		public ITable<AssociationReputation>                      AssociationReputations                      { get { return this.GetTable<AssociationReputation>(); } }
		public ITable<BindingOptionWithItem>                      BindingOptionWithItems                      { get { return this.GetTable<BindingOptionWithItem>(); } }
		public ITable<BlackNameList>                              BlackNameLists                              { get { return this.GetTable<BlackNameList>(); } }
		public ITable<BlockedWhisperer>                           BlockedWhisperers                           { get { return this.GetTable<BlockedWhisperer>(); } }
		public ITable<Char>                                       Chars                                       { get { return this.GetTable<Char>(); } }
		public ITable<CharCO>                                     CharCOS                                     { get { return this.GetTable<CharCO>(); } }
		public ITable<CharCollectionBook>                         CharCollectionBooks                         { get { return this.GetTable<CharCollectionBook>(); } }
		public ITable<CharInstanceWorldData>                      CharInstanceWorldData                       { get { return this.GetTable<CharInstanceWorldData>(); } }
		public ITable<CharNameList>                               CharNameLists                               { get { return this.GetTable<CharNameList>(); } }
		public ITable<CharNickNameList>                           CharNickNameLists                           { get { return this.GetTable<CharNickNameList>(); } }
		public ITable<CharQuest>                                  CharQuests                                  { get { return this.GetTable<CharQuest>(); } }
		public ITable<CharSkill>                                  CharSkills                                  { get { return this.GetTable<CharSkill>(); } }
		public ITable<CharSkillMastery>                           CharSkillMasteries                          { get { return this.GetTable<CharSkillMastery>(); } }
		public ITable<CharTrijob>                                 CharTrijobs                                 { get { return this.GetTable<CharTrijob>(); } }
		public ITable<CharTrijobSafeTrade>                        CharTrijobSafeTrades                        { get { return this.GetTable<CharTrijobSafeTrade>(); } }
		public ITable<Chest>                                      Chests                                      { get { return this.GetTable<Chest>(); } }
		public ITable<ChestInfo>                                  ChestInfoes                                 { get { return this.GetTable<ChestInfo>(); } }
		public ITable<ClientConfig>                               ClientConfigs                               { get { return this.GetTable<ClientConfig>(); } }
		public ITable<DeletedChar>                                DeletedChars                                { get { return this.GetTable<DeletedChar>(); } }
		public ITable<ErrorLog>                                   ErrorLogs                                   { get { return this.GetTable<ErrorLog>(); } }
		public ITable<ExploitLog>                                 ExploitLogs                                 { get { return this.GetTable<ExploitLog>(); } }
		public ITable<FlagWorldEventParticipant>                  FlagWorldEventParticipants                  { get { return this.GetTable<FlagWorldEventParticipant>(); } }
		public ITable<FleaMarketNetwork>                          FleaMarketNetworks                          { get { return this.GetTable<FleaMarketNetwork>(); } }
		public ITable<Friend>                                     Friends                                     { get { return this.GetTable<Friend>(); } }
		public ITable<GPHistory>                                  GPHistories                                 { get { return this.GetTable<GPHistory>(); } }
		public ITable<Guild>                                      Guilds                                      { get { return this.GetTable<Guild>(); } }
		public ITable<GuildChest>                                 GuildChests                                 { get { return this.GetTable<GuildChest>(); } }
		public ITable<GuildMember>                                GuildMembers                                { get { return this.GetTable<GuildMember>(); } }
		public ITable<GuildWar>                                   GuildWars                                   { get { return this.GetTable<GuildWar>(); } }
		public ITable<InvCO>                                      InvCOS                                      { get { return this.GetTable<InvCO>(); } }
		public ITable<Inventory>                                  Inventories                                 { get { return this.GetTable<Inventory>(); } }
		public ITable<InventoryForAvatar>                         InventoryForAvatars                         { get { return this.GetTable<InventoryForAvatar>(); } }
		public ITable<InventoryForLinkedStorage>                  InventoryForLinkedStorages                  { get { return this.GetTable<InventoryForLinkedStorage>(); } }
		public ITable<Item>                                       Items                                       { get { return this.GetTable<Item>(); } }
		public ITable<ItemPool>                                   ItemPools                                   { get { return this.GetTable<ItemPool>(); } }
		public ITable<ItemQuotation>                              ItemQuotations                              { get { return this.GetTable<ItemQuotation>(); } }
		public ITable<LatestItemSerial>                           LatestItemSerials                           { get { return this.GetTable<LatestItemSerial>(); } }
		public ITable<LogSeekNDestroyItemFast>                    LogSeekNDestroyItemFasts                    { get { return this.GetTable<LogSeekNDestroyItemFast>(); } }
		public ITable<Memo>                                       Memos                                       { get { return this.GetTable<Memo>(); } }
		public ITable<OldTrijob>                                  OldTrijobs                                  { get { return this.GetTable<OldTrijob>(); } }
		public ITable<OpenMarket>                                 OpenMarkets                                 { get { return this.GetTable<OpenMarket>(); } }
		public ITable<RefAbilityByItemOptLevel>                   RefAbilityByItemOptLevels                   { get { return this.GetTable<RefAbilityByItemOptLevel>(); } }
		public ITable<RefAccessPermissionOfShop>                  RefAccessPermissionOfShops                  { get { return this.GetTable<RefAccessPermissionOfShop>(); } }
		public ITable<RefAlchemyMerit>                            RefAlchemyMerits                            { get { return this.GetTable<RefAlchemyMerit>(); } }
		public ITable<RefCharDefaultQuest>                        RefCharDefaultQuests                        { get { return this.GetTable<RefCharDefaultQuest>(); } }
		public ITable<RefCharDefaultSkill>                        RefCharDefaultSkills                        { get { return this.GetTable<RefCharDefaultSkill>(); } }
		public ITable<RefCharDefaultSkillMastery>                 RefCharDefaultSkillMasteries                { get { return this.GetTable<RefCharDefaultSkillMastery>(); } }
		public ITable<RefCharGen>                                 RefCharGens                                 { get { return this.GetTable<RefCharGen>(); } }
		public ITable<RefClimate>                                 RefClimates                                 { get { return this.GetTable<RefClimate>(); } }
		public ITable<RefCollectionBookItem>                      RefCollectionBookItems                      { get { return this.GetTable<RefCollectionBookItem>(); } }
		public ITable<RefCollectionBookTheme>                     RefCollectionBookThemes                     { get { return this.GetTable<RefCollectionBookTheme>(); } }
		public ITable<RefConditionToBuyScrapItem>                 RefConditionToBuyScrapItems                 { get { return this.GetTable<RefConditionToBuyScrapItem>(); } }
		public ITable<RefConditionToSellPackageItem>              RefConditionToSellPackageItems              { get { return this.GetTable<RefConditionToSellPackageItem>(); } }
		public ITable<RefConditionToSellScrapItem>                RefConditionToSellScrapItems                { get { return this.GetTable<RefConditionToSellScrapItem>(); } }
		public ITable<RefCustomizingReservedItemDropForMonster>   RefCustomizingReservedItemDropForMonsters   { get { return this.GetTable<RefCustomizingReservedItemDropForMonster>(); } }
		public ITable<RefDropClassSelAlchemyATTRStone>            RefDropClassSelAlchemyATTRStones            { get { return this.GetTable<RefDropClassSelAlchemyATTRStone>(); } }
		public ITable<RefDropClassSelAlchemyMagicStone>           RefDropClassSelAlchemyMagicStones           { get { return this.GetTable<RefDropClassSelAlchemyMagicStone>(); } }
		public ITable<RefDropClassSelAlchemyTablet>               RefDropClassSelAlchemyTablets               { get { return this.GetTable<RefDropClassSelAlchemyTablet>(); } }
		public ITable<RefDropClassSelAmmo>                        RefDropClassSelAmmoes                       { get { return this.GetTable<RefDropClassSelAmmo>(); } }
		public ITable<RefDropClassSelCure>                        RefDropClassSelCures                        { get { return this.GetTable<RefDropClassSelCure>(); } }
		public ITable<RefDropClassSelEquip>                       RefDropClassSelEquips                       { get { return this.GetTable<RefDropClassSelEquip>(); } }
		public ITable<RefDropClassSelRareEquip>                   RefDropClassSelRareEquips                   { get { return this.GetTable<RefDropClassSelRareEquip>(); } }
		public ITable<RefDropClassSelRecover>                     RefDropClassSelRecovers                     { get { return this.GetTable<RefDropClassSelRecover>(); } }
		public ITable<RefDropClassSelReinforce>                   RefDropClassSelReinforces                   { get { return this.GetTable<RefDropClassSelReinforce>(); } }
		public ITable<RefDropClassSelScroll>                      RefDropClassSelScrolls                      { get { return this.GetTable<RefDropClassSelScroll>(); } }
		public ITable<RefDropGold>                                RefDropGolds                                { get { return this.GetTable<RefDropGold>(); } }
		public ITable<RefDropItemAssign>                          RefDropItemAssigns                          { get { return this.GetTable<RefDropItemAssign>(); } }
		public ITable<RefDropItemGroup>                           RefDropItemGroups                           { get { return this.GetTable<RefDropItemGroup>(); } }
		public ITable<RefDropOptLvlSel>                           RefDropOptLvlSels                           { get { return this.GetTable<RefDropOptLvlSel>(); } }
		public ITable<RefDummySlot>                               RefDummySlots                               { get { return this.GetTable<RefDummySlot>(); } }
		public ITable<RefEvent>                                   RefEvents                                   { get { return this.GetTable<RefEvent>(); } }
		public ITable<RefEventReward>                             RefEventRewards                             { get { return this.GetTable<RefEventReward>(); } }
		public ITable<RefEventRewardItem>                         RefEventRewardItems                         { get { return this.GetTable<RefEventRewardItem>(); } }
		public ITable<RefEventZone>                               RefEventZones                               { get { return this.GetTable<RefEventZone>(); } }
		public ITable<RefFmnCategoryTree>                         RefFmnCategoryTrees                         { get { return this.GetTable<RefFmnCategoryTree>(); } }
		public ITable<RefFmnTidGroup>                             RefFmnTidGroups                             { get { return this.GetTable<RefFmnTidGroup>(); } }
		public ITable<RefFmnTidGroupMap>                          RefFmnTidGroupMaps                          { get { return this.GetTable<RefFmnTidGroupMap>(); } }
		public ITable<RefGachaCode>                               RefGachaCodes                               { get { return this.GetTable<RefGachaCode>(); } }
		public ITable<RefGachaItemSet>                            RefGachaItemSets                            { get { return this.GetTable<RefGachaItemSet>(); } }
		public ITable<RefGachaNpcMap>                             RefGachaNpcMaps                             { get { return this.GetTable<RefGachaNpcMap>(); } }
		public ITable<RefGameWorld>                               RefGameWorlds                               { get { return this.GetTable<RefGameWorld>(); } }
		public ITable<RefGameWorldBindGameWorldGroup>             RefGameWorldBindGameWorldGroups             { get { return this.GetTable<RefGameWorldBindGameWorldGroup>(); } }
		public ITable<RefGameWorldBindTriggerCategory>            RefGameWorldBindTriggerCategories           { get { return this.GetTable<RefGameWorldBindTriggerCategory>(); } }
		public ITable<RefGameWorldConfig>                         RefGameWorldConfigs                         { get { return this.GetTable<RefGameWorldConfig>(); } }
		public ITable<RefGameWorldGroup>                          RefGameWorldGroups                          { get { return this.GetTable<RefGameWorldGroup>(); } }
		public ITable<RefGameWorldGroupConfig>                    RefGameWorldGroupConfigs                    { get { return this.GetTable<RefGameWorldGroupConfig>(); } }
		public ITable<RefGameWorldNPC>                            RefGameWorldNpcs                            { get { return this.GetTable<RefGameWorldNPC>(); } }
		public ITable<RefHWANLevel>                               RefHWANLevels                               { get { return this.GetTable<RefHWANLevel>(); } }
		public ITable<RefInstanceWorldRegion>                     RefInstanceWorldRegions                     { get { return this.GetTable<RefInstanceWorldRegion>(); } }
		public ITable<RefInstanceWorldStartPos>                   RefInstanceWorldStartPos                    { get { return this.GetTable<RefInstanceWorldStartPos>(); } }
		public ITable<RefLatestItemSerial>                        RefLatestItemSerials                        { get { return this.GetTable<RefLatestItemSerial>(); } }
		public ITable<RefLevel>                                   RefLevels                                   { get { return this.GetTable<RefLevel>(); } }
		public ITable<RefMagicOpt>                                RefMagicOpts                                { get { return this.GetTable<RefMagicOpt>(); } }
		public ITable<RefMagicOptAssign>                          RefMagicOptAssigns                          { get { return this.GetTable<RefMagicOptAssign>(); } }
		public ITable<RefMagicOptByItemOptLevel>                  RefMagicOptByItemOptLevels                  { get { return this.GetTable<RefMagicOptByItemOptLevel>(); } }
		public ITable<RefMagicOptGroup>                           RefMagicOptGroups                           { get { return this.GetTable<RefMagicOptGroup>(); } }
		public ITable<RefMappingShopGroup>                        RefMappingShopGroups                        { get { return this.GetTable<RefMappingShopGroup>(); } }
		public ITable<RefMappingShopWithTab>                      RefMappingShopWithTabs                      { get { return this.GetTable<RefMappingShopWithTab>(); } }
		public ITable<RefMonsterAssignedItemDrop>                 RefMonsterAssignedItemDrops                 { get { return this.GetTable<RefMonsterAssignedItemDrop>(); } }
		public ITable<RefMonsterAssignedItemRndDrop>              RefMonsterAssignedItemRndDrops              { get { return this.GetTable<RefMonsterAssignedItemRndDrop>(); } }
		public ITable<RefObjChar>                                 RefObjChars                                 { get { return this.GetTable<RefObjChar>(); } }
		public ITable<RefObjCharExtraSkill>                       RefObjCharExtraSkills                       { get { return this.GetTable<RefObjCharExtraSkill>(); } }
		public ITable<RefObjCommon>                               RefObjCommons                               { get { return this.GetTable<RefObjCommon>(); } }
		public ITable<RefObjItem>                                 RefObjItems                                 { get { return this.GetTable<RefObjItem>(); } }
		public ITable<RefObjStruct>                               RefObjStructs                               { get { return this.GetTable<RefObjStruct>(); } }
		public ITable<RefOptionalTeleport>                        RefOptionalTeleports                        { get { return this.GetTable<RefOptionalTeleport>(); } }
		public ITable<RefPackageItem>                             RefPackageItems                             { get { return this.GetTable<RefPackageItem>(); } }
		public ITable<RefPricePolicyOfItem>                       RefPricePolicyOfItems                       { get { return this.GetTable<RefPricePolicyOfItem>(); } }
		public ITable<RefQuest>                                   RefQuests                                   { get { return this.GetTable<RefQuest>(); } }
		public ITable<RefQuestReward>                             RefQuestRewards                             { get { return this.GetTable<RefQuestReward>(); } }
		public ITable<RefQuestRewardItem>                         RefQuestRewardItems                         { get { return this.GetTable<RefQuestRewardItem>(); } }
		public ITable<RefRegion>                                  RefRegions                                  { get { return this.GetTable<RefRegion>(); } }
		public ITable<RefRegionBindAssocServer>                   RefRegionBindAssocServers                   { get { return this.GetTable<RefRegionBindAssocServer>(); } }
		public ITable<RefRentItem>                                RefRentItems                                { get { return this.GetTable<RefRentItem>(); } }
		public ITable<RefRewardPolicyToBuyScrapItem>              RefRewardPolicyToBuyScrapItems              { get { return this.GetTable<RefRewardPolicyToBuyScrapItem>(); } }
		public ITable<RefRewardPolicyToSellPackageItem>           RefRewardPolicyToSellPackageItems           { get { return this.GetTable<RefRewardPolicyToSellPackageItem>(); } }
		public ITable<RefRewardPolicyToSellScrapItem>             RefRewardPolicyToSellScrapItems             { get { return this.GetTable<RefRewardPolicyToSellScrapItem>(); } }
		public ITable<RefScheduleDefine>                          RefScheduleDefines                          { get { return this.GetTable<RefScheduleDefine>(); } }
		public ITable<RefScrapOfPackageItem>                      RefScrapOfPackageItems                      { get { return this.GetTable<RefScrapOfPackageItem>(); } }
		public ITable<RefServerEvent>                             RefServerEvents                             { get { return this.GetTable<RefServerEvent>(); } }
		public ITable<RefServerEventReward>                       RefServerEventRewards                       { get { return this.GetTable<RefServerEventReward>(); } }
		public ITable<RefServerEventRewardExpUPForPlayer>         RefServerEventRewardExpUPForPlayers         { get { return this.GetTable<RefServerEventRewardExpUPForPlayer>(); } }
		public ITable<RefServerEventRewardSpawnMonster>           RefServerEventRewardSpawnMonsters           { get { return this.GetTable<RefServerEventRewardSpawnMonster>(); } }
		public ITable<RefSetItemGroup>                            RefSetItemGroups                            { get { return this.GetTable<RefSetItemGroup>(); } }
		public ITable<RefShardContentConfig>                      RefShardContentConfigs                      { get { return this.GetTable<RefShardContentConfig>(); } }
		public ITable<RefShop>                                    RefShops                                    { get { return this.GetTable<RefShop>(); } }
		public ITable<RefShopGood>                                RefShopGoods                                { get { return this.GetTable<RefShopGood>(); } }
		public ITable<RefShopGroup>                               RefShopGroups                               { get { return this.GetTable<RefShopGroup>(); } }
		public ITable<RefShopItemGroup>                           RefShopItemGroups                           { get { return this.GetTable<RefShopItemGroup>(); } }
		public ITable<RefShopItemStockPeriod>                     RefShopItemStockPeriods                     { get { return this.GetTable<RefShopItemStockPeriod>(); } }
		public ITable<RefShopObject>                              RefShopObjects                              { get { return this.GetTable<RefShopObject>(); } }
		public ITable<RefShopTab>                                 RefShopTabs                                 { get { return this.GetTable<RefShopTab>(); } }
		public ITable<RefShopTabGroup>                            RefShopTabGroups                            { get { return this.GetTable<RefShopTabGroup>(); } }
		public ITable<RefSiegeBlessBuff>                          RefSiegeBlessBuffs                          { get { return this.GetTable<RefSiegeBlessBuff>(); } }
		public ITable<RefSiegeDungeon>                            RefSiegeDungeons                            { get { return this.GetTable<RefSiegeDungeon>(); } }
		public ITable<RefSiegeFortress>                           RefSiegeFortresses                          { get { return this.GetTable<RefSiegeFortress>(); } }
		public ITable<RefSiegeFortressBattleRank>                 RefSiegeFortressBattleRanks                 { get { return this.GetTable<RefSiegeFortressBattleRank>(); } }
		public ITable<RefSiegeFortressGuard>                      RefSiegeFortressGuards                      { get { return this.GetTable<RefSiegeFortressGuard>(); } }
		public ITable<RefSiegeFortressItemForge>                  RefSiegeFortressItemForges                  { get { return this.GetTable<RefSiegeFortressItemForge>(); } }
		public ITable<RefSiegeFortressReward>                     RefSiegeFortressRewards                     { get { return this.GetTable<RefSiegeFortressReward>(); } }
		public ITable<RefSiegeLvlSummonMonster>                   RefSiegeLvlSummonMonsters                   { get { return this.GetTable<RefSiegeLvlSummonMonster>(); } }
		public ITable<RefSiegeQuest>                              RefSiegeQuests                              { get { return this.GetTable<RefSiegeQuest>(); } }
		public ITable<RefSiegeQuestReward>                        RefSiegeQuestRewards                        { get { return this.GetTable<RefSiegeQuestReward>(); } }
		public ITable<RefSiegeStructUpgrade>                      RefSiegeStructUpgrades                      { get { return this.GetTable<RefSiegeStructUpgrade>(); } }
		public ITable<RefSkill>                                   RefSkills                                   { get { return this.GetTable<RefSkill>(); } }
		public ITable<RefSkillByItemOptLevel>                     RefSkillByItemOptLevels                     { get { return this.GetTable<RefSkillByItemOptLevel>(); } }
		public ITable<RefSkillGroup>                              RefSkillGroups                              { get { return this.GetTable<RefSkillGroup>(); } }
		public ITable<RefSkillMastery>                            RefSkillMasteries                           { get { return this.GetTable<RefSkillMastery>(); } }
		public ITable<RefTeleLink>                                RefTeleLinks                                { get { return this.GetTable<RefTeleLink>(); } }
		public ITable<RefTeleport>                                RefTeleports                                { get { return this.GetTable<RefTeleport>(); } }
		public ITable<RefTreatItemOfShop>                         RefTreatItemOfShops                         { get { return this.GetTable<RefTreatItemOfShop>(); } }
		public ITable<RefTrigger>                                 RefTriggers                                 { get { return this.GetTable<RefTrigger>(); } }
		public ITable<RefTriggerAction>                           RefTriggerActions                           { get { return this.GetTable<RefTriggerAction>(); } }
		public ITable<RefTriggerActionParam>                      RefTriggerActionParams                      { get { return this.GetTable<RefTriggerActionParam>(); } }
		public ITable<RefTriggerBindAction>                       RefTriggerBindActions                       { get { return this.GetTable<RefTriggerBindAction>(); } }
		public ITable<RefTriggerBindCondition>                    RefTriggerBindConditions                    { get { return this.GetTable<RefTriggerBindCondition>(); } }
		public ITable<RefTriggerBindEvent>                        RefTriggerBindEvents                        { get { return this.GetTable<RefTriggerBindEvent>(); } }
		public ITable<RefTriggerCategory>                         RefTriggerCategories                        { get { return this.GetTable<RefTriggerCategory>(); } }
		public ITable<RefTriggerCategoryBindTrigger>              RefTriggerCategoryBindTriggers              { get { return this.GetTable<RefTriggerCategoryBindTrigger>(); } }
		public ITable<RefTriggerCommon>                           RefTriggerCommons                           { get { return this.GetTable<RefTriggerCommon>(); } }
		public ITable<RefTriggerCondition>                        RefTriggerConditions                        { get { return this.GetTable<RefTriggerCondition>(); } }
		public ITable<RefTriggerConditionParam>                   RefTriggerConditionParams                   { get { return this.GetTable<RefTriggerConditionParam>(); } }
		public ITable<RefTriggerEvent>                            RefTriggerEvents                            { get { return this.GetTable<RefTriggerEvent>(); } }
		public ITable<RefTriggerVariable>                         RefTriggerVariables                         { get { return this.GetTable<RefTriggerVariable>(); } }
		public ITable<RefUIStringMt>                              RefUIStringMts                              { get { return this.GetTable<RefUIStringMt>(); } }
		public ITable<RentItemInfo>                               RentItemInfoes                              { get { return this.GetTable<RentItemInfo>(); } }
		public ITable<ResultOfPackageItemToMappingWithServerSide> ResultOfPackageItemToMappingWithServerSides { get { return this.GetTable<ResultOfPackageItemToMappingWithServerSide>(); } }
		public ITable<Schedule>                                   Schedules                                   { get { return this.GetTable<Schedule>(); } }
		public ITable<ServerEvent>                                ServerEvents                                { get { return this.GetTable<ServerEvent>(); } }
		public ITable<ServerEventReward>                          ServerEventRewards                          { get { return this.GetTable<ServerEventReward>(); } }
		public ITable<ShopItemStockQuantity>                      ShopItemStockQuantities                     { get { return this.GetTable<ShopItemStockQuantity>(); } }
		public ITable<SiegeFortress>                              SiegeFortresses                             { get { return this.GetTable<SiegeFortress>(); } }
		public ITable<SiegeFortressBattleRecord>                  SiegeFortressBattleRecords                  { get { return this.GetTable<SiegeFortressBattleRecord>(); } }
		public ITable<SiegeFortressItemForge>                     SiegeFortressItemForges                     { get { return this.GetTable<SiegeFortressItemForge>(); } }
		public ITable<SiegeFortressObject>                        SiegeFortressObjects                        { get { return this.GetTable<SiegeFortressObject>(); } }
		public ITable<SiegeFortressRequest>                       SiegeFortressRequests                       { get { return this.GetTable<SiegeFortressRequest>(); } }
		public ITable<SiegeFortressStoneState>                    SiegeFortressStoneStates                    { get { return this.GetTable<SiegeFortressStoneState>(); } }
		public ITable<SiegeFortressStruct>                        SiegeFortressStructs                        { get { return this.GetTable<SiegeFortressStruct>(); } }
		public ITable<StarterItem>                                StarterItems                                { get { return this.GetTable<StarterItem>(); } }
		public ITable<StaticAvatar>                               StaticAvatars                               { get { return this.GetTable<StaticAvatar>(); } }
		public ITable<TabDBSafeCheckState>                        TabDBSafeCheckStates                        { get { return this.GetTable<TabDBSafeCheckState>(); } }
		public ITable<TabRefAISkill>                              TabRefAISkills                              { get { return this.GetTable<TabRefAISkill>(); } }
		public ITable<TabRefHive>                                 TabRefHives                                 { get { return this.GetTable<TabRefHive>(); } }
		public ITable<TabRefNest>                                 TabRefNests                                 { get { return this.GetTable<TabRefNest>(); } }
		public ITable<TabRefRankingHunterActivity>                TabRefRankingHunterActivities               { get { return this.GetTable<TabRefRankingHunterActivity>(); } }
		public ITable<TabRefRankingHunterContribution>            TabRefRankingHunterContributions            { get { return this.GetTable<TabRefRankingHunterContribution>(); } }
		public ITable<TabRefRankingRobberActivity>                TabRefRankingRobberActivities               { get { return this.GetTable<TabRefRankingRobberActivity>(); } }
		public ITable<TabRefRankingRobberContribution>            TabRefRankingRobberContributions            { get { return this.GetTable<TabRefRankingRobberContribution>(); } }
		public ITable<TabRefRankingTraderActivity>                TabRefRankingTraderActivities               { get { return this.GetTable<TabRefRankingTraderActivity>(); } }
		public ITable<TabRefRankingTraderContribution>            TabRefRankingTraderContributions            { get { return this.GetTable<TabRefRankingTraderContribution>(); } }
		public ITable<TabRefTactic>                               TabRefTactics                               { get { return this.GetTable<TabRefTactic>(); } }
		public ITable<TempAddıtemexternChestLog>                  TempAddıtemexternChestLogs                  { get { return this.GetTable<TempAddıtemexternChestLog>(); } }
		public ITable<TempRemovedStaleChar>                       TempRemovedStaleChars                       { get { return this.GetTable<TempRemovedStaleChar>(); } }
		public ITable<TimedJob>                                   TimedJobs                                   { get { return this.GetTable<TimedJob>(); } }
		public ITable<TimedJobForPet>                             TimedJobForPets                             { get { return this.GetTable<TimedJobForPet>(); } }
		public ITable<TimItemOnChar>                              TimItemOnChars                              { get { return this.GetTable<TimItemOnChar>(); } }
		public ITable<TrainingCamp>                               TrainingCamps                               { get { return this.GetTable<TrainingCamp>(); } }
		public ITable<TrainingCampBuffStatus>                     TrainingCampBuffStatus                      { get { return this.GetTable<TrainingCampBuffStatus>(); } }
		public ITable<TrainingCampHonorRank>                      TrainingCampHonorRanks                      { get { return this.GetTable<TrainingCampHonorRank>(); } }
		public ITable<TrainingCampHonorRankUpdateDate>            TrainingCampHonorRankUpdateDates            { get { return this.GetTable<TrainingCampHonorRankUpdateDate>(); } }
		public ITable<TrainingCampMember>                         TrainingCampMembers                         { get { return this.GetTable<TrainingCampMember>(); } }
		public ITable<TrainingCampSubMentorHonorPoint>            TrainingCampSubMentorHonorPoints            { get { return this.GetTable<TrainingCampSubMentorHonorPoint>(); } }
		public ITable<TrijobReward>                               TrijobRewards                               { get { return this.GetTable<TrijobReward>(); } }
		public ITable<User>                                       Users                                       { get { return this.GetTable<User>(); } }

		public ShardDb()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public ShardDb(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="_AccountJID")]
	public partial class AccountJID
	{
		[PrimaryKey, NotNull] public string AccountID { get; set; } // varchar(128)
		[Column,     NotNull] public int    JID       { get; set; } // int
		[Column,     NotNull] public long   Gold      { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__ChestInfo__AccountJID_BackReference
		/// </summary>
		[Association(ThisKey="JID", OtherKey="JID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ChestInfo> ChestInfoAccountJıds { get; set; }

		/// <summary>
		/// FK__Chest__User_BackReference
		/// </summary>
		[Association(ThisKey="JID", OtherKey="UserJID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Chest> ChestUsers { get; set; }

		/// <summary>
		/// FK__OpenMarket__JID_BackReference
		/// </summary>
		[Association(ThisKey="JID", OtherKey="JID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OpenMarket> OpenMarketJıds { get; set; }

		/// <summary>
		/// FK__User__AccountJID_BackReference
		/// </summary>
		[Association(ThisKey="JID", OtherKey="UserJID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<User> UserAccountJıds { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_AlliedClans")]
	public partial class AlliedClan
	{
		[PrimaryKey, Identity   ] public int      ID             { get; set; } // int
		[Column,        Nullable] public int?     Ally1          { get; set; } // int
		[Column,        Nullable] public int?     Ally2          { get; set; } // int
		[Column,        Nullable] public int?     Ally3          { get; set; } // int
		[Column,        Nullable] public int?     Ally4          { get; set; } // int
		[Column,        Nullable] public int?     Ally5          { get; set; } // int
		[Column,        Nullable] public int?     Ally6          { get; set; } // int
		[Column,        Nullable] public int?     Ally7          { get; set; } // int
		[Column,        Nullable] public int?     Ally8          { get; set; } // int
		[Column,     NotNull    ] public DateTime FoundationDate { get; set; } // smalldatetime
		[Column,     NotNull    ] public int      LastCrestRev   { get; set; } // int
		[Column,     NotNull    ] public int      CurCrestRev    { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__AlliedClans__Guild
		/// </summary>
		[Association(ThisKey="Ally1", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild", BackReferenceName="AlliedClansGuilds")]
		public Guild AlliedClansGuild { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild1
		/// </summary>
		[Association(ThisKey="Ally2", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild1", BackReferenceName="FkAlliedClansGuild1BackReferences")]
		public Guild FkAlliedClansGuild1 { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild2
		/// </summary>
		[Association(ThisKey="Ally3", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild2", BackReferenceName="FkAlliedClansGuild2BackReferences")]
		public Guild FkAlliedClansGuild2 { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild3
		/// </summary>
		[Association(ThisKey="Ally4", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild3", BackReferenceName="FkAlliedClansGuild3BackReferences")]
		public Guild FkAlliedClansGuild3 { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild4
		/// </summary>
		[Association(ThisKey="Ally5", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild4", BackReferenceName="FkAlliedClansGuild4BackReferences")]
		public Guild FkAlliedClansGuild4 { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild5
		/// </summary>
		[Association(ThisKey="Ally6", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild5", BackReferenceName="FkAlliedClansGuild5BackReferences")]
		public Guild FkAlliedClansGuild5 { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild6
		/// </summary>
		[Association(ThisKey="Ally7", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild6", BackReferenceName="FkAlliedClansGuild6BackReferences")]
		public Guild FkAlliedClansGuild6 { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild7
		/// </summary>
		[Association(ThisKey="Ally8", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__AlliedClans__Guild7", BackReferenceName="FkAlliedClansGuild7BackReferences")]
		public Guild FkAlliedClansGuild7 { get; set; }

		/// <summary>
		/// FK__Guild__AlliedClans_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Alliance", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Guild> GuildAlliedClans { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_AssociationReputation")]
	public partial class AssociationReputation
	{
		[PrimaryKey(1), NotNull] public string AssociationCodeName { get; set; } // varchar(128)
		[PrimaryKey(2), NotNull] public string AssociationTypeName { get; set; } // varchar(128)
		[Column,        NotNull] public int    Reputation          { get; set; } // int
		[Column,        NotNull] public int    PriorOccupation     { get; set; } // int
	}

	[Table(Schema="dbo", Name="_BindingOptionWithItem")]
	public partial class BindingOptionWithItem
	{
		[Column("nItemDBID"), PrimaryKey(1), NotNull] public long NItemDBID { get; set; } // bigint
		[Column("bOptType"),  PrimaryKey(2), NotNull] public byte BOptType  { get; set; } // tinyint
		[Column("nSlot"),     PrimaryKey(3), NotNull] public byte NSlot     { get; set; } // tinyint
		[Column("nOptID"),                   NotNull] public int  NOptID    { get; set; } // int
		[Column("nOptLvl"),                  NotNull] public byte NOptLvl   { get; set; } // tinyint
		[Column("nOptValue"),                NotNull] public int  NOptValue { get; set; } // int
		[Column("nParam1"),      Nullable           ] public int? NParam1   { get; set; } // int
		[Column("nParam2"),      Nullable           ] public int? NParam2   { get; set; } // int
	}

	[Table(Schema="dbo", Name="_BlackNameList")]
	public partial class BlackNameList
	{
		[Column, Nullable] public string BlacklistName { get; set; } // nvarchar(255)
	}

	[Table(Schema="dbo", Name="_BlockedWhisperers")]
	public partial class BlockedWhisperer
	{
		[Column, NotNull] public int    OwnerID    { get; set; } // int
		[Column, NotNull] public string TargetName { get; set; } // varchar(64)

		#region Associations

		/// <summary>
		/// FK___BlockedW__Owner__0D4FE554
		/// </summary>
		[Association(ThisKey="OwnerID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK___BlockedW__Owner__0D4FE554", BackReferenceName="BlockedWOwner0D4Fes")]
		public Char BlockedWOwner0D4FE { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_Char")]
	public partial class Char
	{
		[Column(),                PrimaryKey,  Identity] public int      CharID            { get; set; } // int
		[Column(),                NotNull              ] public byte     Deleted           { get; set; } // tinyint
		[Column(),                NotNull              ] public int      RefObjID          { get; set; } // int
		[Column(),                NotNull              ] public string   CharName16        { get; set; } // varchar(64)
		[Column(),                NotNull              ] public string   NickName16        { get; set; } // varchar(17)
		[Column(),                NotNull              ] public byte     Scale             { get; set; } // tinyint
		[Column(),                NotNull              ] public byte     CurLevel          { get; set; } // tinyint
		[Column(),                NotNull              ] public byte     MaxLevel          { get; set; } // tinyint
		[Column(),                NotNull              ] public long     ExpOffset         { get; set; } // bigint
		[Column(),                NotNull              ] public int      SExpOffset        { get; set; } // int
		[Column(),                NotNull              ] public short    Strength          { get; set; } // smallint
		[Column(),                NotNull              ] public short    Intellect         { get; set; } // smallint
		[Column(),                NotNull              ] public long     RemainGold        { get; set; } // bigint
		[Column(),                NotNull              ] public int      RemainSkillPoint  { get; set; } // int
		[Column(),                NotNull              ] public short    RemainStatPoint   { get; set; } // smallint
		[Column(),                NotNull              ] public byte     RemainHwanCount   { get; set; } // tinyint
		[Column(),                NotNull              ] public int      GatheredExpPoint  { get; set; } // int
		[Column(),                NotNull              ] public int      HP                { get; set; } // int
		[Column(),                NotNull              ] public int      MP                { get; set; } // int
		[Column(),                NotNull              ] public short    LatestRegion      { get; set; } // smallint
		[Column(),                NotNull              ] public float    PosX              { get; set; } // real
		[Column(),                NotNull              ] public float    PosY              { get; set; } // real
		[Column(),                NotNull              ] public float    PosZ              { get; set; } // real
		[Column(),                NotNull              ] public int      AppointedTeleport { get; set; } // int
		[Column(),                NotNull              ] public byte     AutoInvestExp     { get; set; } // tinyint
		[Column(),                NotNull              ] public int      InventorySize     { get; set; } // int
		[Column(),                NotNull              ] public byte     DailyPK           { get; set; } // tinyint
		[Column(),                NotNull              ] public short    TotalPK           { get; set; } // smallint
		[Column(),                NotNull              ] public int      PKPenaltyPoint    { get; set; } // int
		[Column(),                NotNull              ] public int      TPP               { get; set; } // int
		[Column(),                NotNull              ] public int      PenaltyForfeit    { get; set; } // int
		[Column(),                NotNull              ] public int      JobPenaltyTime    { get; set; } // int
		[Column("JobLvl_Trader"), NotNull              ] public byte     JobLvlTrader      { get; set; } // tinyint
		[Column("Trader_Exp"),    NotNull              ] public int      TraderExp         { get; set; } // int
		[Column("JobLvl_Hunter"), NotNull              ] public byte     JobLvlHunter      { get; set; } // tinyint
		[Column("Hunter_Exp"),    NotNull              ] public int      HunterExp         { get; set; } // int
		[Column("JobLvl_Robber"), NotNull              ] public byte     JobLvlRobber      { get; set; } // tinyint
		[Column("Robber_Exp"),    NotNull              ] public int      RobberExp         { get; set; } // int
		[Column(),                   Nullable          ] public int?     GuildID           { get; set; } // int
		[Column(),                NotNull              ] public DateTime LastLogout        { get; set; } // smalldatetime
		[Column(),                NotNull              ] public short    TelRegion         { get; set; } // smallint
		[Column(),                NotNull              ] public float    TelPosX           { get; set; } // real
		[Column(),                NotNull              ] public float    TelPosY           { get; set; } // real
		[Column(),                NotNull              ] public float    TelPosZ           { get; set; } // real
		[Column(),                NotNull              ] public short    DiedRegion        { get; set; } // smallint
		[Column(),                NotNull              ] public float    DiedPosX          { get; set; } // real
		[Column(),                NotNull              ] public float    DiedPosY          { get; set; } // real
		[Column(),                NotNull              ] public float    DiedPosZ          { get; set; } // real
		[Column(),                NotNull              ] public short    WorldID           { get; set; } // smallint
		[Column(),                NotNull              ] public short    TelWorldID        { get; set; } // smallint
		[Column(),                NotNull              ] public short    DiedWorldID       { get; set; } // smallint
		[Column(),                NotNull              ] public byte     HwanLevel         { get; set; } // tinyint
		[Column(),                NotNull              ] public bool     Online            { get; set; } // bit
		[Column(),                NotNull              ] public bool     JobSuit           { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK___BlockedW__Owner__0D4FE554_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="OwnerID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<BlockedWhisperer> BlockedWOwner0D4Fes { get; set; }

		/// <summary>
		/// FK__CharCOS__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="OwnerCharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CharCO> CharCOSChars { get; set; }

		/// <summary>
		/// FK__CharSkill__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CharSkill> CharSkillChars { get; set; }

		/// <summary>
		/// FK__CharSkillMastery__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CharSkillMastery> CharSkillMasteryChars { get; set; }

		/// <summary>
		/// FK__CharTrijob__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public CharTrijob CharTrijobChar { get; set; }

		/// <summary>
		/// FK__Friend__Char1_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="FriendCharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Friend> FkFriendChar1BackReferences { get; set; }

		/// <summary>
		/// FK__FleaMarketNetwork__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<FleaMarketNetwork> FleaMarketNetworkChars { get; set; }

		/// <summary>
		/// FK__Friend__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Friend> FriendChars { get; set; }

		/// <summary>
		/// FK__GuildMember__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<GuildMember> GuildMemberChars { get; set; }

		/// <summary>
		/// FK__Inventory__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Inventory> InventoryChars { get; set; }

		/// <summary>
		/// FK__InventoryForAvatar__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InventoryForAvatar> InventoryForAvatarChars { get; set; }

		/// <summary>
		/// FK__Memo__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Memo> MemoChars { get; set; }

		/// <summary>
		/// FK__StaticAvatar__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public StaticAvatar StaticAvatarChar { get; set; }

		/// <summary>
		/// FK__TimedJob__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TimedJob> TimedJobChars { get; set; }

		/// <summary>
		/// FK__TrainingCampMember__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TrainingCampMember> TrainingCampMemberChars { get; set; }

		/// <summary>
		/// FK__TrainingCampSubMentorHonorPoint__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public TrainingCampSubMentorHonorPoint TrainingCampSubMentorHonorPointChar { get; set; }

		/// <summary>
		/// FK__User__Char_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<User> UserChars { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_CharCOS")]
	public partial class CharCO
	{
		[PrimaryKey, Identity   ] public int       ID          { get; set; } // int
		[Column,     NotNull    ] public int       OwnerCharID { get; set; } // int
		[Column,     NotNull    ] public int       RefCharID   { get; set; } // int
		[Column,     NotNull    ] public int       HP          { get; set; } // int
		[Column,     NotNull    ] public int       MP          { get; set; } // int
		[Column,     NotNull    ] public int       KeeperNPC   { get; set; } // int
		[Column,     NotNull    ] public byte      State       { get; set; } // tinyint
		[Column,        Nullable] public string    CharName    { get; set; } // varchar(16)
		[Column,     NotNull    ] public byte      Lvl         { get; set; } // tinyint
		[Column,     NotNull    ] public long      ExpOffset   { get; set; } // bigint
		[Column,     NotNull    ] public short     HGP         { get; set; } // smallint
		[Column,     NotNull    ] public int       PetOption   { get; set; } // int
		[Column,        Nullable] public DateTime? RentEndTime { get; set; } // smalldatetime

		#region Associations

		/// <summary>
		/// FK__CharCOS__Char
		/// </summary>
		[Association(ThisKey="OwnerCharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__CharCOS__Char", BackReferenceName="CharCOSChars")]
		public Char CharCOSChar { get; set; }

		/// <summary>
		/// FK__InvCOS__CharCOS_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="COSID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InvCO> InvCOSCharCOS { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_CharCollectionBook")]
	public partial class CharCollectionBook
	{
		[PrimaryKey(1), NotNull] public int      CharID    { get; set; } // int
		[PrimaryKey(2), NotNull] public int      ThemeID   { get; set; } // int
		[PrimaryKey(3), NotNull] public int      SlotIndex { get; set; } // int
		[Column,        NotNull] public DateTime RegDate   { get; set; } // smalldatetime
	}

	[Table(Schema="dbo", Name="_CharInstanceWorldData")]
	public partial class CharInstanceWorldData
	{
		[PrimaryKey(1), NotNull] public int      CharID        { get; set; } // int
		[Column,        NotNull] public int      DungeonKeyID  { get; set; } // int
		[PrimaryKey(2), NotNull] public int      WorldID       { get; set; } // int
		[Column,        NotNull] public int      LayerID       { get; set; } // int
		[Column,        NotNull] public DateTime OpenedTime    { get; set; } // datetime
		[Column,        NotNull] public short    RegionID      { get; set; } // smallint
		[Column,        NotNull] public int      PosX          { get; set; } // int
		[Column,        NotNull] public int      PosY          { get; set; } // int
		[Column,        NotNull] public int      PosZ          { get; set; } // int
		[Column,        NotNull] public byte     IsActivated   { get; set; } // tinyint
		[Column,        NotNull] public int      EnterCount    { get; set; } // int
		[Column,        NotNull] public DateTime LastEnterTime { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_CharNameList")]
	public partial class CharNameList
	{
		[PrimaryKey(1), NotNull] public string CharName16 { get; set; } // varchar(17)
		[PrimaryKey(2), NotNull] public int    CharID     { get; set; } // int
	}

	[Table(Schema="dbo", Name="_CharNickNameList")]
	public partial class CharNickNameList
	{
		[PrimaryKey(1), NotNull] public string NickName16 { get; set; } // varchar(17)
		[PrimaryKey(2), NotNull] public int    CharID     { get; set; } // int
	}

	[Table(Schema="dbo", Name="_CharQuest")]
	public partial class CharQuest
	{
		[PrimaryKey(1), NotNull] public int      CharID           { get; set; } // int
		[PrimaryKey(2), NotNull] public int      QuestID          { get; set; } // int
		[Column,        NotNull] public byte     Status           { get; set; } // tinyint
		[Column,        NotNull] public short    AchievementCount { get; set; } // smallint
		[Column,        NotNull] public DateTime StartTime        { get; set; } // smalldatetime
		[Column,        NotNull] public DateTime EndTime          { get; set; } // smalldatetime
		[Column,        NotNull] public long     QuestData1       { get; set; } // bigint
		[Column,        NotNull] public long     QuestData2       { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="_CharSkill")]
	public partial class CharSkill
	{
		[PrimaryKey(1), NotNull] public int  CharID  { get; set; } // int
		[PrimaryKey(2), NotNull] public int  SkillID { get; set; } // int
		[Column,        NotNull] public byte Enable  { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__CharSkill__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__CharSkill__Char", BackReferenceName="CharSkillChars")]
		public Char CharSkillChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_CharSkillMastery")]
	public partial class CharSkillMastery
	{
		[PrimaryKey(1), NotNull] public int  CharID    { get; set; } // int
		[PrimaryKey(2), NotNull] public int  MasteryID { get; set; } // int
		[Column,        NotNull] public byte Level     { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__CharSkillMastery__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__CharSkillMastery__Char", BackReferenceName="CharSkillMasteryChars")]
		public Char CharSkillMasteryChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_CharTrijob")]
	public partial class CharTrijob
	{
		[PrimaryKey, NotNull] public int  CharID       { get; set; } // int
		[Column,     NotNull] public byte JobType      { get; set; } // tinyint
		[Column,     NotNull] public byte Level        { get; set; } // tinyint
		[Column,     NotNull] public int  Exp          { get; set; } // int
		[Column,     NotNull] public int  Contribution { get; set; } // int
		[Column,     NotNull] public int  Reward       { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__CharTrijob__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK__CharTrijob__Char", BackReferenceName="CharTrijobChar")]
		public Char CharTrijobChar { get; set; }

		/// <summary>
		/// FK__CharTrijobSafeTrade__CharTrijob_BackReference
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<CharTrijobSafeTrade> CharTrijobSafeTradeCharTrijobs { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_CharTrijobSafeTrade")]
	public partial class CharTrijobSafeTrade
	{
		[Column, NotNull] public int      CharID        { get; set; } // int
		[Column, NotNull] public int      AbleCount     { get; set; } // int
		[Column, NotNull] public int      Status        { get; set; } // int
		[Column, NotNull] public DateTime LastSafeTrade { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK__CharTrijobSafeTrade__CharTrijob
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__CharTrijobSafeTrade__CharTrijob", BackReferenceName="CharTrijobSafeTradeCharTrijobs")]
		public CharTrijob CharTrijobSafeTradeCharTrijob { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_Chest")]
	public partial class Chest
	{
		[PrimaryKey(1), NotNull    ] public int   UserJID { get; set; } // int
		[PrimaryKey(2), NotNull    ] public byte  Slot    { get; set; } // tinyint
		[Column,           Nullable] public long? ItemID  { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__Chest__Items
		/// </summary>
		[Association(ThisKey="ItemID", OtherKey="ID64", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__Chest__Items", BackReferenceName="ChestItems")]
		public Item ChestItem { get; set; }

		/// <summary>
		/// FK__Chest__User
		/// </summary>
		[Association(ThisKey="UserJID", OtherKey="JID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__Chest__User", BackReferenceName="ChestUsers")]
		public AccountJID ChestUser { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_ChestInfo")]
	public partial class ChestInfo
	{
		[Column, NotNull] public int  JID       { get; set; } // int
		[Column, NotNull] public byte ChestSize { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__ChestInfo__AccountJID
		/// </summary>
		[Association(ThisKey="JID", OtherKey="JID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__ChestInfo__AccountJID", BackReferenceName="ChestInfoAccountJıds")]
		public AccountJID ChestInfoAccountJID { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_ClientConfig")]
	public partial class ClientConfig
	{
		[Column, NotNull] public int  CharID     { get; set; } // int
		[Column, NotNull] public byte ConfigType { get; set; } // tinyint
		[Column, NotNull] public byte SlotSeq    { get; set; } // tinyint
		[Column, NotNull] public byte SlotType   { get; set; } // tinyint
		[Column, NotNull] public int  Data       { get; set; } // int
	}

	[Table(Schema="dbo", Name="_DeletedChar")]
	public partial class DeletedChar
	{
		[PrimaryKey, NotNull] public int      CharID      { get; set; } // int
		[Column,     NotNull] public int      UserJID     { get; set; } // int
		[Column,     NotNull] public DateTime DeletedDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_ErrorLogs")]
	public partial class ErrorLog
	{
		[PrimaryKey, Identity   ] public long     ErrorLogSN     { get; set; } // bigint
		[Column,     NotNull    ] public string   LoginName      { get; set; } // varchar(128)
		[Column,     NotNull    ] public string   HostName       { get; set; } // varchar(128)
		[Column,     NotNull    ] public int      ErrorNumber    { get; set; } // int
		[Column,        Nullable] public int?     ErrorSeverity  { get; set; } // int
		[Column,        Nullable] public int?     ErrorState     { get; set; } // int
		[Column,        Nullable] public string   ErrorProcedure { get; set; } // varchar(128)
		[Column,        Nullable] public int?     ErrorLine      { get; set; } // int
		[Column,     NotNull    ] public string   ErrorMessage   { get; set; } // varchar(max)
		[Column,     NotNull    ] public DateTime ErrorDate      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_ExploitLog")]
	public partial class ExploitLog
	{
		[PrimaryKey(1), Identity   ] public int      ID          { get; set; } // int
		[PrimaryKey(2), NotNull    ] public int      CharID      { get; set; } // int
		[Column,        NotNull    ] public string   DetectedApp { get; set; } // varchar(256)
		[Column,           Nullable] public string   Description { get; set; } // varchar(256)
		[Column,        NotNull    ] public DateTime LogTime     { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_FlagWorld_EventParticipants")]
	public partial class FlagWorldEventParticipant
	{
		[Column, NotNull] public int      JID           { get; set; } // int
		[Column, NotNull] public DateTime LatestAttempt { get; set; } // datetime
		[Column, NotNull] public int      Count         { get; set; } // int
	}

	[Table(Schema="dbo", Name="_FleaMarketNetwork")]
	public partial class FleaMarketNetwork
	{
		[Column, NotNull] public byte AbleOpen   { get; set; } // tinyint
		[Column, NotNull] public int  CharID     { get; set; } // int
		[Column, NotNull] public byte Slot       { get; set; } // tinyint
		[Column, NotNull] public int  TidGroupID { get; set; } // int
		[Column, NotNull] public byte ItemClass  { get; set; } // tinyint
		[Column, NotNull] public int  ItemCount  { get; set; } // int
		[Column, NotNull] public byte MakeZone   { get; set; } // tinyint
		[Column, NotNull] public long Cash       { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__FleaMarketNetwork__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__FleaMarketNetwork__Char", BackReferenceName="FleaMarketNetworkChars")]
		public Char FleaMarketNetworkChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_Friend")]
	public partial class Friend
	{
		[Column, NotNull    ] public int    CharID         { get; set; } // int
		[Column, NotNull    ] public int    FriendCharID   { get; set; } // int
		[Column, NotNull    ] public string FriendCharName { get; set; } // varchar(64)
		[Column,    Nullable] public int?   RefObjID       { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__Friend__Char1
		/// </summary>
		[Association(ThisKey="FriendCharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__Friend__Char1", BackReferenceName="FkFriendChar1BackReferences")]
		public Char FkFriendChar1 { get; set; }

		/// <summary>
		/// FK__Friend__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__Friend__Char", BackReferenceName="FriendChars")]
		public Char FriendChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_GPHistory")]
	public partial class GPHistory
	{
		[PrimaryKey, Identity   ] public int       ID       { get; set; } // int
		[Column,     NotNull    ] public int       GuildID  { get; set; } // int
		[Column,        Nullable] public DateTime? UsedTime { get; set; } // datetime
		[Column,     NotNull    ] public string    CharName { get; set; } // varchar(64)
		[Column,     NotNull    ] public int       UsedGP   { get; set; } // int
		[Column,     NotNull    ] public byte      Reason   { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_Guild")]
	public partial class Guild
	{
		[PrimaryKey, Identity   ] public int      ID                 { get; set; } // int
		[Column,     NotNull    ] public string   Name               { get; set; } // varchar(64)
		[Column,     NotNull    ] public byte     Lvl                { get; set; } // tinyint
		[Column,     NotNull    ] public int      GatheredSP         { get; set; } // int
		[Column,     NotNull    ] public DateTime FoundationDate     { get; set; } // smalldatetime
		[Column,        Nullable] public int?     Alliance           { get; set; } // int
		[Column,        Nullable] public string   MasterCommentTitle { get; set; } // varchar(129)
		[Column,        Nullable] public string   MasterComment      { get; set; } // varchar(2049)
		[Column,        Nullable] public int?     Booty              { get; set; } // int
		[Column,     NotNull    ] public long     Gold               { get; set; } // bigint
		[Column,     NotNull    ] public int      LastCrestRev       { get; set; } // int
		[Column,     NotNull    ] public int      CurCrestRev        { get; set; } // int
		[Column,     NotNull    ] public byte     MercenaryAttr      { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__AlliedClans__Guild_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally1", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> AlliedClansGuilds { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild1_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally2", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> FkAlliedClansGuild1BackReferences { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild2_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally3", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> FkAlliedClansGuild2BackReferences { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild3_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally4", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> FkAlliedClansGuild3BackReferences { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild4_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally5", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> FkAlliedClansGuild4BackReferences { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild5_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally6", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> FkAlliedClansGuild5BackReferences { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild6_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally7", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> FkAlliedClansGuild6BackReferences { get; set; }

		/// <summary>
		/// FK__AlliedClans__Guild7_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Ally8", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AlliedClan> FkAlliedClansGuild7BackReferences { get; set; }

		/// <summary>
		/// FK__GuildWar__Guild1_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Guild2", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<GuildWar> FkGuildWarGuild1BackReferences { get; set; }

		/// <summary>
		/// FK__Guild__AlliedClans
		/// </summary>
		[Association(ThisKey="Alliance", OtherKey="ID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__Guild__AlliedClans", BackReferenceName="GuildAlliedClans")]
		public AlliedClan GuildAlliedClan { get; set; }

		/// <summary>
		/// FK__GuildChest_Guild_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="GuildID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<GuildChest> GuildChestGuilds { get; set; }

		/// <summary>
		/// FK__GuildMember__Guild_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="GuildID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<GuildMember> GuildMemberGuilds { get; set; }

		/// <summary>
		/// FK__GuildWar__Guild_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Guild1", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<GuildWar> GuildWarGuilds { get; set; }

		/// <summary>
		/// FK__SiegeFortress__Guild_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="GuildID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortress> SiegeFortressGuilds { get; set; }

		/// <summary>
		/// FK__SiegeFortressRequest__Guild_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="GuildID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortressRequest> SiegeFortressRequestGuilds { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_GuildChest")]
	public partial class GuildChest
	{
		[PrimaryKey(1), NotNull    ] public int   GuildID { get; set; } // int
		[PrimaryKey(2), NotNull    ] public byte  Slot    { get; set; } // tinyint
		[Column,           Nullable] public long? ItemID  { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__GuildChest_Guild
		/// </summary>
		[Association(ThisKey="GuildID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__GuildChest_Guild", BackReferenceName="GuildChestGuilds")]
		public Guild GuildChestGuild { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_GuildMember")]
	public partial class GuildMember
	{
		[Column(),              PrimaryKey(1), NotNull] public int      GuildID        { get; set; } // int
		[Column(),              PrimaryKey(2), NotNull] public int      CharID         { get; set; } // int
		[Column(),                             NotNull] public string   CharName       { get; set; } // varchar(64)
		[Column(),                             NotNull] public byte     MemberClass    { get; set; } // tinyint
		[Column(),                             NotNull] public byte     CharLevel      { get; set; } // tinyint
		[Column("GP_Donation"),                NotNull] public int      GpDonation     { get; set; } // int
		[Column(),                             NotNull] public DateTime JoinDate       { get; set; } // smalldatetime
		[Column(),                 Nullable           ] public int?     Permission     { get; set; } // int
		[Column(),                 Nullable           ] public int?     Contribution   { get; set; } // int
		[Column(),                 Nullable           ] public int?     GuildWarKill   { get; set; } // int
		[Column(),                 Nullable           ] public int?     GuildWarKilled { get; set; } // int
		[Column(),                 Nullable           ] public string   Nickname       { get; set; } // varchar(64)
		[Column(),                 Nullable           ] public int?     RefObjID       { get; set; } // int
		[Column(),                 Nullable           ] public byte?    SiegeAuthority { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__GuildMember__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__GuildMember__Char", BackReferenceName="GuildMemberChars")]
		public Char GuildMemberChar { get; set; }

		/// <summary>
		/// FK__GuildMember__Guild
		/// </summary>
		[Association(ThisKey="GuildID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__GuildMember__Guild", BackReferenceName="GuildMemberGuilds")]
		public Guild GuildMemberGuild { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_GuildWar")]
	public partial class GuildWar
	{
		[PrimaryKey, Identity   ] public int       ID                { get; set; } // int
		[Column,     NotNull    ] public byte      WarType           { get; set; } // tinyint
		[Column,     NotNull    ] public byte      VictoryPointIndex { get; set; } // tinyint
		[Column,     NotNull    ] public int       LodgedGold        { get; set; } // int
		[Column,        Nullable] public DateTime? WarEndTime        { get; set; } // smalldatetime
		[Column,     NotNull    ] public int       Guild1            { get; set; } // int
		[Column,     NotNull    ] public int       Guild2            { get; set; } // int
		[Column,     NotNull    ] public int       PointGain1        { get; set; } // int
		[Column,     NotNull    ] public int       PointGain2        { get; set; } // int
		[Column,     NotNull    ] public int       Data1             { get; set; } // int
		[Column,     NotNull    ] public int       Data2             { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__GuildWar__Guild1
		/// </summary>
		[Association(ThisKey="Guild2", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__GuildWar__Guild1", BackReferenceName="FkGuildWarGuild1BackReferences")]
		public Guild FkGuildWarGuild1 { get; set; }

		/// <summary>
		/// FK__GuildWar__Guild
		/// </summary>
		[Association(ThisKey="Guild1", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__GuildWar__Guild", BackReferenceName="GuildWarGuilds")]
		public Guild GuildWarGuild { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_InvCOS")]
	public partial class InvCO
	{
		[PrimaryKey(1), NotNull    ] public int   COSID  { get; set; } // int
		[PrimaryKey(2), NotNull    ] public byte  Slot   { get; set; } // tinyint
		[Column,           Nullable] public long? ItemID { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__InvCOS__CharCOS
		/// </summary>
		[Association(ThisKey="COSID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__InvCOS__CharCOS", BackReferenceName="InvCOSCharCOS")]
		public CharCO InvCOSCharCO { get; set; }

		/// <summary>
		/// FK__InvCOS__Items
		/// </summary>
		[Association(ThisKey="ItemID", OtherKey="ID64", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK__InvCOS__Items", BackReferenceName="InvCOSItems")]
		public Item InvCOSItem { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_Inventory")]
	public partial class Inventory
	{
		[PrimaryKey(1), NotNull] public int  CharID { get; set; } // int
		[PrimaryKey(2), NotNull] public byte Slot   { get; set; } // tinyint
		[Column,        NotNull] public long ItemID { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__Inventory__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__Inventory__Char", BackReferenceName="InventoryChars")]
		public Char InventoryChar { get; set; }

		/// <summary>
		/// FK__Inventory__Items
		/// </summary>
		[Association(ThisKey="ItemID", OtherKey="ID64", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__Inventory__Items", BackReferenceName="InventoryItems")]
		public Item InventoryItem { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_InventoryForAvatar")]
	public partial class InventoryForAvatar
	{
		[PrimaryKey(1), NotNull] public int  CharID { get; set; } // int
		[PrimaryKey(2), NotNull] public byte Slot   { get; set; } // tinyint
		[Column,        NotNull] public long ItemID { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__InventoryForAvatar__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__InventoryForAvatar__Char", BackReferenceName="InventoryForAvatarChars")]
		public Char InventoryForAvatarChar { get; set; }

		/// <summary>
		/// FK__InventoryForAvatar__Items
		/// </summary>
		[Association(ThisKey="ItemID", OtherKey="ID64", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__InventoryForAvatar__Items", BackReferenceName="InventoryForAvatarItems")]
		public Item InventoryForAvatarItem { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_InventoryForLinkedStorage")]
	public partial class InventoryForLinkedStorage
	{
		[PrimaryKey(1), NotNull] public long LinkedItemID { get; set; } // bigint
		[PrimaryKey(2), NotNull] public byte Slot         { get; set; } // tinyint
		[Column,        NotNull] public long ItemID       { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__InventoryForLinkedStorage__Items
		/// </summary>
		[Association(ThisKey="ItemID", OtherKey="ID64", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__InventoryForLinkedStorage__Items", BackReferenceName="InventoryForLinkedStorageItems")]
		public Item InventoryForLinkedStorageItem { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_Items")]
	public partial class Item
	{
		[PrimaryKey, Identity   ] public long   ID64        { get; set; } // bigint
		[Column,     NotNull    ] public int    RefItemID   { get; set; } // int
		[Column,        Nullable] public byte?  OptLevel    { get; set; } // tinyint
		[Column,        Nullable] public long?  Variance    { get; set; } // bigint
		[Column,     NotNull    ] public int    Data        { get; set; } // int
		[Column,        Nullable] public string CreaterName { get; set; } // varchar(64)
		[Column,     NotNull    ] public byte   MagParamNum { get; set; } // tinyint
		[Column,        Nullable] public long?  MagParam1   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam2   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam3   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam4   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam5   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam6   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam7   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam8   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam9   { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam10  { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam11  { get; set; } // bigint
		[Column,        Nullable] public long?  MagParam12  { get; set; } // bigint
		[Column,     NotNull    ] public long   Serial64    { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__Chest__Items_BackReference
		/// </summary>
		[Association(ThisKey="ID64", OtherKey="ItemID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Chest> ChestItems { get; set; }

		/// <summary>
		/// FK__InvCOS__Items_BackReference
		/// </summary>
		[Association(ThisKey="ID64", OtherKey="ItemID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InvCO> InvCOSItems { get; set; }

		/// <summary>
		/// FK__InventoryForAvatar__Items_BackReference
		/// </summary>
		[Association(ThisKey="ID64", OtherKey="ItemID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InventoryForAvatar> InventoryForAvatarItems { get; set; }

		/// <summary>
		/// FK__InventoryForLinkedStorage__Items_BackReference
		/// </summary>
		[Association(ThisKey="ID64", OtherKey="ItemID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InventoryForLinkedStorage> InventoryForLinkedStorageItems { get; set; }

		/// <summary>
		/// FK__Inventory__Items_BackReference
		/// </summary>
		[Association(ThisKey="ID64", OtherKey="ItemID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Inventory> InventoryItems { get; set; }

		/// <summary>
		/// FK__ItemPool__Items_BackReference
		/// </summary>
		[Association(ThisKey="ID64", OtherKey="ItemID", CanBeNull=true, Relationship=Relationship.OneToOne, IsBackReference=true)]
		public ItemPool ItemPoolItem { get; set; }

		/// <summary>
		/// FK__OpenMarket__ItemID_BackReference
		/// </summary>
		[Association(ThisKey="ID64", OtherKey="ItemID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<OpenMarket> OpenMarketItemIds { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_ItemPool")]
	public partial class ItemPool
	{
		[PrimaryKey, NotNull] public long ItemID { get; set; } // bigint
		[Column,     NotNull] public byte InUse  { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__ItemPool__Items
		/// </summary>
		[Association(ThisKey="ItemID", OtherKey="ID64", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK__ItemPool__Items", BackReferenceName="ItemPoolItem")]
		public Item ItemPoolItem { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_ItemQuotation")]
	public partial class ItemQuotation
	{
		[Column(),          PrimaryKey, Identity] public int   ID              { get; set; } // int
		[Column(),          NotNull             ] public int   Service         { get; set; } // int
		[Column(),          NotNull             ] public int   AssocNPC        { get; set; } // int
		[Column(),          NotNull             ] public int   RefItemID       { get; set; } // int
		[Column(),          NotNull             ] public float BaseQuot        { get; set; } // real
		[Column("Quot_LB"), NotNull             ] public float QuotLb          { get; set; } // real
		[Column("Quot_UB"), NotNull             ] public float QuotUb          { get; set; } // real
		[Column(),          NotNull             ] public int   BaseStockAmount { get; set; } // int
		[Column(),          NotNull             ] public int   FluctuateAmount { get; set; } // int
		[Column(),          NotNull             ] public int   CurStockAmount  { get; set; } // int
	}

	[Table(Schema="dbo", Name="_LatestItemSerial")]
	public partial class LatestItemSerial
	{
		[Column("LatestItemSerial"), NotNull] public long LatestItemSerialColumn { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="_Log_SEEK_N_DESTROY_ITEM_FAST")]
	public partial class LogSeekNDestroyItemFast
	{
		[Column, Nullable] public DateTime? DeletedTime { get; set; } // datetime
		[Column, Nullable] public byte?     OwnerType   { get; set; } // tinyint
		[Column, Nullable] public int?      OwnerID     { get; set; } // int
		[Column, Nullable] public long?     ID64        { get; set; } // bigint
		[Column, Nullable] public string    CodeName    { get; set; } // varchar(129)
		[Column, Nullable] public byte?     OptLevel    { get; set; } // tinyint
		[Column, Nullable] public long?     Variance    { get; set; } // bigint
		[Column, Nullable] public int?      Data        { get; set; } // int
	}

	[Table(Schema="dbo", Name="_Memo")]
	public partial class Memo
	{
		[PrimaryKey, Identity   ] public long     ID64         { get; set; } // bigint
		[Column,     NotNull    ] public int      CharID       { get; set; } // int
		[Column,     NotNull    ] public string   FromCharName { get; set; } // varchar(64)
		[Column,        Nullable] public string   Message      { get; set; } // varchar(1000)
		[Column,     NotNull    ] public DateTime Date         { get; set; } // smalldatetime
		[Column,     NotNull    ] public byte     Status       { get; set; } // tinyint
		[Column,        Nullable] public int?     RefObjID     { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__Memo__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__Memo__Char", BackReferenceName="MemoChars")]
		public Char MemoChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_OldTrijob")]
	public partial class OldTrijob
	{
		[Column(),                PrimaryKey, NotNull] public int  CharID       { get; set; } // int
		[Column("JobLvl_Trader"),             NotNull] public byte JobLvlTrader { get; set; } // tinyint
		[Column("Trader_Exp"),                NotNull] public int  TraderExp    { get; set; } // int
		[Column("JobLvl_Robber"),             NotNull] public byte JobLvlRobber { get; set; } // tinyint
		[Column("Robber_Exp"),                NotNull] public int  RobberExp    { get; set; } // int
		[Column("JobLvl_Hunter"),             NotNull] public byte JobLvlHunter { get; set; } // tinyint
		[Column("Hunter_Exp"),                NotNull] public int  HunterExp    { get; set; } // int
	}

	[Table(Schema="dbo", Name="_OpenMarket")]
	public partial class OpenMarket
	{
		[Column, NotNull] public int      JID        { get; set; } // int
		[Column, NotNull] public int      PersnalID  { get; set; } // int
		[Column, NotNull] public string   CharName16 { get; set; } // varchar(64)
		[Column, NotNull] public byte     Status     { get; set; } // tinyint
		[Column, NotNull] public int      RefItemID  { get; set; } // int
		[Column, NotNull] public int      TidGroupID { get; set; } // int
		[Column, NotNull] public int      ItemClass  { get; set; } // int
		[Column, NotNull] public long     ItemID     { get; set; } // bigint
		[Column, NotNull] public int      SellCnt    { get; set; } // int
		[Column, NotNull] public DateTime RegDate    { get; set; } // smalldatetime
		[Column, NotNull] public DateTime EndDate    { get; set; } // smalldatetime
		[Column, NotNull] public long     Price      { get; set; } // bigint
		[Column, NotNull] public long     Deposit    { get; set; } // bigint
		[Column, NotNull] public long     SellFee    { get; set; } // bigint
		[Column, NotNull] public int      UseCash    { get; set; } // int
		[Column, NotNull] public long     Serial64   { get; set; } // bigint

		#region Associations

		/// <summary>
		/// FK__OpenMarket__ItemID
		/// </summary>
		[Association(ThisKey="ItemID", OtherKey="ID64", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__OpenMarket__ItemID", BackReferenceName="OpenMarketItemIds")]
		public Item OpenMarketItemID { get; set; }

		/// <summary>
		/// FK__OpenMarket__JID
		/// </summary>
		[Association(ThisKey="JID", OtherKey="JID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__OpenMarket__JID", BackReferenceName="OpenMarketJıds")]
		public AccountJID OpenMarketJID { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefAbilityByItemOptLevel")]
	public partial class RefAbilityByItemOptLevel
	{
		[Column,   NotNull] public byte Service      { get; set; } // tinyint
		[Identity         ] public int  ID           { get; set; } // int
		[Column,   NotNull] public int  RefItemID    { get; set; } // int
		[Column,   NotNull] public byte ItemOptLevel { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__RefMagicOptByItemOptLevel__RefAbilityByItemOptLevel_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Link", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefMagicOptByItemOptLevel> RefMagicOptByItemOptLevelRefAbilityByItemOptLevels { get; set; }

		/// <summary>
		/// FK__RefSkillByItemOptLevel__RefAbilityByItemOptLevel_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Link", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefSkillByItemOptLevel> RefSkillByItemOptLevelRefAbilityByItemOptLevels { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefAccessPermissionOfShop")]
	public partial class RefAccessPermissionOfShop
	{
		[Column(),                 NotNull] public byte   Service         { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country         { get; set; } // int
		[Column(),                 NotNull] public string RefShopCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   AcceptOrReject  { get; set; } // tinyint
		[Column(),                 NotNull] public int    FourCC          { get; set; } // int
		[Column(),                 NotNull] public int    Param1          { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2          { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3          { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4          { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128   { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefAccessPermissionOfShop__RefShopObject
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefAccessPermissionOfShop__RefShopObject", BackReferenceName="RefAccessPermissionOfShopRefShopObjects")]
		public RefShopObject RefAccessPermissionOfShopRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefAlchemyMerit")]
	public partial class RefAlchemyMerit
	{
		[Column, NotNull    ] public int    Service        { get; set; } // int
		[Column, NotNull    ] public byte   Group          { get; set; } // tinyint
		[Column, NotNull    ] public string OptName128     { get; set; } // varchar(129)
		[Column, NotNull    ] public byte   Level          { get; set; } // tinyint
		[Column, NotNull    ] public float  Weapon         { get; set; } // real
		[Column, NotNull    ] public float  Armor          { get; set; } // real
		[Column, NotNull    ] public float  Accessory      { get; set; } // real
		[Column, NotNull    ] public float  Shield         { get; set; } // real
		[Column,    Nullable] public long?  FreeParam1     { get; set; } // bigint
		[Column,    Nullable] public string FreeParamDesc1 { get; set; } // varchar(129)
		[Column,    Nullable] public long?  FreeParam2     { get; set; } // bigint
		[Column,    Nullable] public string FreeParamDesc2 { get; set; } // varchar(129)
		[Column,    Nullable] public long?  FreeParam3     { get; set; } // bigint
		[Column,    Nullable] public string FreeParamDesc3 { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefCharDefault_Quest")]
	public partial class RefCharDefaultQuest
	{
		[Column,   NotNull] public byte   Service       { get; set; } // tinyint
		[Identity         ] public int    ID            { get; set; } // int
		[Column,   NotNull] public byte   Race          { get; set; } // tinyint
		[Column,   NotNull] public string CodeName      { get; set; } // varchar(128)
		[Column,   NotNull] public byte   RequiredLevel { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefCharDefault_Skill")]
	public partial class RefCharDefaultSkill
	{
		[Column, NotNull] public byte Race    { get; set; } // tinyint
		[Column, NotNull] public int  SkillID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK___RefCharD__Skill__6C2CB870
		/// </summary>
		[Association(ThisKey="SkillID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK___RefCharD__Skill__6C2CB870", BackReferenceName="RefCharDSkill6C2Cbs")]
		public RefSkill RefCharDSkill6C2CB { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefCharDefault_SkillMastery")]
	public partial class RefCharDefaultSkillMastery
	{
		[Column, NotNull] public byte Race      { get; set; } // tinyint
		[Column, NotNull] public int  MasteryID { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefCharGen")]
	public partial class RefCharGen
	{
		[Column, NotNull] public int Service  { get; set; } // int
		[Column, NotNull] public int RefObjID { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefClimate")]
	public partial class RefClimate
	{
		[Column, NotNull] public int  ID               { get; set; } // int
		[Column, NotNull] public byte InitialWeather   { get; set; } // tinyint
		[Column, NotNull] public byte InitialAmount    { get; set; } // tinyint
		[Column, NotNull] public byte ChangeWeather    { get; set; } // tinyint
		[Column, NotNull] public byte Division         { get; set; } // tinyint
		[Column, NotNull] public int  Duration         { get; set; } // int
		[Column, NotNull] public int  DurationVariance { get; set; } // int
		[Column, NotNull] public byte Snowfall         { get; set; } // tinyint
		[Column, NotNull] public byte SnowfallVariance { get; set; } // tinyint
		[Column, NotNull] public byte ProbSnow         { get; set; } // tinyint
		[Column, NotNull] public byte Rainfall         { get; set; } // tinyint
		[Column, NotNull] public byte RainfallVariance { get; set; } // tinyint
		[Column, NotNull] public byte ProbRain         { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefCollectionBook_Item")]
	public partial class RefCollectionBookItem
	{
		[Column, NotNull] public byte   Service          { get; set; } // tinyint
		[Column, NotNull] public string CodeName128      { get; set; } // varchar(129)
		[Column, NotNull] public string ObjName128       { get; set; } // varchar(129)
		[Column, NotNull] public string ThemeCodeName128 { get; set; } // varchar(129)
		[Column, NotNull] public int    SlotIndex        { get; set; } // int
		[Column, NotNull] public string Story128         { get; set; } // varchar(129)
		[Column, NotNull] public string DDJFile128       { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefCollectionBook_Theme")]
	public partial class RefCollectionBookTheme
	{
		[Column, NotNull] public byte   Service     { get; set; } // tinyint
		[Column, NotNull] public int    ID          { get; set; } // int
		[Column, NotNull] public string CodeName128 { get; set; } // varchar(129)
		[Column, NotNull] public string ObjName128  { get; set; } // varchar(129)
		[Column, NotNull] public string Name128     { get; set; } // varchar(129)
		[Column, NotNull] public string Desc128     { get; set; } // varchar(129)
		[Column, NotNull] public int    CompleteNum { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefConditionToBuyScrapItem")]
	public partial class RefConditionToBuyScrapItem
	{
		[Column(),                 NotNull] public byte   Service         { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country         { get; set; } // int
		[Column(),                 NotNull] public byte   Cash            { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID1         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID2         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID3         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID4         { get; set; } // tinyint
		[Column(),                 NotNull] public string RefItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   AcceptOrReject  { get; set; } // tinyint
		[Column(),                 NotNull] public int    FourCC          { get; set; } // int
		[Column(),                 NotNull] public int    Param1          { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2          { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3          { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4          { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128   { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefConditionToBuyScrapItem__RefShopObject
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefConditionToBuyScrapItem__RefShopObject", BackReferenceName="RefConditionToBuyScrapItemRefShopObjects")]
		public RefShopObject RefConditionToBuyScrapItemRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefConditionToSellPackageItem")]
	public partial class RefConditionToSellPackageItem
	{
		[Column(),                 NotNull] public byte   Service                { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country                { get; set; } // int
		[Column(),                 NotNull] public string RefPackageItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   AcceptOrReject         { get; set; } // tinyint
		[Column(),                 NotNull] public int    FourCC                 { get; set; } // int
		[Column(),                 NotNull] public int    Param1                 { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2                 { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3                 { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4                 { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128          { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefConditionToSellPackageItem__RefShopObject
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefConditionToSellPackageItem__RefShopObject", BackReferenceName="RefConditionToSellPackageItemRefShopObjects")]
		public RefShopObject RefConditionToSellPackageItemRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefConditionToSellScrapItem")]
	public partial class RefConditionToSellScrapItem
	{
		[Column(),                 NotNull] public byte   Service         { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country         { get; set; } // int
		[Column(),                 NotNull] public byte   Cash            { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID1         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID2         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID3         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID4         { get; set; } // tinyint
		[Column(),                 NotNull] public string RefItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   AcceptOrReject  { get; set; } // tinyint
		[Column(),                 NotNull] public int    FourCC          { get; set; } // int
		[Column(),                 NotNull] public int    Param1          { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2          { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3          { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4          { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128   { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefConditionToSellScrapItem__RefShopObject
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefConditionToSellScrapItem__RefShopObject", BackReferenceName="RefConditionToSellScrapItemRefShopObjects")]
		public RefShopObject RefConditionToSellScrapItemRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefCustomizingReservedItemDropForMonster")]
	public partial class RefCustomizingReservedItemDropForMonster
	{
		[Column, NotNull    ] public int  RefMonsterID  { get; set; } // int
		[Column, NotNull    ] public byte Rarity        { get; set; } // tinyint
		[Column, NotNull    ] public int  Command       { get; set; } // int
		[Column, NotNull    ] public byte DropGroupType { get; set; } // tinyint
		[Column,    Nullable] public int? Param1        { get; set; } // int
		[Column,    Nullable] public int? Param2        { get; set; } // int
		[Column,    Nullable] public int? Param3        { get; set; } // int
		[Column,    Nullable] public int? Param4        { get; set; } // int
		[Column,    Nullable] public int? Param5        { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Alchemy_ATTRStone")]
	public partial class RefDropClassSelAlchemyATTRStone
	{
		[Column, NotNull] public int   MonLevel    { get; set; } // int
		[Column, NotNull] public float ProbGroup1  { get; set; } // real
		[Column, NotNull] public float ProbGroup2  { get; set; } // real
		[Column, NotNull] public float ProbGroup3  { get; set; } // real
		[Column, NotNull] public float ProbGroup4  { get; set; } // real
		[Column, NotNull] public float ProbGroup5  { get; set; } // real
		[Column, NotNull] public float ProbGroup6  { get; set; } // real
		[Column, NotNull] public float ProbGroup7  { get; set; } // real
		[Column, NotNull] public float ProbGroup8  { get; set; } // real
		[Column, NotNull] public float ProbGroup9  { get; set; } // real
		[Column, NotNull] public float ProbGroup10 { get; set; } // real
		[Column, NotNull] public float ProbGroup11 { get; set; } // real
		[Column, NotNull] public float ProbGroup12 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Alchemy_MagicStone")]
	public partial class RefDropClassSelAlchemyMagicStone
	{
		[Column, NotNull] public int   MonLevel    { get; set; } // int
		[Column, NotNull] public float ProbGroup1  { get; set; } // real
		[Column, NotNull] public float ProbGroup2  { get; set; } // real
		[Column, NotNull] public float ProbGroup3  { get; set; } // real
		[Column, NotNull] public float ProbGroup4  { get; set; } // real
		[Column, NotNull] public float ProbGroup5  { get; set; } // real
		[Column, NotNull] public float ProbGroup6  { get; set; } // real
		[Column, NotNull] public float ProbGroup7  { get; set; } // real
		[Column, NotNull] public float ProbGroup8  { get; set; } // real
		[Column, NotNull] public float ProbGroup9  { get; set; } // real
		[Column, NotNull] public float ProbGroup10 { get; set; } // real
		[Column, NotNull] public float ProbGroup11 { get; set; } // real
		[Column, NotNull] public float ProbGroup12 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Alchemy_Tablet")]
	public partial class RefDropClassSelAlchemyTablet
	{
		[Column, NotNull] public int   MonLevel    { get; set; } // int
		[Column, NotNull] public float ProbGroup1  { get; set; } // real
		[Column, NotNull] public float ProbGroup2  { get; set; } // real
		[Column, NotNull] public float ProbGroup3  { get; set; } // real
		[Column, NotNull] public float ProbGroup4  { get; set; } // real
		[Column, NotNull] public float ProbGroup5  { get; set; } // real
		[Column, NotNull] public float ProbGroup6  { get; set; } // real
		[Column, NotNull] public float ProbGroup7  { get; set; } // real
		[Column, NotNull] public float ProbGroup8  { get; set; } // real
		[Column, NotNull] public float ProbGroup9  { get; set; } // real
		[Column, NotNull] public float ProbGroup10 { get; set; } // real
		[Column, NotNull] public float ProbGroup11 { get; set; } // real
		[Column, NotNull] public float ProbGroup12 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Ammo")]
	public partial class RefDropClassSelAmmo
	{
		[Column, NotNull] public int   MonLevel   { get; set; } // int
		[Column, NotNull] public float ProbGroup1 { get; set; } // real
		[Column, NotNull] public float ProbGroup2 { get; set; } // real
		[Column, NotNull] public float ProbGroup3 { get; set; } // real
		[Column, NotNull] public float ProbGroup4 { get; set; } // real
		[Column, NotNull] public float ProbGroup5 { get; set; } // real
		[Column, NotNull] public float ProbGroup6 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Cure")]
	public partial class RefDropClassSelCure
	{
		[Column, NotNull    ] public int    MonLevel    { get; set; } // int
		[Column, NotNull    ] public float  ProbGroup1  { get; set; } // real
		[Column, NotNull    ] public float  ProbGroup2  { get; set; } // real
		[Column, NotNull    ] public float  ProbGroup3  { get; set; } // real
		[Column, NotNull    ] public float  ProbGroup4  { get; set; } // real
		[Column, NotNull    ] public float  ProbGroup5  { get; set; } // real
		[Column, NotNull    ] public float  ProbGroup6  { get; set; } // real
		[Column,    Nullable] public float? ProbGroup7  { get; set; } // real
		[Column,    Nullable] public float? ProbGroup8  { get; set; } // real
		[Column,    Nullable] public float? ProbGroup9  { get; set; } // real
		[Column,    Nullable] public float? ProbGroup10 { get; set; } // real
		[Column,    Nullable] public float? ProbGroup11 { get; set; } // real
		[Column,    Nullable] public float? ProbGroup12 { get; set; } // real
		[Column,    Nullable] public float? ProbGroup13 { get; set; } // real
		[Column,    Nullable] public float? ProbGroup14 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Equip")]
	public partial class RefDropClassSelEquip
	{
		[Column, NotNull] public int   MonLevel    { get; set; } // int
		[Column, NotNull] public float ProbGroup1  { get; set; } // real
		[Column, NotNull] public float ProbGroup2  { get; set; } // real
		[Column, NotNull] public float ProbGroup3  { get; set; } // real
		[Column, NotNull] public float ProbGroup4  { get; set; } // real
		[Column, NotNull] public float ProbGroup5  { get; set; } // real
		[Column, NotNull] public float ProbGroup6  { get; set; } // real
		[Column, NotNull] public float ProbGroup7  { get; set; } // real
		[Column, NotNull] public float ProbGroup8  { get; set; } // real
		[Column, NotNull] public float ProbGroup9  { get; set; } // real
		[Column, NotNull] public float ProbGroup10 { get; set; } // real
		[Column, NotNull] public float ProbGroup11 { get; set; } // real
		[Column, NotNull] public float ProbGroup12 { get; set; } // real
		[Column, NotNull] public float ProbGroup13 { get; set; } // real
		[Column, NotNull] public float ProbGroup14 { get; set; } // real
		[Column, NotNull] public float ProbGroup15 { get; set; } // real
		[Column, NotNull] public float ProbGroup16 { get; set; } // real
		[Column, NotNull] public float ProbGroup17 { get; set; } // real
		[Column, NotNull] public float ProbGroup18 { get; set; } // real
		[Column, NotNull] public float ProbGroup19 { get; set; } // real
		[Column, NotNull] public float ProbGroup20 { get; set; } // real
		[Column, NotNull] public float ProbGroup21 { get; set; } // real
		[Column, NotNull] public float ProbGroup22 { get; set; } // real
		[Column, NotNull] public float ProbGroup23 { get; set; } // real
		[Column, NotNull] public float ProbGroup24 { get; set; } // real
		[Column, NotNull] public float ProbGroup25 { get; set; } // real
		[Column, NotNull] public float ProbGroup26 { get; set; } // real
		[Column, NotNull] public float ProbGroup27 { get; set; } // real
		[Column, NotNull] public float ProbGroup28 { get; set; } // real
		[Column, NotNull] public float ProbGroup29 { get; set; } // real
		[Column, NotNull] public float ProbGroup30 { get; set; } // real
		[Column, NotNull] public float ProbGroup31 { get; set; } // real
		[Column, NotNull] public float ProbGroup32 { get; set; } // real
		[Column, NotNull] public float ProbGroup33 { get; set; } // real
		[Column, NotNull] public float ProbGroup34 { get; set; } // real
		[Column, NotNull] public float ProbGroup35 { get; set; } // real
		[Column, NotNull] public float ProbGroup36 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_RareEquip")]
	public partial class RefDropClassSelRareEquip
	{
		[Column, NotNull] public int   MonLevel    { get; set; } // int
		[Column, NotNull] public float ProbGroup1  { get; set; } // real
		[Column, NotNull] public float ProbGroup2  { get; set; } // real
		[Column, NotNull] public float ProbGroup3  { get; set; } // real
		[Column, NotNull] public float ProbGroup4  { get; set; } // real
		[Column, NotNull] public float ProbGroup5  { get; set; } // real
		[Column, NotNull] public float ProbGroup6  { get; set; } // real
		[Column, NotNull] public float ProbGroup7  { get; set; } // real
		[Column, NotNull] public float ProbGroup8  { get; set; } // real
		[Column, NotNull] public float ProbGroup9  { get; set; } // real
		[Column, NotNull] public float ProbGroup10 { get; set; } // real
		[Column, NotNull] public float ProbGroup11 { get; set; } // real
		[Column, NotNull] public float ProbGroup12 { get; set; } // real
		[Column, NotNull] public float ProbGroup13 { get; set; } // real
		[Column, NotNull] public float ProbGroup14 { get; set; } // real
		[Column, NotNull] public float ProbGroup15 { get; set; } // real
		[Column, NotNull] public float ProbGroup16 { get; set; } // real
		[Column, NotNull] public float ProbGroup17 { get; set; } // real
		[Column, NotNull] public float ProbGroup18 { get; set; } // real
		[Column, NotNull] public float ProbGroup19 { get; set; } // real
		[Column, NotNull] public float ProbGroup20 { get; set; } // real
		[Column, NotNull] public float ProbGroup21 { get; set; } // real
		[Column, NotNull] public float ProbGroup22 { get; set; } // real
		[Column, NotNull] public float ProbGroup23 { get; set; } // real
		[Column, NotNull] public float ProbGroup24 { get; set; } // real
		[Column, NotNull] public float ProbGroup25 { get; set; } // real
		[Column, NotNull] public float ProbGroup26 { get; set; } // real
		[Column, NotNull] public float ProbGroup27 { get; set; } // real
		[Column, NotNull] public float ProbGroup28 { get; set; } // real
		[Column, NotNull] public float ProbGroup29 { get; set; } // real
		[Column, NotNull] public float ProbGroup30 { get; set; } // real
		[Column, NotNull] public float ProbGroup31 { get; set; } // real
		[Column, NotNull] public float ProbGroup32 { get; set; } // real
		[Column, NotNull] public float ProbGroup33 { get; set; } // real
		[Column, NotNull] public float ProbGroup34 { get; set; } // real
		[Column, NotNull] public float ProbGroup35 { get; set; } // real
		[Column, NotNull] public float ProbGroup36 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Recover")]
	public partial class RefDropClassSelRecover
	{
		[Column, NotNull] public int   MonLevel   { get; set; } // int
		[Column, NotNull] public float ProbGroup1 { get; set; } // real
		[Column, NotNull] public float ProbGroup2 { get; set; } // real
		[Column, NotNull] public float ProbGroup3 { get; set; } // real
		[Column, NotNull] public float ProbGroup4 { get; set; } // real
		[Column, NotNull] public float ProbGroup5 { get; set; } // real
		[Column, NotNull] public float ProbGroup6 { get; set; } // real
		[Column, NotNull] public float ProbGroup7 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Reinforce")]
	public partial class RefDropClassSelReinforce
	{
		[Column, NotNull] public int   MonLevel   { get; set; } // int
		[Column, NotNull] public float ProbGroup1 { get; set; } // real
		[Column, NotNull] public float ProbGroup2 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropClassSel_Scroll")]
	public partial class RefDropClassSelScroll
	{
		[Column, NotNull] public int   MonLevel   { get; set; } // int
		[Column, NotNull] public float ProbGroup1 { get; set; } // real
		[Column, NotNull] public float ProbGroup2 { get; set; } // real
		[Column, NotNull] public float ProbGroup3 { get; set; } // real
	}

	[Table(Schema="dbo", Name="_RefDropGold")]
	public partial class RefDropGold
	{
		[Column, NotNull] public byte  MonLevel { get; set; } // tinyint
		[Column, NotNull] public float DropProb { get; set; } // real
		[Column, NotNull] public int   GoldMin  { get; set; } // int
		[Column, NotNull] public int   GoldMax  { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefDropItemAssign")]
	public partial class RefDropItemAssign
	{
		[Column(),                NotNull             ] public int Service       { get; set; } // int
		[Column(),                NotNull             ] public int RefItemID     { get; set; } // int
		[Column("Prob_Relative"), NotNull             ] public int ProbRelative  { get; set; } // int
		[Column("Prob_Absolute"), NotNull             ] public int ProbAbsolute  { get; set; } // int
		[Column(),                NotNull             ] public int AssignedGroup { get; set; } // int
		[Column(),                NotNull             ] public int DropCount     { get; set; } // int
		[Column(),                PrimaryKey, Identity] public int ID            { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefDropItemGroup")]
	public partial class RefDropItemGroup
	{
		[Column,     NotNull ] public byte   Service         { get; set; } // tinyint
		[Column,     NotNull ] public int    RefItemGroupID  { get; set; } // int
		[Column,     NotNull ] public string CodeName128     { get; set; } // varchar(129)
		[Column,     NotNull ] public int    RefItemID       { get; set; } // int
		[Column,     NotNull ] public float  SelectRatio     { get; set; } // real
		[Column,     NotNull ] public int    RefMagicGroupID { get; set; } // int
		[PrimaryKey, Identity] public int    ID              { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefDropOptLvlSel")]
	public partial class RefDropOptLvlSel
	{
		[Column, NotNull] public byte  OptLevel      { get; set; } // tinyint
		[Column, NotNull] public float Prob          { get; set; } // real
		[Column, NotNull] public int   ReqOnlineTime { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefDummySlot")]
	public partial class RefDummySlot
	{
		[Column("cnt"), NotNull] public byte Cnt { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefEvent")]
	public partial class RefEvent
	{
		[Column,   NotNull    ] public byte   Service       { get; set; } // tinyint
		[Identity             ] public int    ID            { get; set; } // int
		[Column,   NotNull    ] public string CodeName      { get; set; } // varchar(128)
		[Column,   NotNull    ] public string DescName      { get; set; } // varchar(128)
		[Column,      Nullable] public string ScheduleName  { get; set; } // varchar(128)
		[Column,   NotNull    ] public int    ScheduleCount { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefEventReward")]
	public partial class RefEventReward
	{
		[Column(),                          NotNull] public byte   Service          { get; set; } // tinyint
		[Column(),              PrimaryKey, NotNull] public int    EventID          { get; set; } // int
		[Column(),                          NotNull] public string EventCodeName    { get; set; } // varchar(128)
		[Column(),                          NotNull] public byte   IsView           { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsBasicReward    { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsItemReward     { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckCondition { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckCountry   { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckClass     { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckGender    { get; set; } // tinyint
		[Column(),                          NotNull] public int    Gold             { get; set; } // int
		[Column(),                          NotNull] public int    Exp              { get; set; } // int
		[Column(),                          NotNull] public int    SPExp            { get; set; } // int
		[Column(),                          NotNull] public int    SP               { get; set; } // int
		[Column(),                          NotNull] public byte   Hwan             { get; set; } // tinyint
		[Column(),                          NotNull] public byte   Inventory        { get; set; } // tinyint
		[Column(),                          NotNull] public byte   ItemRewardType   { get; set; } // tinyint
		[Column(),                          NotNull] public byte   SelectionCnt     { get; set; } // tinyint
		[Column(),                          NotNull] public int    Param1           { get; set; } // int
		[Column("Param1_Desc"),             NotNull] public string Param1Desc       { get; set; } // varchar(128)
		[Column(),                          NotNull] public int    Param2           { get; set; } // int
		[Column("Param2_Desc"),             NotNull] public string Param2Desc       { get; set; } // varchar(128)
		[Column(),                          NotNull] public int    Param3           { get; set; } // int
		[Column("Param3_Desc"),             NotNull] public string Param3Desc       { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefEventRewardItems")]
	public partial class RefEventRewardItem
	{
		[Column(),              NotNull] public byte   Service          { get; set; } // tinyint
		[Column(),              NotNull] public int    EventID          { get; set; } // int
		[Column(),              NotNull] public string EventCodeName    { get; set; } // varchar(128)
		[Column(),              NotNull] public string ItemCodeName     { get; set; } // varchar(128)
		[Column(),              NotNull] public int    PayCount         { get; set; } // int
		[Column(),              NotNull] public float  AchieveRatio     { get; set; } // real
		[Column(),              NotNull] public string RentItemCodeName { get; set; } // varchar(128)
		[Column(),              NotNull] public int    Param1           { get; set; } // int
		[Column("Param1_Desc"), NotNull] public string Param1Desc       { get; set; } // varchar(128)
		[Column(),              NotNull] public int    Param2           { get; set; } // int
		[Column("Param2_Desc"), NotNull] public string Param2Desc       { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefEventZone")]
	public partial class RefEventZone
	{
		[Column(),            NotNull              ] public int    Service   { get; set; } // int
		[Column(),            PrimaryKey,  Identity] public int    ID        { get; set; } // int
		[Column(),            NotNull              ] public string ZoneName  { get; set; } // varchar(128)
		[Column(),            NotNull              ] public string EventName { get; set; } // varchar(128)
		[Column(),               Nullable          ] public int?   Param1    { get; set; } // int
		[Column(),               Nullable          ] public int?   Param2    { get; set; } // int
		[Column(),               Nullable          ] public int?   Param3    { get; set; } // int
		[Column(),               Nullable          ] public int?   Param4    { get; set; } // int
		[Column(),               Nullable          ] public int?   Param5    { get; set; } // int
		[Column("strParam1"),    Nullable          ] public string StrParam1 { get; set; } // varchar(128)
		[Column("strParam2"),    Nullable          ] public string StrParam2 { get; set; } // varchar(128)
		[Column("strParam3"),    Nullable          ] public string StrParam3 { get; set; } // varchar(128)
		[Column("strParam4"),    Nullable          ] public string StrParam4 { get; set; } // varchar(128)
		[Column("strParam5"),    Nullable          ] public string StrParam5 { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefFmnCategoryTree")]
	public partial class RefFmnCategoryTree
	{
		[Column, NotNull] public byte   Service            { get; set; } // tinyint
		[Column, NotNull] public string CategoryName       { get; set; } // varchar(128)
		[Column, NotNull] public string StringID           { get; set; } // varchar(128)
		[Column, NotNull] public string ParentCategoryName { get; set; } // varchar(128)
		[Column, NotNull] public int    TidGroupID         { get; set; } // int
		[Column, NotNull] public byte   Degree             { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefFmnTidGroup")]
	public partial class RefFmnTidGroup
	{
		[Identity         ] public int    TidGroupID   { get; set; } // int
		[Column,   NotNull] public string TidGroupName { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefFmnTidGroupMap")]
	public partial class RefFmnTidGroupMap
	{
		[Column, NotNull] public byte Service    { get; set; } // tinyint
		[Column, NotNull] public int  TidGroupID { get; set; } // int
		[Column, NotNull] public byte TypeID1    { get; set; } // tinyint
		[Column, NotNull] public byte TypeID2    { get; set; } // tinyint
		[Column, NotNull] public byte TypeID3    { get; set; } // tinyint
		[Column, NotNull] public byte TypeID4    { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefGachaCode")]
	public partial class RefGachaCode
	{
		[Column,   NotNull] public string CodeName128 { get; set; } // varchar(129)
		[Identity         ] public int    GachaSetID  { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefGachaItemSet")]
	public partial class RefGachaItemSet
	{
		[Column(),                 NotNull ] public byte   Service       { get; set; } // tinyint
		[Column("Set_ID"),         NotNull ] public int    SetId         { get; set; } // int
		[Column(),                 NotNull ] public int    RefItemID     { get; set; } // int
		[Column(),                 NotNull ] public short  Ratio         { get; set; } // smallint
		[Column(),                 NotNull ] public short  Count         { get; set; } // smallint
		[Column(),                 Identity] public int    GachaID       { get; set; } // int
		[Column(),                 NotNull ] public byte   Visible       { get; set; } // tinyint
		[Column("param1"),         NotNull ] public int    Param1        { get; set; } // int
		[Column("param1_Desc128"), NotNull ] public string Param1Desc128 { get; set; } // varchar(129)
		[Column("param2"),         NotNull ] public int    Param2        { get; set; } // int
		[Column("param2_Desc128"), NotNull ] public string Param2Desc128 { get; set; } // varchar(129)
		[Column("param3"),         NotNull ] public int    Param3        { get; set; } // int
		[Column("param3_Desc128"), NotNull ] public string Param3Desc128 { get; set; } // varchar(129)
		[Column("param4"),         NotNull ] public int    Param4        { get; set; } // int
		[Column("param4_Desc128"), NotNull ] public string Param4Desc128 { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefGachaNpcMap")]
	public partial class RefGachaNpcMap
	{
		[Column(),                     NotNull] public byte Service          { get; set; } // tinyint
		[Column("NPC_ID"), PrimaryKey, NotNull] public int  NpcId            { get; set; } // int
		[Column(),                     NotNull] public int  SelectionGachaID { get; set; } // int
		[Column(),                     NotNull] public int  WasteGachaID     { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefGame_World")]
	public partial class RefGameWorld
	{
		[PrimaryKey, Identity] public int    ID                     { get; set; } // int
		[Column,     NotNull ] public string WorldCodeName128       { get; set; } // varchar(129)
		[Column,     NotNull ] public byte   Type                   { get; set; } // tinyint
		[Column,     NotNull ] public short  WorldMaxCount          { get; set; } // smallint
		[Column,     NotNull ] public short  WorldMaxUserCount      { get; set; } // smallint
		[Column,     NotNull ] public byte   WorldEntryType         { get; set; } // tinyint
		[Column,     NotNull ] public byte   WorldEntranceType      { get; set; } // tinyint
		[Column,     NotNull ] public byte   WorldLeaveType         { get; set; } // tinyint
		[Column,     NotNull ] public int    WorldDurationTime      { get; set; } // int
		[Column,     NotNull ] public int    WorldEmptyRemainTime   { get; set; } // int
		[Column,     NotNull ] public string ConfigGroupCodeName128 { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefGameWorldBindGroupGameWorld__RefGame_World_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="GameWorldID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefGameWorldBindGameWorldGroup> RefGameWorldBindGroupGameWorldRefGameWorlds { get; set; }

		/// <summary>
		/// FK__RefGameWorldBindTriggerCategory__RefGame_World_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="GameWorldID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefGameWorldBindTriggerCategory> RefGameWorldBindTriggerCategoryRefGameWorlds { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefGameWorldBindGameWorldGroup")]
	public partial class RefGameWorldBindGameWorldGroup
	{
		[Column,     NotNull ] public int Service          { get; set; } // int
		[PrimaryKey, Identity] public int ID               { get; set; } // int
		[Column,     NotNull ] public int GameWorldID      { get; set; } // int
		[Column,     NotNull ] public int GameWorldGroupID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefGameWorldBindGroupGameWorld__RefGame_World
		/// </summary>
		[Association(ThisKey="GameWorldID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefGameWorldBindGroupGameWorld__RefGame_World", BackReferenceName="RefGameWorldBindGroupGameWorldRefGameWorlds")]
		public RefGameWorld RefGameWorldBindGroupGameWorldRefGameWorld { get; set; }

		/// <summary>
		/// FK__RefGameWorldBindGroupGameWorld__RefGroupGameWorld
		/// </summary>
		[Association(ThisKey="GameWorldGroupID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefGameWorldBindGroupGameWorld__RefGroupGameWorld", BackReferenceName="RefGameWorldBindGroupGameWorldRefGroupGameWorlds")]
		public RefGameWorldGroup RefGameWorldBindGroupGameWorldRefGroupGameWorld { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefGameWorldBindTriggerCategory")]
	public partial class RefGameWorldBindTriggerCategory
	{
		[Column,     NotNull ] public int Service           { get; set; } // int
		[PrimaryKey, Identity] public int ID                { get; set; } // int
		[Column,     NotNull ] public int GameWorldID       { get; set; } // int
		[Column,     NotNull ] public int TriggerCategoryID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefGameWorldBindTriggerCategory__RefGame_World
		/// </summary>
		[Association(ThisKey="GameWorldID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefGameWorldBindTriggerCategory__RefGame_World", BackReferenceName="RefGameWorldBindTriggerCategoryRefGameWorlds")]
		public RefGameWorld RefGameWorldBindTriggerCategoryRefGameWorld { get; set; }

		/// <summary>
		/// FK__RefGameWorldBindTriggerCategory__RefTriggerCategory
		/// </summary>
		[Association(ThisKey="TriggerCategoryID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefGameWorldBindTriggerCategory__RefTriggerCategory", BackReferenceName="RefGameWorldBindTriggerCategoryRefTriggerCategories")]
		public RefTriggerCategory RefGameWorldBindTriggerCategoryRefTriggerCategory { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefGame_World_Config")]
	public partial class RefGameWorldConfig
	{
		[Column,   NotNull] public int    Service          { get; set; } // int
		[Identity         ] public int    ID               { get; set; } // int
		[Column,   NotNull] public string GroupCodeName128 { get; set; } // varchar(129)
		[Column,   NotNull] public string ValueCodeName128 { get; set; } // varchar(129)
		[Column,   NotNull] public string Value            { get; set; } // varchar(129)
		[Column,   NotNull] public string Type             { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="_RefGameWorldGroup")]
	public partial class RefGameWorldGroup
	{
		[PrimaryKey, Identity] public int    ID                     { get; set; } // int
		[Column,     NotNull ] public string CodeName128            { get; set; } // varchar(129)
		[Column,     NotNull ] public string ObjName128             { get; set; } // varchar(129)
		[Column,     NotNull ] public string ConfigGroupCodeName128 { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefGameWorldBindGroupGameWorld__RefGroupGameWorld_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="GameWorldGroupID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefGameWorldBindGameWorldGroup> RefGameWorldBindGroupGameWorldRefGroupGameWorlds { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefGameWorldGroup_Config")]
	public partial class RefGameWorldGroupConfig
	{
		[Column,     NotNull ] public int    Service          { get; set; } // int
		[PrimaryKey, Identity] public int    ID               { get; set; } // int
		[Column,     NotNull ] public string GroupCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string ValueCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string Value            { get; set; } // varchar(129)
		[Column,     NotNull ] public string Type             { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="_RefGameWorldNPC")]
	public partial class RefGameWorldNPC
	{
		[Identity             ] public int    ID               { get; set; } // int
		[Column,   NotNull    ] public string WorldCodeName128 { get; set; } // varchar(129)
		[Column,   NotNull    ] public string NPCCodeName128   { get; set; } // varchar(129)
		[Column,   NotNull    ] public short  RegionID         { get; set; } // smallint
		[Column,   NotNull    ] public short  PosX             { get; set; } // smallint
		[Column,   NotNull    ] public short  PosY             { get; set; } // smallint
		[Column,   NotNull    ] public short  PosZ             { get; set; } // smallint
		[Column,      Nullable] public int?   Param1           { get; set; } // int
		[Column,      Nullable] public int?   Param2           { get; set; } // int
		[Column,      Nullable] public int?   Param3           { get; set; } // int
		[Column,      Nullable] public int?   Param4           { get; set; } // int
		[Column,      Nullable] public int?   Param5           { get; set; } // int
		[Column,      Nullable] public int?   Param6           { get; set; } // int
		[Column,      Nullable] public int?   Param7           { get; set; } // int
		[Column,      Nullable] public int?   Param8           { get; set; } // int
		[Column,      Nullable] public int?   Param9           { get; set; } // int
		[Column,      Nullable] public int?   Param10          { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefHWANLevel")]
	public partial class RefHWANLevel
	{
		[Column(),             PrimaryKey, Identity] public byte   HwanLevel       { get; set; } // tinyint
		[Column(),             Nullable            ] public int?   ParamFourcc1    { get; set; } // int
		[Column(),             Nullable            ] public byte?  ParamValue1     { get; set; } // tinyint
		[Column(),             Nullable            ] public int?   ParamFourcc2    { get; set; } // int
		[Column(),             Nullable            ] public byte?  ParamValue2     { get; set; } // tinyint
		[Column(),             Nullable            ] public int?   ParamFourcc3    { get; set; } // int
		[Column(),             Nullable            ] public byte?  ParamValue3     { get; set; } // tinyint
		[Column(),             Nullable            ] public int?   ParamFourcc4    { get; set; } // int
		[Column(),             Nullable            ] public byte?  ParamValue4     { get; set; } // tinyint
		[Column(),             Nullable            ] public int?   ParamFourcc5    { get; set; } // int
		[Column(),             Nullable            ] public byte?  ParamValue5     { get; set; } // tinyint
		[Column(),             Nullable            ] public string AssocFileObj128 { get; set; } // varchar(129)
		[Column("Title_CH70"), Nullable            ] public string TitleCH70       { get; set; } // varchar(70)
		[Column("Title_EU70"), Nullable            ] public string TitleEU70       { get; set; } // varchar(70)
	}

	[Table(Schema="dbo", Name="_RefInstance_World_Region")]
	public partial class RefInstanceWorldRegion
	{
		[Column, NotNull] public int   WorldID  { get; set; } // int
		[Column, NotNull] public short RegionID { get; set; } // smallint
	}

	[Table(Schema="dbo", Name="_RefInstance_World_Start_Pos")]
	public partial class RefInstanceWorldStartPos
	{
		[Column, NotNull    ] public int   WorldID  { get; set; } // int
		[Column, NotNull    ] public short RegionID { get; set; } // smallint
		[Column, NotNull    ] public int   PosX     { get; set; } // int
		[Column, NotNull    ] public int   PosY     { get; set; } // int
		[Column, NotNull    ] public int   PosZ     { get; set; } // int
		[Column,    Nullable] public int?  Param    { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefLatestItemSerial")]
	public partial class RefLatestItemSerial
	{
		[Column, NotNull] public long LatestItemSerial { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="_RefLevel")]
	public partial class RefLevel
	{
		[Column(),                PrimaryKey,  NotNull] public byte Lvl          { get; set; } // tinyint
		[Column("Exp_C"),                      NotNull] public long ExpC         { get; set; } // bigint
		[Column("Exp_M"),                      NotNull] public int  ExpM         { get; set; } // int
		[Column("Cost_M"),                     NotNull] public int  CostM        { get; set; } // int
		[Column("Cost_ST"),                    NotNull] public int  CostSt       { get; set; } // int
		[Column("GUST_Mob_Exp"),               NotNull] public int  GustMobExp   { get; set; } // int
		[Column("JobExp_Trader"),    Nullable         ] public int? JobExpTrader { get; set; } // int
		[Column("JobExp_Robber"),    Nullable         ] public int? JobExpRobber { get; set; } // int
		[Column("JobExp_Hunter"),    Nullable         ] public int? JobExpHunter { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefMagicOpt")]
	public partial class RefMagicOpt
	{
		[Column,     NotNull    ] public int    Service          { get; set; } // int
		[PrimaryKey, Identity   ] public short  ID               { get; set; } // smallint
		[Column,     NotNull    ] public string MOptName128      { get; set; } // varchar(129)
		[Column,     NotNull    ] public string AttrType         { get; set; } // varchar(8)
		[Column,     NotNull    ] public int    MLevel           { get; set; } // int
		[Column,     NotNull    ] public float  Prob             { get; set; } // real
		[Column,     NotNull    ] public int    Weight           { get; set; } // int
		[Column,     NotNull    ] public int    Param1           { get; set; } // int
		[Column,     NotNull    ] public int    Param2           { get; set; } // int
		[Column,     NotNull    ] public int    Param3           { get; set; } // int
		[Column,     NotNull    ] public int    Param4           { get; set; } // int
		[Column,     NotNull    ] public int    Param5           { get; set; } // int
		[Column,     NotNull    ] public int    Param6           { get; set; } // int
		[Column,     NotNull    ] public int    Param7           { get; set; } // int
		[Column,     NotNull    ] public int    Param8           { get; set; } // int
		[Column,     NotNull    ] public int    Param9           { get; set; } // int
		[Column,     NotNull    ] public int    Param10          { get; set; } // int
		[Column,     NotNull    ] public int    Param11          { get; set; } // int
		[Column,     NotNull    ] public int    Param12          { get; set; } // int
		[Column,     NotNull    ] public int    Param13          { get; set; } // int
		[Column,     NotNull    ] public int    Param14          { get; set; } // int
		[Column,     NotNull    ] public int    Param15          { get; set; } // int
		[Column,     NotNull    ] public int    Param16          { get; set; } // int
		[Column,     NotNull    ] public int    ExcFunc1         { get; set; } // int
		[Column,     NotNull    ] public int    ExcFunc2         { get; set; } // int
		[Column,     NotNull    ] public int    ExcFunc3         { get; set; } // int
		[Column,     NotNull    ] public int    ExcFunc4         { get; set; } // int
		[Column,     NotNull    ] public int    ExcFunc5         { get; set; } // int
		[Column,     NotNull    ] public int    ExcFunc6         { get; set; } // int
		[Column,     NotNull    ] public string AvailItemGroup1  { get; set; } // varchar(129)
		[Column,     NotNull    ] public int    ReqClass1        { get; set; } // int
		[Column,     NotNull    ] public string AvailItemGroup2  { get; set; } // varchar(129)
		[Column,     NotNull    ] public int    ReqClass2        { get; set; } // int
		[Column,     NotNull    ] public string AvailItemGroup3  { get; set; } // varchar(129)
		[Column,     NotNull    ] public int    ReqClass3        { get; set; } // int
		[Column,     NotNull    ] public string AvailItemGroup4  { get; set; } // varchar(129)
		[Column,     NotNull    ] public int    ReqClass4        { get; set; } // int
		[Column,     NotNull    ] public string AvailItemGroup5  { get; set; } // varchar(129)
		[Column,     NotNull    ] public int    ReqClass5        { get; set; } // int
		[Column,        Nullable] public string AvailItemGroup6  { get; set; } // varchar(129)
		[Column,        Nullable] public int?   ReqClass6        { get; set; } // int
		[Column,        Nullable] public string AvailItemGroup7  { get; set; } // varchar(129)
		[Column,        Nullable] public int?   ReqClass7        { get; set; } // int
		[Column,        Nullable] public string AvailItemGroup8  { get; set; } // varchar(129)
		[Column,        Nullable] public int?   ReqClass8        { get; set; } // int
		[Column,        Nullable] public string AvailItemGroup9  { get; set; } // varchar(129)
		[Column,        Nullable] public int?   ReqClass9        { get; set; } // int
		[Column,        Nullable] public string AvailItemGroup10 { get; set; } // varchar(129)
		[Column,        Nullable] public int?   ReqClass10       { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefMagicOptByItemOptLevel__RefMagicOpt1_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="RefMagicOptID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefMagicOptByItemOptLevel> RefMagicOptByItemOptLevelRefMagicOpts { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefMagicOptAssign")]
	public partial class RefMagicOptAssign
	{
		[Column, NotNull] public int    Service     { get; set; } // int
		[Column, NotNull] public byte   Race        { get; set; } // tinyint
		[Column, NotNull] public byte   TID3        { get; set; } // tinyint
		[Column, NotNull] public byte   TID4        { get; set; } // tinyint
		[Column, NotNull] public string AvailMOpt1  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt2  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt3  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt4  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt5  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt6  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt7  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt8  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt9  { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt10 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt11 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt12 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt13 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt14 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt15 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt16 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt17 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt18 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt19 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt20 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt21 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt22 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt23 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt24 { get; set; } // varchar(129)
		[Column, NotNull] public string AvailMOpt25 { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefMagicOptByItemOptLevel")]
	public partial class RefMagicOptByItemOptLevel
	{
		[Column, NotNull] public int    Link            { get; set; } // int
		[Column, NotNull] public short  RefMagicOptID   { get; set; } // smallint
		[Column, NotNull] public int    MagicOptValue   { get; set; } // int
		[Column, NotNull] public byte   TooltipType     { get; set; } // tinyint
		[Column, NotNull] public string TooltipCodename { get; set; } // varchar(128)

		#region Associations

		/// <summary>
		/// FK__RefMagicOptByItemOptLevel__RefAbilityByItemOptLevel
		/// </summary>
		[Association(ThisKey="Link", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefMagicOptByItemOptLevel__RefAbilityByItemOptLevel", BackReferenceName="RefMagicOptByItemOptLevelRefAbilityByItemOptLevels")]
		public RefAbilityByItemOptLevel RefMagicOptByItemOptLevelRefAbilityByItemOptLevel { get; set; }

		/// <summary>
		/// FK__RefMagicOptByItemOptLevel__RefMagicOpt1
		/// </summary>
		[Association(ThisKey="RefMagicOptID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefMagicOptByItemOptLevel__RefMagicOpt1", BackReferenceName="RefMagicOptByItemOptLevelRefMagicOpts")]
		public RefMagicOpt RefMagicOptByItemOptLevelRefMagicOpt { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefMagicOptGroup")]
	public partial class RefMagicOptGroup
	{
		[Column(),              NotNull] public byte   Service     { get; set; } // tinyint
		[Column(),              NotNull] public int    LinkID      { get; set; } // int
		[Column(),              NotNull] public byte   MagicType   { get; set; } // tinyint
		[Column(),              NotNull] public string CodeName128 { get; set; } // varchar(129)
		[Column(),              NotNull] public int    MOptID      { get; set; } // int
		[Column(),              NotNull] public byte   MOptLevel   { get; set; } // tinyint
		[Column(),              NotNull] public int    Value       { get; set; } // int
		[Column(),              NotNull] public int    Param1      { get; set; } // int
		[Column("Param1_Desc"), NotNull] public string Param1Desc  { get; set; } // varchar(129)
		[Column(),              NotNull] public int    Param2      { get; set; } // int
		[Column("Param2_Desc"), NotNull] public string Param2Desc  { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefMappingShopGroup")]
	public partial class RefMappingShopGroup
	{
		[Column,     NotNull ] public byte   Service              { get; set; } // tinyint
		[Column,     NotNull ] public int    Country              { get; set; } // int
		[Column,     NotNull ] public string RefShopGroupCodeName { get; set; } // varchar(129)
		[Column,     NotNull ] public string RefShopCodeName      { get; set; } // varchar(129)
		[PrimaryKey, Identity] public int    ID                   { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefMappingShopWithTab")]
	public partial class RefMappingShopWithTab
	{
		[Column,     NotNull ] public byte   Service             { get; set; } // tinyint
		[Column,     NotNull ] public int    Country             { get; set; } // int
		[Column,     NotNull ] public string RefShopCodeName     { get; set; } // varchar(129)
		[Column,     NotNull ] public string RefTabGroupCodeName { get; set; } // varchar(129)
		[PrimaryKey, Identity] public int    ID                  { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefMonster_AssignedItemDrop")]
	public partial class RefMonsterAssignedItemDrop
	{
		[Column,     NotNull    ] public int    RefMonsterID      { get; set; } // int
		[Column,     NotNull    ] public int    RefItemID         { get; set; } // int
		[Column,     NotNull    ] public byte   DropGroupType     { get; set; } // tinyint
		[Column,     NotNull    ] public byte   OptLevel          { get; set; } // tinyint
		[Column,     NotNull    ] public byte   DropAmountMin     { get; set; } // tinyint
		[Column,     NotNull    ] public byte   DropAmountMax     { get; set; } // tinyint
		[Column,     NotNull    ] public float  DropRatio         { get; set; } // real
		[Column,        Nullable] public short? RefMagicOptionID1 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue1      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID2 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue2      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID3 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue3      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID4 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue4      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID5 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue5      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID6 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue6      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID7 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue7      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID8 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue8      { get; set; } // int
		[Column,        Nullable] public short? RefMagicOptionID9 { get; set; } // smallint
		[Column,        Nullable] public int?   CustomValue9      { get; set; } // int
		[Column,     NotNull    ] public string RentCodeName      { get; set; } // varchar(129)
		[PrimaryKey, Identity   ] public int    ID                { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefMonster_AssignedItemRndDrop")]
	public partial class RefMonsterAssignedItemRndDrop
	{
		[Column(),         NotNull             ] public byte   Service              { get; set; } // tinyint
		[Column(),         NotNull             ] public int    RefMonsterID         { get; set; } // int
		[Column(),         NotNull             ] public int    RefItemGroupID       { get; set; } // int
		[Column(),         NotNull             ] public string ItemGroupCodeName128 { get; set; } // varchar(128)
		[Column(),         NotNull             ] public byte   Overlap              { get; set; } // tinyint
		[Column(),         NotNull             ] public byte   DropAmountMin        { get; set; } // tinyint
		[Column(),         NotNull             ] public byte   DropAmountMax        { get; set; } // tinyint
		[Column(),         NotNull             ] public float  DropRatio            { get; set; } // real
		[Column("param1"), NotNull             ] public int    Param1               { get; set; } // int
		[Column("param2"), NotNull             ] public int    Param2               { get; set; } // int
		[Column(),         PrimaryKey, Identity] public int    ID                   { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefObjChar")]
	public partial class RefObjChar
	{
		[Column(),                  PrimaryKey,  Identity] public int   ID              { get; set; } // int
		[Column(),                  NotNull              ] public byte  Lvl             { get; set; } // tinyint
		[Column(),                  NotNull              ] public byte  CharGender      { get; set; } // tinyint
		[Column(),                  NotNull              ] public int   MaxHP           { get; set; } // int
		[Column(),                  NotNull              ] public int   MaxMP           { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistFrozen    { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistFrostbite { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistBurn      { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistEShock    { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistPoison    { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistZombie    { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistSleep     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistRoot      { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistSlow      { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistFear      { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistMyopia    { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistBlood     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistStone     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistDark      { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistStun      { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistDisea     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistChaos     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistCsePD     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistCseMD     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistCseSTR    { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistCseINT    { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistCseHP     { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistCseMP     { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist24        { get; set; } // int
		[Column(),                  NotNull              ] public int   ResistBomb      { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist26        { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist27        { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist28        { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist29        { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist30        { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist31        { get; set; } // int
		[Column(),                  NotNull              ] public int   Resist32        { get; set; } // int
		[Column(),                  NotNull              ] public byte  InventorySize   { get; set; } // tinyint
		[Column("CanStore_TID1"),   NotNull              ] public byte  CanStoreTID1    { get; set; } // tinyint
		[Column("CanStore_TID2"),   NotNull              ] public byte  CanStoreTID2    { get; set; } // tinyint
		[Column("CanStore_TID3"),   NotNull              ] public byte  CanStoreTID3    { get; set; } // tinyint
		[Column("CanStore_TID4"),   NotNull              ] public byte  CanStoreTID4    { get; set; } // tinyint
		[Column(),                  NotNull              ] public byte  CanBeVehicle    { get; set; } // tinyint
		[Column(),                  NotNull              ] public byte  CanControl      { get; set; } // tinyint
		[Column(),                  NotNull              ] public byte  DamagePortion   { get; set; } // tinyint
		[Column(),                  NotNull              ] public short MaxPassenger    { get; set; } // smallint
		[Column(),                  NotNull              ] public int   AssocTactics    { get; set; } // int
		[Column(),                  NotNull              ] public int   PD              { get; set; } // int
		[Column(),                  NotNull              ] public int   MD              { get; set; } // int
		[Column(),                  NotNull              ] public int   PAR             { get; set; } // int
		[Column(),                  NotNull              ] public int   MAR             { get; set; } // int
		[Column(),                  NotNull              ] public int   ER              { get; set; } // int
		[Column(),                  NotNull              ] public int   BR              { get; set; } // int
		[Column(),                  NotNull              ] public int   HR              { get; set; } // int
		[Column(),                  NotNull              ] public int   CHR             { get; set; } // int
		[Column(),                  NotNull              ] public int   ExpToGive       { get; set; } // int
		[Column(),                  NotNull              ] public int   CreepType       { get; set; } // int
		[Column(),                  NotNull              ] public byte  Knockdown       { get; set; } // tinyint
		[Column("KO_RecoverTime"),  NotNull              ] public int   KoRecoverTime   { get; set; } // int
		[Column("DefaultSkill_1"),     Nullable          ] public int?  DefaultSkill1   { get; set; } // int
		[Column("DefaultSkill_2"),     Nullable          ] public int?  DefaultSkill2   { get; set; } // int
		[Column("DefaultSkill_3"),     Nullable          ] public int?  DefaultSkill3   { get; set; } // int
		[Column("DefaultSkill_4"),     Nullable          ] public int?  DefaultSkill4   { get; set; } // int
		[Column("DefaultSkill_5"),     Nullable          ] public int?  DefaultSkill5   { get; set; } // int
		[Column("DefaultSkill_6"),     Nullable          ] public int?  DefaultSkill6   { get; set; } // int
		[Column("DefaultSkill_7"),     Nullable          ] public int?  DefaultSkill7   { get; set; } // int
		[Column("DefaultSkill_8"),     Nullable          ] public int?  DefaultSkill8   { get; set; } // int
		[Column("DefaultSkill_9"),     Nullable          ] public int?  DefaultSkill9   { get; set; } // int
		[Column("DefaultSkill_10"),    Nullable          ] public int?  DefaultSkill10  { get; set; } // int
		[Column(),                     Nullable          ] public byte? TextureType     { get; set; } // tinyint
		[Column("Except_1"),           Nullable          ] public int?  Except1         { get; set; } // int
		[Column("Except_2"),           Nullable          ] public int?  Except2         { get; set; } // int
		[Column("Except_3"),           Nullable          ] public int?  Except3         { get; set; } // int
		[Column("Except_4"),           Nullable          ] public int?  Except4         { get; set; } // int
		[Column("Except_5"),           Nullable          ] public int?  Except5         { get; set; } // int
		[Column("Except_6"),           Nullable          ] public int?  Except6         { get; set; } // int
		[Column("Except_7"),           Nullable          ] public int?  Except7         { get; set; } // int
		[Column("Except_8"),           Nullable          ] public int?  Except8         { get; set; } // int
		[Column("Except_9"),           Nullable          ] public int?  Except9         { get; set; } // int
		[Column("Except_10"),          Nullable          ] public int?  Except10        { get; set; } // int
		[Column(),                     Nullable          ] public int?  Link            { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefObjCharExtraSkill")]
	public partial class RefObjCharExtraSkill
	{
		[Column(),                Identity            ] public int  ID           { get; set; } // int
		[Column(),                PrimaryKey,  NotNull] public int  CharID       { get; set; } // int
		[Column("ExtraSkill_1"),     Nullable         ] public int? ExtraSkill1  { get; set; } // int
		[Column("ExtraSkill_2"),     Nullable         ] public int? ExtraSkill2  { get; set; } // int
		[Column("ExtraSkill_3"),     Nullable         ] public int? ExtraSkill3  { get; set; } // int
		[Column("ExtraSkill_4"),     Nullable         ] public int? ExtraSkill4  { get; set; } // int
		[Column("ExtraSkill_5"),     Nullable         ] public int? ExtraSkill5  { get; set; } // int
		[Column("ExtraSkill_6"),     Nullable         ] public int? ExtraSkill6  { get; set; } // int
		[Column("ExtraSkill_7"),     Nullable         ] public int? ExtraSkill7  { get; set; } // int
		[Column("ExtraSkill_8"),     Nullable         ] public int? ExtraSkill8  { get; set; } // int
		[Column("ExtraSkill_9"),     Nullable         ] public int? ExtraSkill9  { get; set; } // int
		[Column("ExtraSkill_10"),    Nullable         ] public int? ExtraSkill10 { get; set; } // int
		[Column("ExtraSkill_11"),    Nullable         ] public int? ExtraSkill11 { get; set; } // int
		[Column("ExtraSkill_12"),    Nullable         ] public int? ExtraSkill12 { get; set; } // int
		[Column("ExtraSkill_13"),    Nullable         ] public int? ExtraSkill13 { get; set; } // int
		[Column("ExtraSkill_14"),    Nullable         ] public int? ExtraSkill14 { get; set; } // int
		[Column("ExtraSkill_15"),    Nullable         ] public int? ExtraSkill15 { get; set; } // int
		[Column("ExtraSkill_16"),    Nullable         ] public int? ExtraSkill16 { get; set; } // int
		[Column("ExtraSkill_17"),    Nullable         ] public int? ExtraSkill17 { get; set; } // int
		[Column("ExtraSkill_18"),    Nullable         ] public int? ExtraSkill18 { get; set; } // int
		[Column("ExtraSkill_19"),    Nullable         ] public int? ExtraSkill19 { get; set; } // int
		[Column("ExtraSkill_20"),    Nullable         ] public int? ExtraSkill20 { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefObjCommon")]
	public partial class RefObjCommon
	{
		[Column(),                 NotNull ] public int    Service           { get; set; } // int
		[Column(),                 Identity] public int    ID                { get; set; } // int
		[Column(),                 NotNull ] public string CodeName128       { get; set; } // varchar(129)
		[Column(),                 NotNull ] public string ObjName128        { get; set; } // varchar(129)
		[Column(),                 NotNull ] public string OrgObjCodeName128 { get; set; } // varchar(129)
		[Column(),                 NotNull ] public string NameStrID128      { get; set; } // varchar(129)
		[Column(),                 NotNull ] public string DescStrID128      { get; set; } // varchar(129)
		[Column(),                 NotNull ] public byte   CashItem          { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   Bionic            { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   TypeID1           { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   TypeID2           { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   TypeID3           { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   TypeID4           { get; set; } // tinyint
		[Column(),                 NotNull ] public int    DecayTime         { get; set; } // int
		[Column(),                 NotNull ] public byte   Country           { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   Rarity            { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanTrade          { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanSell           { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanBuy            { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanBorrow         { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanDrop           { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanPick           { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanRepair         { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanRevive         { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanUse            { get; set; } // tinyint
		[Column(),                 NotNull ] public byte   CanThrow          { get; set; } // tinyint
		[Column(),                 NotNull ] public int    Price             { get; set; } // int
		[Column(),                 NotNull ] public int    CostRepair        { get; set; } // int
		[Column(),                 NotNull ] public int    CostRevive        { get; set; } // int
		[Column(),                 NotNull ] public int    CostBorrow        { get; set; } // int
		[Column(),                 NotNull ] public int    KeepingFee        { get; set; } // int
		[Column(),                 NotNull ] public int    SellPrice         { get; set; } // int
		[Column(),                 NotNull ] public int    ReqLevelType1     { get; set; } // int
		[Column(),                 NotNull ] public byte   ReqLevel1         { get; set; } // tinyint
		[Column(),                 NotNull ] public int    ReqLevelType2     { get; set; } // int
		[Column(),                 NotNull ] public byte   ReqLevel2         { get; set; } // tinyint
		[Column(),                 NotNull ] public int    ReqLevelType3     { get; set; } // int
		[Column(),                 NotNull ] public byte   ReqLevel3         { get; set; } // tinyint
		[Column(),                 NotNull ] public int    ReqLevelType4     { get; set; } // int
		[Column(),                 NotNull ] public byte   ReqLevel4         { get; set; } // tinyint
		[Column(),                 NotNull ] public int    MaxContain        { get; set; } // int
		[Column(),                 NotNull ] public short  RegionID          { get; set; } // smallint
		[Column(),                 NotNull ] public short  Dir               { get; set; } // smallint
		[Column(),                 NotNull ] public short  OffsetX           { get; set; } // smallint
		[Column(),                 NotNull ] public short  OffsetY           { get; set; } // smallint
		[Column(),                 NotNull ] public short  OffsetZ           { get; set; } // smallint
		[Column(),                 NotNull ] public short  Speed1            { get; set; } // smallint
		[Column(),                 NotNull ] public short  Speed2            { get; set; } // smallint
		[Column(),                 NotNull ] public int    Scale             { get; set; } // int
		[Column(),                 NotNull ] public short  BCHeight          { get; set; } // smallint
		[Column(),                 NotNull ] public short  BCRadius          { get; set; } // smallint
		[Column(),                 NotNull ] public int    EventID           { get; set; } // int
		[Column(),                 NotNull ] public string AssocFileObj128   { get; set; } // varchar(129)
		[Column(),                 NotNull ] public string AssocFileDrop128  { get; set; } // varchar(129)
		[Column(),                 NotNull ] public string AssocFileIcon128  { get; set; } // varchar(129)
		[Column("AssocFile1_128"), NotNull ] public string AssocFile1128     { get; set; } // varchar(129)
		[Column("AssocFile2_128"), NotNull ] public string AssocFile2128     { get; set; } // varchar(129)
		[Column(),                 NotNull ] public int    Link              { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefObjItem")]
	public partial class RefObjItem
	{
		[Column(),               PrimaryKey, Identity] public int    ID               { get; set; } // int
		[Column(),               NotNull             ] public int    MaxStack         { get; set; } // int
		[Column(),               NotNull             ] public byte   ReqGender        { get; set; } // tinyint
		[Column(),               NotNull             ] public int    ReqStr           { get; set; } // int
		[Column(),               NotNull             ] public int    ReqInt           { get; set; } // int
		[Column(),               NotNull             ] public byte   ItemClass        { get; set; } // tinyint
		[Column(),               NotNull             ] public int    SetID            { get; set; } // int
		[Column("Dur_L"),        NotNull             ] public float  DurL             { get; set; } // real
		[Column("Dur_U"),        NotNull             ] public float  DurU             { get; set; } // real
		[Column("PD_L"),         NotNull             ] public float  PdL              { get; set; } // real
		[Column("PD_U"),         NotNull             ] public float  PdU              { get; set; } // real
		[Column(),               NotNull             ] public float  PDInc            { get; set; } // real
		[Column("ER_L"),         NotNull             ] public float  ErL              { get; set; } // real
		[Column("ER_U"),         NotNull             ] public float  ErU              { get; set; } // real
		[Column(),               NotNull             ] public float  ERInc            { get; set; } // real
		[Column("PAR_L"),        NotNull             ] public float  ParL             { get; set; } // real
		[Column("PAR_U"),        NotNull             ] public float  ParU             { get; set; } // real
		[Column(),               NotNull             ] public float  PARInc           { get; set; } // real
		[Column("BR_L"),         NotNull             ] public float  BrL              { get; set; } // real
		[Column("BR_U"),         NotNull             ] public float  BrU              { get; set; } // real
		[Column("MD_L"),         NotNull             ] public float  MdL              { get; set; } // real
		[Column("MD_U"),         NotNull             ] public float  MdU              { get; set; } // real
		[Column(),               NotNull             ] public float  MDInc            { get; set; } // real
		[Column("MAR_L"),        NotNull             ] public float  MarL             { get; set; } // real
		[Column("MAR_U"),        NotNull             ] public float  MarU             { get; set; } // real
		[Column(),               NotNull             ] public float  MARInc           { get; set; } // real
		[Column("PDStr_L"),      NotNull             ] public float  PDStrL           { get; set; } // real
		[Column("PDStr_U"),      NotNull             ] public float  PDStrU           { get; set; } // real
		[Column("MDInt_L"),      NotNull             ] public float  MDIntL           { get; set; } // real
		[Column("MDInt_U"),      NotNull             ] public float  MDIntU           { get; set; } // real
		[Column(),               NotNull             ] public byte   Quivered         { get; set; } // tinyint
		[Column("Ammo1_TID4"),   NotNull             ] public byte   Ammo1TID4        { get; set; } // tinyint
		[Column("Ammo2_TID4"),   NotNull             ] public byte   Ammo2TID4        { get; set; } // tinyint
		[Column("Ammo3_TID4"),   NotNull             ] public byte   Ammo3TID4        { get; set; } // tinyint
		[Column("Ammo4_TID4"),   NotNull             ] public byte   Ammo4TID4        { get; set; } // tinyint
		[Column("Ammo5_TID4"),   NotNull             ] public byte   Ammo5TID4        { get; set; } // tinyint
		[Column(),               NotNull             ] public byte   SpeedClass       { get; set; } // tinyint
		[Column(),               NotNull             ] public byte   TwoHanded        { get; set; } // tinyint
		[Column(),               NotNull             ] public short  Range            { get; set; } // smallint
		[Column("PAttackMin_L"), NotNull             ] public float  PAttackMinL      { get; set; } // real
		[Column("PAttackMin_U"), NotNull             ] public float  PAttackMinU      { get; set; } // real
		[Column("PAttackMax_L"), NotNull             ] public float  PAttackMaxL      { get; set; } // real
		[Column("PAttackMax_U"), NotNull             ] public float  PAttackMaxU      { get; set; } // real
		[Column(),               NotNull             ] public float  PAttackInc       { get; set; } // real
		[Column("MAttackMin_L"), NotNull             ] public float  MAttackMinL      { get; set; } // real
		[Column("MAttackMin_U"), NotNull             ] public float  MAttackMinU      { get; set; } // real
		[Column("MAttackMax_L"), NotNull             ] public float  MAttackMaxL      { get; set; } // real
		[Column("MAttackMax_U"), NotNull             ] public float  MAttackMaxU      { get; set; } // real
		[Column(),               NotNull             ] public float  MAttackInc       { get; set; } // real
		[Column("PAStrMin_L"),   NotNull             ] public float  PAStrMinL        { get; set; } // real
		[Column("PAStrMin_U"),   NotNull             ] public float  PAStrMinU        { get; set; } // real
		[Column("PAStrMax_L"),   NotNull             ] public float  PAStrMaxL        { get; set; } // real
		[Column("PAStrMax_U"),   NotNull             ] public float  PAStrMaxU        { get; set; } // real
		[Column("MAInt_Min_L"),  NotNull             ] public float  MAIntMinL        { get; set; } // real
		[Column("MAInt_Min_U"),  NotNull             ] public float  MAIntMinU        { get; set; } // real
		[Column("MAInt_Max_L"),  NotNull             ] public float  MAIntMaxL        { get; set; } // real
		[Column("MAInt_Max_U"),  NotNull             ] public float  MAIntMaxU        { get; set; } // real
		[Column("HR_L"),         NotNull             ] public float  HrL              { get; set; } // real
		[Column("HR_U"),         NotNull             ] public float  HrU              { get; set; } // real
		[Column(),               NotNull             ] public float  HRInc            { get; set; } // real
		[Column("CHR_L"),        NotNull             ] public float  ChrL             { get; set; } // real
		[Column("CHR_U"),        NotNull             ] public float  ChrU             { get; set; } // real
		[Column(),               NotNull             ] public int    Param1           { get; set; } // int
		[Column("Desc1_128"),    NotNull             ] public string Desc1128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param2           { get; set; } // int
		[Column("Desc2_128"),    NotNull             ] public string Desc2128         { get; set; } // char(129)
		[Column(),               NotNull             ] public int    Param3           { get; set; } // int
		[Column("Desc3_128"),    NotNull             ] public string Desc3128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param4           { get; set; } // int
		[Column("Desc4_128"),    NotNull             ] public string Desc4128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param5           { get; set; } // int
		[Column("Desc5_128"),    NotNull             ] public string Desc5128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param6           { get; set; } // int
		[Column("Desc6_128"),    NotNull             ] public string Desc6128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param7           { get; set; } // int
		[Column("Desc7_128"),    NotNull             ] public string Desc7128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param8           { get; set; } // int
		[Column("Desc8_128"),    NotNull             ] public string Desc8128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param9           { get; set; } // int
		[Column("Desc9_128"),    NotNull             ] public string Desc9128         { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param10          { get; set; } // int
		[Column("Desc10_128"),   NotNull             ] public string Desc10128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param11          { get; set; } // int
		[Column("Desc11_128"),   NotNull             ] public string Desc11128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param12          { get; set; } // int
		[Column("Desc12_128"),   NotNull             ] public string Desc12128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param13          { get; set; } // int
		[Column("Desc13_128"),   NotNull             ] public string Desc13128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param14          { get; set; } // int
		[Column("Desc14_128"),   NotNull             ] public string Desc14128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param15          { get; set; } // int
		[Column("Desc15_128"),   NotNull             ] public string Desc15128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param16          { get; set; } // int
		[Column("Desc16_128"),   NotNull             ] public string Desc16128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param17          { get; set; } // int
		[Column("Desc17_128"),   NotNull             ] public string Desc17128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param18          { get; set; } // int
		[Column("Desc18_128"),   NotNull             ] public string Desc18128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param19          { get; set; } // int
		[Column("Desc19_128"),   NotNull             ] public string Desc19128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public int    Param20          { get; set; } // int
		[Column("Desc20_128"),   NotNull             ] public string Desc20128        { get; set; } // varchar(129)
		[Column(),               NotNull             ] public byte   MaxMagicOptCount { get; set; } // tinyint
		[Column(),               NotNull             ] public byte   ChildItemCount   { get; set; } // tinyint
		[Column(),               NotNull             ] public int    Link             { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefObjStruct")]
	public partial class RefObjStruct
	{
		[Column(),             PrimaryKey, Identity] public int ID        { get; set; } // int
		[Column("Dummy_Data"), NotNull             ] public int DummyData { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefOptionalTeleport")]
	public partial class RefOptionalTeleport
	{
		[Column(),                     Nullable          ] public int?   Service       { get; set; } // int
		[Column(),                  PrimaryKey,  Identity] public int    ID            { get; set; } // int
		[Column(),                  NotNull              ] public string ObjName128    { get; set; } // varchar(129)
		[Column(),                  NotNull              ] public string ZoneName128   { get; set; } // varchar(129)
		[Column(),                  NotNull              ] public short  RegionID      { get; set; } // smallint
		[Column("Pos_X"),           NotNull              ] public short  PosX          { get; set; } // smallint
		[Column("Pos_Y"),           NotNull              ] public short  PosY          { get; set; } // smallint
		[Column("Pos_Z"),           NotNull              ] public short  PosZ          { get; set; } // smallint
		[Column(),                     Nullable          ] public short? WorldID       { get; set; } // smallint
		[Column(),                     Nullable          ] public int?   RegionIDGroup { get; set; } // int
		[Column(),                     Nullable          ] public byte?  MapPoint      { get; set; } // tinyint
		[Column(),                     Nullable          ] public short? LevelMin      { get; set; } // smallint
		[Column(),                     Nullable          ] public short? LevelMax      { get; set; } // smallint
		[Column(),                     Nullable          ] public int?   Param1        { get; set; } // int
		[Column("Param1_Desc_128"),    Nullable          ] public string Param1Desc128 { get; set; } // varchar(129)
		[Column(),                     Nullable          ] public int?   Param2        { get; set; } // int
		[Column("Param2_Desc_128"),    Nullable          ] public string Param2Desc128 { get; set; } // varchar(129)
		[Column(),                     Nullable          ] public int?   Param3        { get; set; } // int
		[Column("Param3_Desc_128"),    Nullable          ] public string Param3Desc128 { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefPackageItem")]
	public partial class RefPackageItem
	{
		[Column(),                 NotNull] public byte   Service       { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country       { get; set; } // int
		[Column(),                 NotNull] public int    ID            { get; set; } // int
		[Column(),                 NotNull] public string CodeName128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public short  SaleTag       { get; set; } // smallint
		[Column(),                 NotNull] public string ExpandTerm    { get; set; } // varchar(65)
		[Column(),                 NotNull] public string NameStrID     { get; set; } // varchar(129)
		[Column(),                 NotNull] public string DescStrID     { get; set; } // varchar(129)
		[Column(),                 NotNull] public string AssocFileIcon { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param1        { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128 { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2        { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128 { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3        { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128 { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4        { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128 { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefPricePolicyOfItem")]
	public partial class RefPricePolicyOfItem
	{
		[Column(),                 NotNull              ] public byte   Service                { get; set; } // tinyint
		[Column(),                 NotNull              ] public int    Country                { get; set; } // int
		[Column(),                 NotNull              ] public string RefPackageItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull              ] public int    PaymentDevice          { get; set; } // int
		[Column(),                 NotNull              ] public int    PreviousCost           { get; set; } // int
		[Column(),                 NotNull              ] public int    Cost                   { get; set; } // int
		[Column(),                 NotNull              ] public int    Param1                 { get; set; } // int
		[Column("Param1_Desc128"), NotNull              ] public string Param1Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull              ] public int    Param2                 { get; set; } // int
		[Column("Param2_Desc128"), NotNull              ] public string Param2Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull              ] public int    Param3                 { get; set; } // int
		[Column("Param3_Desc128"),    Nullable          ] public string Param3Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull              ] public int    Param4                 { get; set; } // int
		[Column("Param4_Desc128"), NotNull              ] public string Param4Desc128          { get; set; } // varchar(129)
		[Column(),                 PrimaryKey,  Identity] public int    ID                     { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefQuest")]
	public partial class RefQuest
	{
		[Column,   NotNull] public byte   Service         { get; set; } // tinyint
		[Identity         ] public int    ID              { get; set; } // int
		[Column,   NotNull] public string CodeName        { get; set; } // varchar(128)
		[Column,   NotNull] public byte   Level           { get; set; } // tinyint
		[Column,   NotNull] public string DescName        { get; set; } // varchar(128)
		[Column,   NotNull] public string NameString      { get; set; } // varchar(128)
		[Column,   NotNull] public string PayString       { get; set; } // varchar(128)
		[Column,   NotNull] public string ContentsString  { get; set; } // varchar(128)
		[Column,   NotNull] public string PayContents     { get; set; } // varchar(128)
		[Column,   NotNull] public string NoticeNPC       { get; set; } // varchar(128)
		[Column,   NotNull] public string NoticeCondition { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefQuestReward")]
	public partial class RefQuestReward
	{
		[Column(),                          NotNull] public byte   Service          { get; set; } // tinyint
		[Column(),              PrimaryKey, NotNull] public int    QuestID          { get; set; } // int
		[Column(),                          NotNull] public string QuestCodeName    { get; set; } // varchar(128)
		[Column(),                          NotNull] public byte   IsView           { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsBasicReward    { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsItemReward     { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckCondition { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckCountry   { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckClass     { get; set; } // tinyint
		[Column(),                          NotNull] public byte   IsCheckGender    { get; set; } // tinyint
		[Column(),                          NotNull] public int    Gold             { get; set; } // int
		[Column(),                          NotNull] public int    Exp              { get; set; } // int
		[Column(),                          NotNull] public int    SPExp            { get; set; } // int
		[Column(),                          NotNull] public int    SP               { get; set; } // int
		[Column(),                          NotNull] public int    AP               { get; set; } // int
		[Column(),                          NotNull] public string APType           { get; set; } // varchar(128)
		[Column(),                          NotNull] public byte   Hwan             { get; set; } // tinyint
		[Column(),                          NotNull] public byte   Inventory        { get; set; } // tinyint
		[Column(),                          NotNull] public byte   ItemRewardType   { get; set; } // tinyint
		[Column(),                          NotNull] public byte   SelectionCnt     { get; set; } // tinyint
		[Column(),                          NotNull] public long   Param1           { get; set; } // bigint
		[Column("Param1_Desc"),             NotNull] public string Param1Desc       { get; set; } // varchar(128)
		[Column(),                          NotNull] public int    Param2           { get; set; } // int
		[Column("Param2_Desc"),             NotNull] public string Param2Desc       { get; set; } // varchar(128)
		[Column(),                          NotNull] public int    Param3           { get; set; } // int
		[Column("Param3_Desc"),             NotNull] public string Param3Desc       { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefQuestRewardItems")]
	public partial class RefQuestRewardItem
	{
		[Column(),              NotNull] public byte   Service          { get; set; } // tinyint
		[Column(),              NotNull] public int    QuestID          { get; set; } // int
		[Column(),              NotNull] public string QuestCodeName    { get; set; } // varchar(128)
		[Column(),              NotNull] public byte   RewardType       { get; set; } // tinyint
		[Column(),              NotNull] public string ItemCodeName     { get; set; } // varchar(128)
		[Column(),              NotNull] public string OptionalItemCode { get; set; } // varchar(128)
		[Column(),              NotNull] public int    OptionalItemCnt  { get; set; } // int
		[Column(),              NotNull] public int    AchieveQuantity  { get; set; } // int
		[Column(),              NotNull] public string RentItemCodeName { get; set; } // varchar(128)
		[Column(),              NotNull] public int    Param1           { get; set; } // int
		[Column("Param1_Desc"), NotNull] public string Param1Desc       { get; set; } // varchar(128)
		[Column(),              NotNull] public int    Param2           { get; set; } // int
		[Column("Param2_Desc"), NotNull] public string Param2Desc       { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefRegion")]
	public partial class RefRegion
	{
		[Column("wRegionID"),       PrimaryKey,  NotNull] public short  WRegionID      { get; set; } // smallint
		[Column(),                               NotNull] public byte   X              { get; set; } // tinyint
		[Column(),                               NotNull] public byte   Z              { get; set; } // tinyint
		[Column(),                               NotNull] public string ContinentName  { get; set; } // varchar(128)
		[Column(),                               NotNull] public string AreaName       { get; set; } // varchar(128)
		[Column(),                               NotNull] public byte   IsBattleField  { get; set; } // tinyint
		[Column(),                               NotNull] public int    Climate        { get; set; } // int
		[Column(),                               NotNull] public int    MaxCapacity    { get; set; } // int
		[Column(),                               NotNull] public int    AssocObjID     { get; set; } // int
		[Column(),                               NotNull] public int    AssocServer    { get; set; } // int
		[Column(),                               NotNull] public string AssocFile256   { get; set; } // varchar(256)
		[Column("LinkedRegion_1"),     Nullable         ] public int?   LinkedRegion1  { get; set; } // int
		[Column("LinkedRegion_2"),     Nullable         ] public int?   LinkedRegion2  { get; set; } // int
		[Column("LinkedRegion_3"),     Nullable         ] public int?   LinkedRegion3  { get; set; } // int
		[Column("LinkedRegion_4"),     Nullable         ] public int?   LinkedRegion4  { get; set; } // int
		[Column("LinkedRegion_5"),     Nullable         ] public int?   LinkedRegion5  { get; set; } // int
		[Column("LinkedRegion_6"),     Nullable         ] public int?   LinkedRegion6  { get; set; } // int
		[Column("LinkedRegion_7"),     Nullable         ] public int?   LinkedRegion7  { get; set; } // int
		[Column("LinkedRegion_8"),     Nullable         ] public int?   LinkedRegion8  { get; set; } // int
		[Column("LinkedRegion_9"),     Nullable         ] public int?   LinkedRegion9  { get; set; } // int
		[Column("LinkedRegion_10"),    Nullable         ] public int?   LinkedRegion10 { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefRegionBindAssocServer")]
	public partial class RefRegionBindAssocServer
	{
		[Column, NotNull] public string AreaName    { get; set; } // varchar(128)
		[Column, NotNull] public int    AssocServer { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefRentItem")]
	public partial class RefRentItem
	{
		[Column("service"),                NotNull] public int       Service      { get; set; } // int
		[Column(),          PrimaryKey(1), NotNull] public string    RentCodeName { get; set; } // varchar(129)
		[Column(),          PrimaryKey(2), NotNull] public int       RefItemID    { get; set; } // int
		[Column(),                         NotNull] public byte      CanDelete    { get; set; } // tinyint
		[Column(),                         NotNull] public byte      CnaRecharge  { get; set; } // tinyint
		[Column(),             Nullable           ] public int?      RentType     { get; set; } // int
		[Column(),             Nullable           ] public DateTime? StartTime    { get; set; } // smalldatetime
		[Column(),             Nullable           ] public DateTime? EndTime      { get; set; } // smalldatetime
		[Column(),             Nullable           ] public byte?     TimeCnt      { get; set; } // tinyint
		[Column(),             Nullable           ] public int?      Time1        { get; set; } // int
		[Column(),             Nullable           ] public int?      Time2        { get; set; } // int
		[Column(),             Nullable           ] public int?      Time3        { get; set; } // int
		[Column(),             Nullable           ] public int?      Time4        { get; set; } // int
		[Column(),             Nullable           ] public int?      Time5        { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefRewardPolicyToBuyScrapItem")]
	public partial class RefRewardPolicyToBuyScrapItem
	{
		[Column(),                 NotNull] public byte   Service         { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country         { get; set; } // int
		[Column(),                 NotNull] public byte   Cash            { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID1         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID2         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID3         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID4         { get; set; } // tinyint
		[Column(),                 NotNull] public string RefItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   AcceptOrReject  { get; set; } // tinyint
		[Column(),                 NotNull] public int    FourCC          { get; set; } // int
		[Column(),                 NotNull] public int    Param1          { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2          { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3          { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4          { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128   { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefRewardPolicyToBuyScrapItem__RefShopObject
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefRewardPolicyToBuyScrapItem__RefShopObject", BackReferenceName="RefRewardPolicyToBuyScrapItemRefShopObjects")]
		public RefShopObject RefRewardPolicyToBuyScrapItemRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefRewardPolicyToSellPackageItem")]
	public partial class RefRewardPolicyToSellPackageItem
	{
		[Column(),                                NotNull] public byte   Service                { get; set; } // tinyint
		[Column(),                 PrimaryKey(3), NotNull] public int    Country                { get; set; } // int
		[Column(),                 PrimaryKey(1), NotNull] public string RefPackageItemCodeName { get; set; } // varchar(129)
		[Column(),                                NotNull] public byte   AcceptOrReject         { get; set; } // tinyint
		[Column(),                 PrimaryKey(2), NotNull] public int    FourCC                 { get; set; } // int
		[Column(),                                NotNull] public int    Param1                 { get; set; } // int
		[Column("Param1_Desc128"),                NotNull] public string Param1Desc128          { get; set; } // varchar(129)
		[Column(),                                NotNull] public int    Param2                 { get; set; } // int
		[Column("Param2_Desc128"),                NotNull] public string Param2Desc128          { get; set; } // varchar(129)
		[Column(),                                NotNull] public int    Param3                 { get; set; } // int
		[Column("Param3_Desc128"),                NotNull] public string Param3Desc128          { get; set; } // varchar(129)
		[Column(),                                NotNull] public int    Param4                 { get; set; } // int
		[Column("Param4_Desc128"),                NotNull] public string Param4Desc128          { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefRewardPolicyToSellPackageItem__RefShopObject1
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefRewardPolicyToSellPackageItem__RefShopObject1", BackReferenceName="RefRewardPolicyToSellPackageItemRefShopObjects")]
		public RefShopObject RefRewardPolicyToSellPackageItemRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefRewardPolicyToSellScrapItem")]
	public partial class RefRewardPolicyToSellScrapItem
	{
		[Column(),                 NotNull] public byte   Service         { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country         { get; set; } // int
		[Column(),                 NotNull] public byte   Cash            { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID1         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID2         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID3         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID4         { get; set; } // tinyint
		[Column(),                 NotNull] public string RefItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   AcceptOrReject  { get; set; } // tinyint
		[Column(),                 NotNull] public int    FourCC          { get; set; } // int
		[Column(),                 NotNull] public int    Param1          { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2          { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3          { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4          { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128   { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefRewardPolicyToSellScrapItem__RefShopObject
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefRewardPolicyToSellScrapItem__RefShopObject", BackReferenceName="RefRewardPolicyToSellScrapItemRefShopObjects")]
		public RefShopObject RefRewardPolicyToSellScrapItemRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefScheduleDefine")]
	public partial class RefScheduleDefine
	{
		[PrimaryKey, Identity   ] public int    ScheduleDefineIdx { get; set; } // int
		[Column,     NotNull    ] public string ScheduleName      { get; set; } // varchar(124)
		[Column,        Nullable] public string Description       { get; set; } // varchar(2000)
	}

	[Table(Schema="dbo", Name="_RefScrapOfPackageItem")]
	public partial class RefScrapOfPackageItem
	{
		[Column(),                 NotNull] public byte   Service                { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country                { get; set; } // int
		[Column(),                 NotNull] public string RefPackageItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public string RefItemCodeName        { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   OptLevel               { get; set; } // tinyint
		[Column(),                 NotNull] public long   Variance               { get; set; } // bigint
		[Column(),                 NotNull] public int    Data                   { get; set; } // int
		[Column(),                 NotNull] public byte   MagParamNum            { get; set; } // tinyint
		[Column(),                 NotNull] public long   MagParam1              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam2              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam3              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam4              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam5              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam6              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam7              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam8              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam9              { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam10             { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam11             { get; set; } // bigint
		[Column(),                 NotNull] public long   MagParam12             { get; set; } // bigint
		[Column(),                 NotNull] public int    Param1                 { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2                 { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3                 { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4                 { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Index                  { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefServerEvent")]
	public partial class RefServerEvent
	{
		[Column,     NotNull] public byte     Service                         { get; set; } // tinyint
		[PrimaryKey, NotNull] public int      ID                              { get; set; } // int
		[Column,     NotNull] public byte     DetectingTargetType             { get; set; } // tinyint
		[Column,     NotNull] public int      DetectingTargetID               { get; set; } // int
		[Column,     NotNull] public string   Name                            { get; set; } // varchar(128)
		[Column,     NotNull] public DateTime BeginDate                       { get; set; } // datetime
		[Column,     NotNull] public DateTime EndDate                         { get; set; } // datetime
		[Column,     NotNull] public byte     NotificationTypeDetectingTarget { get; set; } // tinyint
		[Column,     NotNull] public byte     AchievementConditionType        { get; set; } // tinyint
		[Column,     NotNull] public short    AchievementConditionLevel       { get; set; } // smallint
		[Column,     NotNull] public int      AchievementCondition            { get; set; } // int
		[Column,     NotNull] public byte     RewardTarget                    { get; set; } // tinyint
		[Column,     NotNull] public int      GiveRewardDelayTime             { get; set; } // int
		[Column,     NotNull] public byte     ActivateClientUI                { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__RefServerEventReward__RefServerEvent_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="OwnerServerEventID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefServerEventReward> RefServerEventRewardRefServerEvents { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefServerEventReward")]
	public partial class RefServerEventReward
	{
		[Column,     NotNull ] public byte Service            { get; set; } // tinyint
		[PrimaryKey, Identity] public int  RewardID           { get; set; } // int
		[Column,     NotNull ] public int  OwnerServerEventID { get; set; } // int
		[Column,     NotNull ] public int  RefRewardID        { get; set; } // int
		[Column,     NotNull ] public byte Quantity           { get; set; } // tinyint
		[Column,     NotNull ] public byte RewardClass        { get; set; } // tinyint
		[Column,     NotNull ] public byte MasterReward       { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__RefServerEventReward_ExpUPForPlayers__RefServerEventReward_BackReference
		/// </summary>
		[Association(ThisKey="RewardID", OtherKey="OwnerRewardID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefServerEventRewardExpUPForPlayer> RefServerEventRewardExpUPForPlayersRefServerEventRewards { get; set; }

		/// <summary>
		/// FK__RefServerEventReward__RefServerEvent
		/// </summary>
		[Association(ThisKey="OwnerServerEventID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefServerEventReward__RefServerEvent", BackReferenceName="RefServerEventRewardRefServerEvents")]
		public RefServerEvent RefServerEventRewardRefServerEvent { get; set; }

		/// <summary>
		/// FK__RefServerEventReward_SpawnMonster__RefServerEventReward_BackReference
		/// </summary>
		[Association(ThisKey="RewardID", OtherKey="OwnerRewardID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefServerEventRewardSpawnMonster> RefServerEventRewardSpawnMonsterRefServerEventRewards { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefServerEventReward_ExpUPForPlayers")]
	public partial class RefServerEventRewardExpUPForPlayer
	{
		[Column, NotNull] public int  OwnerRewardID  { get; set; } // int
		[Column, NotNull] public int  ApplyTime      { get; set; } // int
		[Column, NotNull] public byte ApplyExpRatio  { get; set; } // tinyint
		[Column, NotNull] public byte ApplySExpRatio { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__RefServerEventReward_ExpUPForPlayers__RefServerEventReward
		/// </summary>
		[Association(ThisKey="OwnerRewardID", OtherKey="RewardID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefServerEventReward_ExpUPForPlayers__RefServerEventReward", BackReferenceName="RefServerEventRewardExpUPForPlayersRefServerEventRewards")]
		public RefServerEventReward RefServerEventRewardExpUPForPlayersRefServerEventReward { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefServerEventReward_SpawnMonster")]
	public partial class RefServerEventRewardSpawnMonster
	{
		[Column, NotNull] public int   OwnerRewardID { get; set; } // int
		[Column, NotNull] public int   RegionID      { get; set; } // int
		[Column, NotNull] public float PosX          { get; set; } // real
		[Column, NotNull] public float PosY          { get; set; } // real
		[Column, NotNull] public float PosZ          { get; set; } // real

		#region Associations

		/// <summary>
		/// FK__RefServerEventReward_SpawnMonster__RefServerEventReward
		/// </summary>
		[Association(ThisKey="OwnerRewardID", OtherKey="RewardID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefServerEventReward_SpawnMonster__RefServerEventReward", BackReferenceName="RefServerEventRewardSpawnMonsterRefServerEventRewards")]
		public RefServerEventReward RefServerEventRewardSpawnMonsterRefServerEventReward { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefSetItemGroup")]
	public partial class RefSetItemGroup
	{
		[Column(),                   NotNull ] public byte   Service           { get; set; } // tinyint
		[Column(),                   Identity] public int    ID                { get; set; } // int
		[Column(),                   NotNull ] public string CodeName128       { get; set; } // varchar(129)
		[Column(),                   NotNull ] public string ObjName128        { get; set; } // varchar(129)
		[Column(),                   NotNull ] public string NameStrID128      { get; set; } // varchar(129)
		[Column(),                   NotNull ] public string DescStrID128      { get; set; } // varchar(129)
		[Column(),                   NotNull ] public byte   SetEffectMask     { get; set; } // tinyint
		[Column(),                   NotNull ] public int    SetMagicMask      { get; set; } // int
		[Column("2SetMOptGroupID"),  NotNull ] public int    _2SetMOptGroupID  { get; set; } // int
		[Column("3SetMOptGroupID"),  NotNull ] public int    _3SetMOptGroupID  { get; set; } // int
		[Column("4SetMOptGroupID"),  NotNull ] public int    _4SetMOptGroupID  { get; set; } // int
		[Column("5SetMOptGroupID"),  NotNull ] public int    _5SetMOptGroupID  { get; set; } // int
		[Column("6SetMOptGroupID"),  NotNull ] public int    _6SetMOptGroupID  { get; set; } // int
		[Column("7SetMOptGroupID"),  NotNull ] public int    _7SetMOptGroupID  { get; set; } // int
		[Column("8SetMOptGroupID"),  NotNull ] public int    _8SetMOptGroupID  { get; set; } // int
		[Column("9SetMOptGroupID"),  NotNull ] public int    _9SetMOptGroupID  { get; set; } // int
		[Column("10SetMOptGroupID"), NotNull ] public int    _10SetMOptGroupID { get; set; } // int
		[Column("11SetMOptGroupID"), NotNull ] public int    _11SetMOptGroupID { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefShardContentConfig")]
	public partial class RefShardContentConfig
	{
		[Column,   NotNull    ] public int    Service     { get; set; } // int
		[Identity             ] public int    ID          { get; set; } // int
		[Column,   NotNull    ] public string CodeName128 { get; set; } // varchar(129)
		[Column,   NotNull    ] public string CodeDesc128 { get; set; } // varchar(129)
		[Column,   NotNull    ] public string Value       { get; set; } // varchar(129)
		[Column,      Nullable] public string Type        { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="_RefShop")]
	public partial class RefShop
	{
		[Column(),                 NotNull] public byte   Service       { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country       { get; set; } // int
		[Column(),                 NotNull] public int    ID            { get; set; } // int
		[Column(),                 NotNull] public string CodeName128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param1        { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128 { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2        { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128 { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3        { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128 { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4        { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128 { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefShopGoods")]
	public partial class RefShopGood
	{
		[Column(),                 NotNull             ] public byte   Service                { get; set; } // tinyint
		[Column(),                 NotNull             ] public int    Country                { get; set; } // int
		[Column(),                 NotNull             ] public string RefTabCodeName         { get; set; } // varchar(129)
		[Column(),                 NotNull             ] public string RefPackageItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull             ] public byte   SlotIndex              { get; set; } // tinyint
		[Column(),                 NotNull             ] public int    Param1                 { get; set; } // int
		[Column("Param1_Desc128"), NotNull             ] public string Param1Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull             ] public int    Param2                 { get; set; } // int
		[Column("Param2_Desc128"), NotNull             ] public string Param2Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull             ] public int    Param3                 { get; set; } // int
		[Column("Param3_Desc128"), NotNull             ] public string Param3Desc128          { get; set; } // varchar(129)
		[Column(),                 NotNull             ] public int    Param4                 { get; set; } // int
		[Column("Param4_Desc128"), NotNull             ] public string Param4Desc128          { get; set; } // varchar(129)
		[Column(),                 PrimaryKey, Identity] public int    ID                     { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefShopGroup")]
	public partial class RefShopGroup
	{
		[Column(),                 NotNull] public byte   Service        { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country        { get; set; } // int
		[Column(),                 NotNull] public short  ID             { get; set; } // smallint
		[Column(),                 NotNull] public string CodeName128    { get; set; } // varchar(129)
		[Column(),                 NotNull] public string RefNPCCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param1         { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128  { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2         { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128  { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3         { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128  { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4         { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128  { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefShopItemGroup")]
	public partial class RefShopItemGroup
	{
		[Column(),                 NotNull             ] public int    Service       { get; set; } // int
		[Column(),                 PrimaryKey, Identity] public int    GroupID       { get; set; } // int
		[Column(),                 NotNull             ] public string CodeName128   { get; set; } // varchar(129)
		[Column("StrID128_Group"), NotNull             ] public string StrID128Group { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefShopItemStockPeriod")]
	public partial class RefShopItemStockPeriod
	{
		[Column,        NotNull] public byte     Service                { get; set; } // tinyint
		[PrimaryKey(1), NotNull] public int      Country                { get; set; } // int
		[Identity              ] public int      ID                     { get; set; } // int
		[PrimaryKey(2), NotNull] public string   RefShopGroupCodeName   { get; set; } // varchar(129)
		[PrimaryKey(3), NotNull] public string   RefPackageItemCodeName { get; set; } // varchar(129)
		[Column,        NotNull] public DateTime StockOpeningDate       { get; set; } // smalldatetime
		[Column,        NotNull] public DateTime StockExpireDate        { get; set; } // smalldatetime
		[Column,        NotNull] public byte     PeriodDevice           { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefShopObject")]
	public partial class RefShopObject
	{
		[PrimaryKey, Identity] public int    ID          { get; set; } // int
		[Column,     NotNull ] public string CodeName128 { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefAccessPermissionOfShop__RefShopObject_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefAccessPermissionOfShop> RefAccessPermissionOfShopRefShopObjects { get; set; }

		/// <summary>
		/// FK__RefConditionToBuyScrapItem__RefShopObject_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefConditionToBuyScrapItem> RefConditionToBuyScrapItemRefShopObjects { get; set; }

		/// <summary>
		/// FK__RefConditionToSellPackageItem__RefShopObject_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefConditionToSellPackageItem> RefConditionToSellPackageItemRefShopObjects { get; set; }

		/// <summary>
		/// FK__RefConditionToSellScrapItem__RefShopObject_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefConditionToSellScrapItem> RefConditionToSellScrapItemRefShopObjects { get; set; }

		/// <summary>
		/// FK__RefRewardPolicyToBuyScrapItem__RefShopObject_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefRewardPolicyToBuyScrapItem> RefRewardPolicyToBuyScrapItemRefShopObjects { get; set; }

		/// <summary>
		/// FK__RefRewardPolicyToSellPackageItem__RefShopObject1_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefRewardPolicyToSellPackageItem> RefRewardPolicyToSellPackageItemRefShopObjects { get; set; }

		/// <summary>
		/// FK__RefRewardPolicyToSellScrapItem__RefShopObject_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefRewardPolicyToSellScrapItem> RefRewardPolicyToSellScrapItemRefShopObjects { get; set; }

		/// <summary>
		/// FK__RefTreatItemOfShop__RefShopObject_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="Country", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTreatItemOfShop> RefTreatItemOfShopRefShopObjects { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefShopTab")]
	public partial class RefShopTab
	{
		[Column(),               NotNull] public byte   Service             { get; set; } // tinyint
		[Column(),               NotNull] public int    Country             { get; set; } // int
		[Column(),               NotNull] public int    ID                  { get; set; } // int
		[Column(),               NotNull] public string CodeName128         { get; set; } // varchar(129)
		[Column(),               NotNull] public string RefTabGroupCodeName { get; set; } // varchar(129)
		[Column("StrID128_Tab"), NotNull] public string StrID128Tab         { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefShopTabGroup")]
	public partial class RefShopTabGroup
	{
		[Column(),                 NotNull] public byte   Service       { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country       { get; set; } // int
		[Column(),                 NotNull] public int    ID            { get; set; } // int
		[Column(),                 NotNull] public string CodeName128   { get; set; } // varchar(129)
		[Column("StrID128_Group"), NotNull] public string StrID128Group { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefSiegeBlessBuff")]
	public partial class RefSiegeBlessBuff
	{
		[Column,     NotNull    ] public byte  Service        { get; set; } // tinyint
		[PrimaryKey, Identity   ] public int   BlessID        { get; set; } // int
		[Column,     NotNull    ] public int   FortressID     { get; set; } // int
		[Column,     NotNull    ] public int   RefBlessBuffID { get; set; } // int
		[Column,        Nullable] public long? NeedGold       { get; set; } // bigint
		[Column,        Nullable] public int?  NeedGP         { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__FortressID
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__FortressID", BackReferenceName="FkFortressIDBackReferences")]
		public RefSiegeFortress FkFortressID { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefSiegeDungeon")]
	public partial class RefSiegeDungeon
	{
		[Column,     NotNull] public byte Service        { get; set; } // tinyint
		[PrimaryKey, NotNull] public int  FortressID     { get; set; } // int
		[Column,     NotNull] public int  WorldID        { get; set; } // int
		[Column,     NotNull] public byte MaxCreateCount { get; set; } // tinyint
		[Column,     NotNull] public long EntryGold      { get; set; } // bigint
		[Column,     NotNull] public int  EntryGP        { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefSiegeFortress")]
	public partial class RefSiegeFortress
	{
		[Column,     NotNull ] public byte   Service                { get; set; } // tinyint
		[PrimaryKey, Identity] public int    FortressID             { get; set; } // int
		[Column,     NotNull ] public string CodeName128            { get; set; } // varchar(129)
		[Column,     NotNull ] public string Name                   { get; set; } // varchar(129)
		[Column,     NotNull ] public string NameID128              { get; set; } // varchar(129)
		[Column,     NotNull ] public string LinkedTeleportCodeName { get; set; } // varchar(129)
		[Column,     NotNull ] public byte   Scale                  { get; set; } // tinyint
		[Column,     NotNull ] public short  MaxAdmission           { get; set; } // smallint
		[Column,     NotNull ] public byte   MaxGuard               { get; set; } // tinyint
		[Column,     NotNull ] public byte   MaxBarricade           { get; set; } // tinyint
		[Column,     NotNull ] public short  TaxTargets             { get; set; } // smallint
		[Column,     NotNull ] public int    RequestFee             { get; set; } // int
		[Column,     NotNull ] public string CrestPath128           { get; set; } // varchar(129)
		[Column,     NotNull ] public string RequestNPCName128      { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__FortressID_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefSiegeBlessBuff> FkFortressIDBackReferences { get; set; }

		/// <summary>
		/// FK__RefSiegeFortressRewards_FortressID_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefSiegeFortressReward> RefSiegeFortressRewardsFortressIds { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefSiegeFortressBattleRank")]
	public partial class RefSiegeFortressBattleRank
	{
		[Column,     NotNull] public byte   Service       { get; set; } // tinyint
		[PrimaryKey, NotNull] public byte   RankLvl       { get; set; } // tinyint
		[Column,     NotNull] public string RankName      { get; set; } // varchar(129)
		[Column,     NotNull] public int    ReqPKCount    { get; set; } // int
		[Column,     NotNull] public int    BindedSkillID { get; set; } // int
		[Column,     NotNull] public string CrestPath128  { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefSiegeFortressGuard")]
	public partial class RefSiegeFortressGuard
	{
		[Column,        NotNull] public byte Service       { get; set; } // tinyint
		[PrimaryKey(1), NotNull] public int  FortressID    { get; set; } // int
		[PrimaryKey(2), NotNull] public int  GuardRefObjID { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefSiegeFortressItemForge")]
	public partial class RefSiegeFortressItemForge
	{
		[Column,        NotNull] public byte Service      { get; set; } // tinyint
		[PrimaryKey(1), NotNull] public int  FortressID   { get; set; } // int
		[PrimaryKey(2), NotNull] public int  RefItemID    { get; set; } // int
		[Column,        NotNull] public int  ReqGold      { get; set; } // int
		[Column,        NotNull] public int  ReqGP        { get; set; } // int
		[Column,        NotNull] public int  ForgeTimeMin { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefSiegeFortressRewards")]
	public partial class RefSiegeFortressReward
	{
		[Column, NotNull] public byte Service      { get; set; } // tinyint
		[Column, NotNull] public int  FortressID   { get; set; } // int
		[Column, NotNull] public byte RewardTypeID { get; set; } // tinyint
		[Column, NotNull] public int  RewardValue  { get; set; } // int
		[Column, NotNull] public byte RewardCount  { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__RefSiegeFortressRewards_FortressID
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefSiegeFortressRewards_FortressID", BackReferenceName="RefSiegeFortressRewardsFortressIds")]
		public RefSiegeFortress RefSiegeFortressRewardsFortressID { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefSiegeLvlSummonMonster")]
	public partial class RefSiegeLvlSummonMonster
	{
		[Column,     NotNull] public byte Service     { get; set; } // tinyint
		[PrimaryKey, NotNull] public int  RefObjID    { get; set; } // int
		[Column,     NotNull] public int  RefOrgObjID { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefSiegeQuest")]
	public partial class RefSiegeQuest
	{
		[Column,     NotNull ] public byte   Service                    { get; set; } // tinyint
		[PrimaryKey, Identity] public int    QuestID                    { get; set; } // int
		[Column,     NotNull ] public string QuestName                  { get; set; } // varchar(129)
		[Column,     NotNull ] public byte   QuestType                  { get; set; } // tinyint
		[Column,     NotNull ] public byte   RewardConditionTargetCount { get; set; } // tinyint
		[Column,     NotNull ] public byte   IsAccumulation             { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefSiegeQuestReward")]
	public partial class RefSiegeQuestReward
	{
		[Column, NotNull] public byte Service     { get; set; } // tinyint
		[Column, NotNull] public int  QuestID     { get; set; } // int
		[Column, NotNull] public byte RewardType  { get; set; } // tinyint
		[Column, NotNull] public int  RewardRefID { get; set; } // int
		[Column, NotNull] public int  RewardValue { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefSiegeStructUpgrade")]
	public partial class RefSiegeStructUpgrade
	{
		[Column, NotNull] public byte   Service            { get; set; } // tinyint
		[Column, NotNull] public string Structname         { get; set; } // varchar(129)
		[Column, NotNull] public string BaseStructcodename { get; set; } // varchar(129)
		[Column, NotNull] public string UpgradeStructname1 { get; set; } // varchar(129)
		[Column, NotNull] public string UpgradeStructname2 { get; set; } // varchar(129)
		[Column, NotNull] public string UpgradeStructname3 { get; set; } // varchar(129)
		[Column, NotNull] public string UpgradeStructname4 { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_RefSkill")]
	public partial class RefSkill
	{
		[Column(),                           NotNull              ] public byte   Service                 { get; set; } // tinyint
		[Column(),                           PrimaryKey,  Identity] public int    ID                      { get; set; } // int
		[Column(),                           NotNull              ] public int    GroupID                 { get; set; } // int
		[Column("Basic_Code"),               NotNull              ] public string BasicCode               { get; set; } // varchar(128)
		[Column("Basic_Name"),               NotNull              ] public string BasicName               { get; set; } // varchar(128)
		[Column("Basic_Group"),              NotNull              ] public string BasicGroup              { get; set; } // varchar(128)
		[Column("Basic_Original"),           NotNull              ] public int    BasicOriginal           { get; set; } // int
		[Column("Basic_Level"),              NotNull              ] public byte   BasicLevel              { get; set; } // tinyint
		[Column("Basic_Activity"),           NotNull              ] public byte   BasicActivity           { get; set; } // tinyint
		[Column("Basic_ChainCode"),          NotNull              ] public int    BasicChainCode          { get; set; } // int
		[Column("Basic_RecycleCost"),        NotNull              ] public int    BasicRecycleCost        { get; set; } // int
		[Column("Action_PreparingTime"),     NotNull              ] public int    ActionPreparingTime     { get; set; } // int
		[Column("Action_CastingTime"),       NotNull              ] public int    ActionCastingTime       { get; set; } // int
		[Column("Action_ActionDuration"),    NotNull              ] public int    ActionActionDuration    { get; set; } // int
		[Column("Action_ReuseDelay"),        NotNull              ] public int    ActionReuseDelay        { get; set; } // int
		[Column("Action_CoolTime"),          NotNull              ] public int    ActionCoolTime          { get; set; } // int
		[Column("Action_FlyingSpeed"),       NotNull              ] public int    ActionFlyingSpeed       { get; set; } // int
		[Column("Action_Interruptable"),     NotNull              ] public byte   ActionInterruptable     { get; set; } // tinyint
		[Column("Action_Overlap"),           NotNull              ] public int    ActionOverlap           { get; set; } // int
		[Column("Action_AutoAttackType"),    NotNull              ] public byte   ActionAutoAttackType    { get; set; } // tinyint
		[Column("Action_InTown"),            NotNull              ] public byte   ActionInTown            { get; set; } // tinyint
		[Column("Action_Range"),             NotNull              ] public short  ActionRange             { get; set; } // smallint
		[Column("Target_Required"),          NotNull              ] public byte   TargetRequired          { get; set; } // tinyint
		[Column("TargetType_Animal"),        NotNull              ] public byte   TargetTypeAnimal        { get; set; } // tinyint
		[Column("TargetType_Land"),          NotNull              ] public byte   TargetTypeLand          { get; set; } // tinyint
		[Column("TargetType_Building"),      NotNull              ] public byte   TargetTypeBuilding      { get; set; } // tinyint
		[Column("TargetGroup_Self"),         NotNull              ] public byte   TargetGroupSelf         { get; set; } // tinyint
		[Column("TargetGroup_Ally"),         NotNull              ] public byte   TargetGroupAlly         { get; set; } // tinyint
		[Column("TargetGroup_Party"),        NotNull              ] public byte   TargetGroupParty        { get; set; } // tinyint
		[Column("TargetGroup_Enemy_M"),      NotNull              ] public byte   TargetGroupEnemyM       { get; set; } // tinyint
		[Column("TargetGroup_Enemy_P"),      NotNull              ] public byte   TargetGroupEnemyP       { get; set; } // tinyint
		[Column("TargetGroup_Neutral"),      NotNull              ] public byte   TargetGroupNeutral      { get; set; } // tinyint
		[Column("TargetGroup_DontCare"),     NotNull              ] public byte   TargetGroupDontCare     { get; set; } // tinyint
		[Column("TargetEtc_SelectDeadBody"), NotNull              ] public byte   TargetEtcSelectDeadBody { get; set; } // tinyint
		[Column("ReqCommon_Mastery1"),       NotNull              ] public int    ReqCommonMastery1       { get; set; } // int
		[Column("ReqCommon_Mastery2"),       NotNull              ] public int    ReqCommonMastery2       { get; set; } // int
		[Column("ReqCommon_MasteryLevel1"),  NotNull              ] public byte   ReqCommonMasteryLevel1  { get; set; } // tinyint
		[Column("ReqCommon_MasteryLevel2"),  NotNull              ] public byte   ReqCommonMasteryLevel2  { get; set; } // tinyint
		[Column("ReqCommon_Str"),            NotNull              ] public short  ReqCommonStr            { get; set; } // smallint
		[Column("ReqCommon_Int"),            NotNull              ] public short  ReqCommonInt            { get; set; } // smallint
		[Column("ReqLearn_Skill1"),          NotNull              ] public int    ReqLearnSkill1          { get; set; } // int
		[Column("ReqLearn_Skill2"),          NotNull              ] public int    ReqLearnSkill2          { get; set; } // int
		[Column("ReqLearn_Skill3"),          NotNull              ] public int    ReqLearnSkill3          { get; set; } // int
		[Column("ReqLearn_SkillLevel1"),     NotNull              ] public byte   ReqLearnSkillLevel1     { get; set; } // tinyint
		[Column("ReqLearn_SkillLevel2"),     NotNull              ] public byte   ReqLearnSkillLevel2     { get; set; } // tinyint
		[Column("ReqLearn_SkillLevel3"),     NotNull              ] public byte   ReqLearnSkillLevel3     { get; set; } // tinyint
		[Column("ReqLearn_SP"),              NotNull              ] public int    ReqLearnSp              { get; set; } // int
		[Column("ReqLearn_Race"),            NotNull              ] public byte   ReqLearnRace            { get; set; } // tinyint
		[Column("Req_Restriction1"),         NotNull              ] public byte   ReqRestriction1         { get; set; } // tinyint
		[Column("Req_Restriction2"),         NotNull              ] public byte   ReqRestriction2         { get; set; } // tinyint
		[Column("ReqCast_Weapon1"),          NotNull              ] public byte   ReqCastWeapon1          { get; set; } // tinyint
		[Column("ReqCast_Weapon2"),          NotNull              ] public byte   ReqCastWeapon2          { get; set; } // tinyint
		[Column("Consume_HP"),               NotNull              ] public short  ConsumeHp               { get; set; } // smallint
		[Column("Consume_MP"),               NotNull              ] public short  ConsumeMp               { get; set; } // smallint
		[Column("Consume_HPRatio"),          NotNull              ] public short  ConsumeHPRatio          { get; set; } // smallint
		[Column("Consume_MPRatio"),          NotNull              ] public short  ConsumeMPRatio          { get; set; } // smallint
		[Column("Consume_WHAN"),             NotNull              ] public byte   ConsumeWhan             { get; set; } // tinyint
		[Column("UI_SkillTab"),              NotNull              ] public byte   UıSkillTab              { get; set; } // tinyint
		[Column("UI_SkillPage"),             NotNull              ] public byte   UıSkillPage             { get; set; } // tinyint
		[Column("UI_SkillColumn"),           NotNull              ] public byte   UıSkillColumn           { get; set; } // tinyint
		[Column("UI_SkillRow"),              NotNull              ] public byte   UıSkillRow              { get; set; } // tinyint
		[Column("UI_IconFile"),              NotNull              ] public string UıIconFile              { get; set; } // varchar(128)
		[Column("UI_SkillName"),             NotNull              ] public string UıSkillName             { get; set; } // varchar(128)
		[Column("UI_SkillToolTip"),          NotNull              ] public string UıSkillToolTip          { get; set; } // varchar(128)
		[Column("UI_SkillToolTip_Desc"),     NotNull              ] public string UıSkillToolTipDesc      { get; set; } // varchar(128)
		[Column("UI_SkillStudy_Desc"),       NotNull              ] public string UıSkillStudyDesc        { get; set; } // varchar(128)
		[Column("AI_AttackChance"),          NotNull              ] public short  AıAttackChance          { get; set; } // smallint
		[Column("AI_SkillType"),             NotNull              ] public byte   AıSkillType             { get; set; } // tinyint
		[Column(),                           NotNull              ] public int    Param1                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param2                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param3                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param4                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param5                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param6                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param7                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param8                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param9                  { get; set; } // int
		[Column(),                           NotNull              ] public int    Param10                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param11                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param12                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param13                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param14                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param15                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param16                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param17                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param18                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param19                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param20                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param21                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param22                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param23                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param24                 { get; set; } // int
		[Column(),                           NotNull              ] public int    Param25                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param26                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param27                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param28                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param29                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param30                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param31                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param32                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param33                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param34                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param35                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param36                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param37                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param38                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param39                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param40                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param41                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param42                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param43                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param44                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param45                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param46                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param47                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param48                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param49                 { get; set; } // int
		[Column(),                              Nullable          ] public int?   Param50                 { get; set; } // int

		#region Associations

		/// <summary>
		/// FK___RefCharD__Skill__6C2CB870_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="SkillID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefCharDefaultSkill> RefCharDSkill6C2Cbs { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefSkillByItemOptLevel")]
	public partial class RefSkillByItemOptLevel
	{
		[Column, NotNull] public int Link       { get; set; } // int
		[Column, NotNull] public int RefSkillID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefSkillByItemOptLevel__RefAbilityByItemOptLevel
		/// </summary>
		[Association(ThisKey="Link", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefSkillByItemOptLevel__RefAbilityByItemOptLevel", BackReferenceName="RefSkillByItemOptLevelRefAbilityByItemOptLevels")]
		public RefAbilityByItemOptLevel RefSkillByItemOptLevelRefAbilityByItemOptLevel { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefSkillGroup")]
	public partial class RefSkillGroup
	{
		[PrimaryKey, Identity] public int    ID   { get; set; } // int
		[Column,     NotNull ] public string Code { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="_RefSkillMastery")]
	public partial class RefSkillMastery
	{
		[PrimaryKey, NotNull] public int    ID     { get; set; } // int
		[Column,     NotNull] public string Code   { get; set; } // varchar(32)
		[Column,     NotNull] public byte   Weapon { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefTeleLink")]
	public partial class RefTeleLink
	{
		[Column(),          NotNull              ] public int  Service               { get; set; } // int
		[Column(),          NotNull              ] public int  OwnerTeleport         { get; set; } // int
		[Column(),          NotNull              ] public int  TargetTeleport        { get; set; } // int
		[Column(),          NotNull              ] public int  Fee                   { get; set; } // int
		[Column(),          NotNull              ] public byte RestrictBindMethod    { get; set; } // tinyint
		[Column(),          NotNull              ] public byte RunTimeTeleportMethod { get; set; } // tinyint
		[Column(),          NotNull              ] public byte CheckResult           { get; set; } // tinyint
		[Column(),          NotNull              ] public int  Restrict1             { get; set; } // int
		[Column("Data1_1"),    Nullable          ] public int? Data11                { get; set; } // int
		[Column("Data1_2"),    Nullable          ] public int? Data12                { get; set; } // int
		[Column(),          NotNull              ] public int  Restrict2             { get; set; } // int
		[Column("Data2_1"),    Nullable          ] public int? Data21                { get; set; } // int
		[Column("Data2_2"),    Nullable          ] public int? Data22                { get; set; } // int
		[Column(),          NotNull              ] public int  Restrict3             { get; set; } // int
		[Column("Data3_1"),    Nullable          ] public int? Data31                { get; set; } // int
		[Column("Data3_2"),    Nullable          ] public int? Data32                { get; set; } // int
		[Column(),          NotNull              ] public int  Restrict4             { get; set; } // int
		[Column("Data4_1"),    Nullable          ] public int? Data41                { get; set; } // int
		[Column("Data4_2"),    Nullable          ] public int? Data42                { get; set; } // int
		[Column(),          NotNull              ] public int  Restrict5             { get; set; } // int
		[Column("Data5_1"),    Nullable          ] public int? Data51                { get; set; } // int
		[Column("Data5_2"),    Nullable          ] public int? Data52                { get; set; } // int
		[Column(),          PrimaryKey,  Identity] public int  ID                    { get; set; } // int
	}

	[Table(Schema="dbo", Name="_RefTeleport")]
	public partial class RefTeleport
	{
		[Column(),           NotNull              ] public int    Service                { get; set; } // int
		[Column(),           PrimaryKey,  Identity] public int    ID                     { get; set; } // int
		[Column(),           NotNull              ] public string CodeName128            { get; set; } // varchar(129)
		[Column(),              Nullable          ] public string AssocRefObjCodeName128 { get; set; } // varchar(129)
		[Column(),           NotNull              ] public int    AssocRefObjID          { get; set; } // int
		[Column(),           NotNull              ] public string ZoneName128            { get; set; } // varchar(129)
		[Column(),           NotNull              ] public short  GenRegionID            { get; set; } // smallint
		[Column("GenPos_X"), NotNull              ] public short  GenPosX                { get; set; } // smallint
		[Column("GenPos_Y"), NotNull              ] public short  GenPosY                { get; set; } // smallint
		[Column("GenPos_Z"), NotNull              ] public short  GenPosZ                { get; set; } // smallint
		[Column(),           NotNull              ] public short  GenAreaRadius          { get; set; } // smallint
		[Column(),           NotNull              ] public byte   CanBeResurrectPos      { get; set; } // tinyint
		[Column(),           NotNull              ] public byte   CanGotoResurrectPos    { get; set; } // tinyint
		[Column(),           NotNull              ] public short  GenWorldID             { get; set; } // smallint
		[Column(),           NotNull              ] public byte   BindInteractionMask    { get; set; } // tinyint
		[Column(),           NotNull              ] public byte   FixedService           { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_RefTreatItemOfShop")]
	public partial class RefTreatItemOfShop
	{
		[Column(),                 NotNull] public byte   Service         { get; set; } // tinyint
		[Column(),                 NotNull] public int    Country         { get; set; } // int
		[Column(),                 NotNull] public string RefShopCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   Cash            { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID1         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID2         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID3         { get; set; } // tinyint
		[Column(),                 NotNull] public byte   TypeID4         { get; set; } // tinyint
		[Column(),                 NotNull] public string RefItemCodeName { get; set; } // varchar(129)
		[Column(),                 NotNull] public byte   AcceptOrReject  { get; set; } // tinyint
		[Column(),                 NotNull] public int    FourCC          { get; set; } // int
		[Column(),                 NotNull] public int    Param1          { get; set; } // int
		[Column("Param1_Desc128"), NotNull] public string Param1Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param2          { get; set; } // int
		[Column("Param2_Desc128"), NotNull] public string Param2Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param3          { get; set; } // int
		[Column("Param3_Desc128"), NotNull] public string Param3Desc128   { get; set; } // varchar(129)
		[Column(),                 NotNull] public int    Param4          { get; set; } // int
		[Column("Param4_Desc128"), NotNull] public string Param4Desc128   { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefTreatItemOfShop__RefShopObject
		/// </summary>
		[Association(ThisKey="Country", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTreatItemOfShop__RefShopObject", BackReferenceName="RefTreatItemOfShopRefShopObjects")]
		public RefShopObject RefTreatItemOfShopRefShopObject { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTrigger")]
	public partial class RefTrigger
	{
		[Column,     NotNull    ] public int    Service     { get; set; } // int
		[PrimaryKey, Identity   ] public int    ID          { get; set; } // int
		[Column,     NotNull    ] public string CodeName128 { get; set; } // varchar(129)
		[Column,     NotNull    ] public byte   IsActive    { get; set; } // tinyint
		[Column,     NotNull    ] public byte   IsRepeat    { get; set; } // tinyint
		[Column,        Nullable] public string Comment512  { get; set; } // varchar(513)
		[Column,     NotNull    ] public int    IndexNumber { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefTriggerBindAction__RefTrigger_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerBindAction> RefTriggerBindActionRefTriggers { get; set; }

		/// <summary>
		/// FK__RefTriggerBindCondition__RefTrigger_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerBindCondition> RefTriggerBindConditionRefTriggers { get; set; }

		/// <summary>
		/// FK__RefTriggerBindEvent__RefTrigger_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerBindEvent> RefTriggerBindEventRefTriggers { get; set; }

		/// <summary>
		/// FK__RefTriggerCategoryBindTrigger__RefTrigger_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerCategoryBindTrigger> RefTriggerCategoryBindTriggerRefTriggers { get; set; }

		/// <summary>
		/// FK__RefTriggerVariable__RefTrigger_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="BindTriggerID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerVariable> RefTriggerVariableRefTriggers { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerAction")]
	public partial class RefTriggerAction
	{
		[Column,     NotNull ] public int    Service               { get; set; } // int
		[PrimaryKey, Identity] public int    ID                    { get; set; } // int
		[Column,     NotNull ] public int    RefTriggerCommonID    { get; set; } // int
		[Column,     NotNull ] public int    Delay                 { get; set; } // int
		[Column,     NotNull ] public string ParamGroupCodeName128 { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefTriggerAction__RefTriggerCommon
		/// </summary>
		[Association(ThisKey="RefTriggerCommonID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerAction__RefTriggerCommon", BackReferenceName="RefTriggerActionRefTriggerCommons")]
		public RefTriggerCommon RefTriggerActionRefTriggerCommon { get; set; }

		/// <summary>
		/// FK__RefTriggerBindAction__RefTriggerAction_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerActionID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerBindAction> RefTriggerBindActionRefTriggerActions { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerActionParam")]
	public partial class RefTriggerActionParam
	{
		[Column,     NotNull ] public int    Service          { get; set; } // int
		[PrimaryKey, Identity] public int    ID               { get; set; } // int
		[Column,     NotNull ] public string GroupCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string ValueCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string Value            { get; set; } // varchar(129)
		[Column,     NotNull ] public string Type             { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="_RefTriggerBindAction")]
	public partial class RefTriggerBindAction
	{
		[Column,     NotNull ] public int Service         { get; set; } // int
		[PrimaryKey, Identity] public int ID              { get; set; } // int
		[Column,     NotNull ] public int TriggerID       { get; set; } // int
		[Column,     NotNull ] public int TriggerActionID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefTriggerBindAction__RefTrigger
		/// </summary>
		[Association(ThisKey="TriggerID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerBindAction__RefTrigger", BackReferenceName="RefTriggerBindActionRefTriggers")]
		public RefTrigger RefTriggerBindActionRefTrigger { get; set; }

		/// <summary>
		/// FK__RefTriggerBindAction__RefTriggerAction
		/// </summary>
		[Association(ThisKey="TriggerActionID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerBindAction__RefTriggerAction", BackReferenceName="RefTriggerBindActionRefTriggerActions")]
		public RefTriggerAction RefTriggerBindActionRefTriggerAction { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerBindCondition")]
	public partial class RefTriggerBindCondition
	{
		[Column,     NotNull ] public int Service            { get; set; } // int
		[PrimaryKey, Identity] public int ID                 { get; set; } // int
		[Column,     NotNull ] public int TriggerID          { get; set; } // int
		[Column,     NotNull ] public int TriggerConditionID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefTriggerBindCondition__RefTrigger
		/// </summary>
		[Association(ThisKey="TriggerID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerBindCondition__RefTrigger", BackReferenceName="RefTriggerBindConditionRefTriggers")]
		public RefTrigger RefTriggerBindConditionRefTrigger { get; set; }

		/// <summary>
		/// FK__RefTriggerBindCondition__RefTriggerCondition
		/// </summary>
		[Association(ThisKey="TriggerConditionID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerBindCondition__RefTriggerCondition", BackReferenceName="RefTriggerBindConditionRefTriggerConditions")]
		public RefTriggerCondition RefTriggerBindConditionRefTriggerCondition { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerBindEvent")]
	public partial class RefTriggerBindEvent
	{
		[Column,     NotNull ] public int Service        { get; set; } // int
		[PrimaryKey, Identity] public int ID             { get; set; } // int
		[Column,     NotNull ] public int TriggerID      { get; set; } // int
		[Column,     NotNull ] public int TriggerEventID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefTriggerBindEvent__RefTrigger
		/// </summary>
		[Association(ThisKey="TriggerID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerBindEvent__RefTrigger", BackReferenceName="RefTriggerBindEventRefTriggers")]
		public RefTrigger RefTriggerBindEventRefTrigger { get; set; }

		/// <summary>
		/// FK__RefTriggerBindEvent__RefTriggerEvent
		/// </summary>
		[Association(ThisKey="TriggerEventID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerBindEvent__RefTriggerEvent", BackReferenceName="RefTriggerBindEventRefTriggerEvents")]
		public RefTriggerEvent RefTriggerBindEventRefTriggerEvent { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerCategory")]
	public partial class RefTriggerCategory
	{
		[Column,     NotNull    ] public int    Service     { get; set; } // int
		[PrimaryKey, Identity   ] public int    ID          { get; set; } // int
		[Column,     NotNull    ] public string CodeName128 { get; set; } // varchar(129)
		[Column,        Nullable] public string ObjName128  { get; set; } // varchar(129)
		[Column,     NotNull    ] public int    IndexNumber { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefGameWorldBindTriggerCategory__RefTriggerCategory_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerCategoryID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefGameWorldBindTriggerCategory> RefGameWorldBindTriggerCategoryRefTriggerCategories { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerCategoryBindTrigger")]
	public partial class RefTriggerCategoryBindTrigger
	{
		[Column,     NotNull ] public int Service           { get; set; } // int
		[PrimaryKey, Identity] public int ID                { get; set; } // int
		[Column,     NotNull ] public int TriggerCategoryID { get; set; } // int
		[Column,     NotNull ] public int TriggerID         { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefTriggerCategoryBindTrigger__RefTrigger
		/// </summary>
		[Association(ThisKey="TriggerID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerCategoryBindTrigger__RefTrigger", BackReferenceName="RefTriggerCategoryBindTriggerRefTriggers")]
		public RefTrigger RefTriggerCategoryBindTriggerRefTrigger { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerCommon")]
	public partial class RefTriggerCommon
	{
		[Column,     NotNull ] public int    Service     { get; set; } // int
		[PrimaryKey, Identity] public int    ID          { get; set; } // int
		[Column,     NotNull ] public string CodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string ObjName128  { get; set; } // varchar(129)
		[Column,     NotNull ] public short  TID1        { get; set; } // smallint
		[Column,     NotNull ] public short  TID2        { get; set; } // smallint
		[Column,     NotNull ] public short  TID3        { get; set; } // smallint
		[Column,     NotNull ] public short  TID4        { get; set; } // smallint

		#region Associations

		/// <summary>
		/// FK__RefTriggerAction__RefTriggerCommon_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="RefTriggerCommonID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerAction> RefTriggerActionRefTriggerCommons { get; set; }

		/// <summary>
		/// FK__RefTriggerCondition__RefTriggerCommon_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="RefTriggerCommonID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerCondition> RefTriggerConditionRefTriggerCommons { get; set; }

		/// <summary>
		/// FK__RefTriggerEvent__RefTriggerCommon_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="RefTriggerCommonID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerEvent> RefTriggerEventRefTriggerCommons { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerCondition")]
	public partial class RefTriggerCondition
	{
		[Column,     NotNull ] public int    Service               { get; set; } // int
		[PrimaryKey, Identity] public int    ID                    { get; set; } // int
		[Column,     NotNull ] public int    RefTriggerCommonID    { get; set; } // int
		[Column,     NotNull ] public string OnTrue                { get; set; } // varchar(20)
		[Column,     NotNull ] public string OnFalse               { get; set; } // varchar(20)
		[Column,     NotNull ] public short  Sequence              { get; set; } // smallint
		[Column,     NotNull ] public string ParamGroupCodeName128 { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefTriggerBindCondition__RefTriggerCondition_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerConditionID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerBindCondition> RefTriggerBindConditionRefTriggerConditions { get; set; }

		/// <summary>
		/// FK__RefTriggerCondition__RefTriggerCommon
		/// </summary>
		[Association(ThisKey="RefTriggerCommonID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerCondition__RefTriggerCommon", BackReferenceName="RefTriggerConditionRefTriggerCommons")]
		public RefTriggerCommon RefTriggerConditionRefTriggerCommon { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerConditionParam")]
	public partial class RefTriggerConditionParam
	{
		[Column,     NotNull ] public int    Service          { get; set; } // int
		[PrimaryKey, Identity] public int    ID               { get; set; } // int
		[Column,     NotNull ] public string GroupCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string ValueCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string Value            { get; set; } // varchar(129)
		[Column,     NotNull ] public string Type             { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="_RefTriggerEvent")]
	public partial class RefTriggerEvent
	{
		[Column,     NotNull ] public int Service            { get; set; } // int
		[PrimaryKey, Identity] public int ID                 { get; set; } // int
		[Column,     NotNull ] public int RefTriggerCommonID { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__RefTriggerBindEvent__RefTriggerEvent_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="TriggerEventID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<RefTriggerBindEvent> RefTriggerBindEventRefTriggerEvents { get; set; }

		/// <summary>
		/// FK__RefTriggerEvent__RefTriggerCommon
		/// </summary>
		[Association(ThisKey="RefTriggerCommonID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerEvent__RefTriggerCommon", BackReferenceName="RefTriggerEventRefTriggerCommons")]
		public RefTriggerCommon RefTriggerEventRefTriggerCommon { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefTriggerVariable")]
	public partial class RefTriggerVariable
	{
		[Column,     NotNull    ] public int    Service       { get; set; } // int
		[PrimaryKey, Identity   ] public int    ID            { get; set; } // int
		[Column,     NotNull    ] public int    BindTriggerID { get; set; } // int
		[Column,     NotNull    ] public string CodeName128   { get; set; } // varchar(129)
		[Column,     NotNull    ] public string Type          { get; set; } // varchar(33)
		[Column,     NotNull    ] public int    Value         { get; set; } // int
		[Column,        Nullable] public string Comment128    { get; set; } // varchar(129)

		#region Associations

		/// <summary>
		/// FK__RefTriggerVariable__RefTrigger
		/// </summary>
		[Association(ThisKey="BindTriggerID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__RefTriggerVariable__RefTrigger", BackReferenceName="RefTriggerVariableRefTriggers")]
		public RefTrigger RefTriggerVariableRefTrigger { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_RefUIString_Mt")]
	public partial class RefUIStringMt
	{
		[PrimaryKey, Identity] public int    ID               { get; set; } // int
		[Column,     NotNull ] public string GroupCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string ValueCodeName128 { get; set; } // varchar(129)
		[Column,     NotNull ] public string Value            { get; set; } // varchar(513)
		[Column,     NotNull ] public string Type             { get; set; } // varchar(20)
	}

	[Table(Schema="dbo", Name="_RentItemInfo")]
	public partial class RentItemInfo
	{
		[Column("nItemDBID"),     PrimaryKey,  NotNull] public long      NItemDBID       { get; set; } // bigint
		[Column("nRentType"),                  NotNull] public int       NRentType       { get; set; } // int
		[Column("nCanDelete"),                 NotNull] public short     NCanDelete      { get; set; } // smallint
		[Column("nCanRecharge"),               NotNull] public short     NCanRecharge    { get; set; } // smallint
		[Column(),                             NotNull] public DateTime  PeriodBeginTime { get; set; } // smalldatetime
		[Column(),                             NotNull] public DateTime  PeriodEndTime   { get; set; } // smalldatetime
		[Column(),                   Nullable         ] public DateTime? MeterRateTime   { get; set; } // smalldatetime
		[Column("nPackingState"),    Nullable         ] public short?    NPackingState   { get; set; } // smallint
		[Column("nPackingTime"),     Nullable         ] public int?      NPackingTime    { get; set; } // int
	}

	[Table(Schema="dbo", Name="_ResultOfPackageItemToMappingWithServerSide")]
	public partial class ResultOfPackageItemToMappingWithServerSide
	{
		[Column,        NotNull] public byte Operation       { get; set; } // tinyint
		[PrimaryKey(1), NotNull] public int  CharID          { get; set; } // int
		[PrimaryKey(2), NotNull] public int  Slot            { get; set; } // int
		[PrimaryKey(3), NotNull] public long RefItemSerial64 { get; set; } // bigint
		[PrimaryKey(4), NotNull] public long RefItemDBID     { get; set; } // bigint
		[Column,        NotNull] public int  RefItemID       { get; set; } // int
		[Column,        NotNull] public byte Type            { get; set; } // tinyint
		[Column,        NotNull] public byte SubType         { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_Schedule")]
	public partial class Schedule
	{
		[Column(),                              PrimaryKey,  Identity] public int      ScheduleIdx                { get; set; } // int
		[Column(),                              NotNull              ] public int      ScheduleDefineIdx          { get; set; } // int
		[Column(),                              NotNull              ] public DateTime DateStart                  { get; set; } // datetime
		[Column(),                              NotNull              ] public DateTime DateEnd                    { get; set; } // datetime
		[Column("MainInterval_Type"),           NotNull              ] public int      MainIntervalType           { get; set; } // int
		[Column("MainInterval_TypeDate"),       NotNull              ] public int      MainIntervalTypeDate       { get; set; } // int
		[Column("SubInterval_DayOfWeek"),          Nullable          ] public byte?    SubIntervalDayOfWeek       { get; set; } // tinyint
		[Column("SubInterval_Days"),               Nullable          ] public byte?    SubIntervalDays            { get; set; } // tinyint
		[Column("SubInterval_Weeks"),              Nullable          ] public byte?    SubIntervalWeeks           { get; set; } // tinyint
		[Column("SubInterval_Months"),             Nullable          ] public byte?    SubIntervalMonths          { get; set; } // tinyint
		[Column("SubInterval_StartTimeHour"),      Nullable          ] public byte?    SubIntervalStartTimeHour   { get; set; } // tinyint
		[Column("SubInterval_StartTimeMinute"),    Nullable          ] public byte?    SubIntervalStartTimeMinute { get; set; } // tinyint
		[Column("SubInterval_StartTimeSecond"),    Nullable          ] public byte?    SubIntervalStartTimeSecond { get; set; } // tinyint
		[Column("SubInterval_DurationSecond"),     Nullable          ] public int?     SubIntervalDurationSecond  { get; set; } // int
		[Column("SubInterval_RepititionTerm"),     Nullable          ] public int?     SubIntervalRepititionTerm  { get; set; } // int
		[Column("SubInterval_MaintainTime"),       Nullable          ] public int?     SubIntervalMaintainTime    { get; set; } // int
		[Column(),                                 Nullable          ] public string   Param                      { get; set; } // varchar(256)
		[Column(),                                 Nullable          ] public string   Description                { get; set; } // varchar(2000)
	}

	[Table(Schema="dbo", Name="_ServerEvent")]
	public partial class ServerEvent
	{
		[Column, NotNull] public int ID                   { get; set; } // int
		[Column, NotNull] public int CompletionValue      { get; set; } // int
		[Column, NotNull] public int AchievementCondition { get; set; } // int
		[Column, NotNull] public int ProgressCount        { get; set; } // int
	}

	[Table(Schema="dbo", Name="_ServerEventReward")]
	public partial class ServerEventReward
	{
		[Column, NotNull] public int ServerEventID    { get; set; } // int
		[Column, NotNull] public int RewardID         { get; set; } // int
		[Column, NotNull] public int RemainRewardTime { get; set; } // int
	}

	[Table(Schema="dbo", Name="_ShopItemStockQuantity")]
	public partial class ShopItemStockQuantity
	{
		[Column,        NotNull] public byte   Service                { get; set; } // tinyint
		[PrimaryKey(1), NotNull] public int    Country                { get; set; } // int
		[PrimaryKey(2), NotNull] public string RefShopGroupCodeName   { get; set; } // varchar(129)
		[PrimaryKey(3), NotNull] public string RefPackageItemCodeName { get; set; } // varchar(129)
		[Column,        NotNull] public short  ConstStockQuantity     { get; set; } // smallint
		[Column,        NotNull] public short  StockQuantity          { get; set; } // smallint
	}

	[Table(Schema="dbo", Name="_SiegeFortress")]
	public partial class SiegeFortress
	{
		[PrimaryKey, NotNull    ] public int       FortressID                         { get; set; } // int
		[Column,     NotNull    ] public int       GuildID                            { get; set; } // int
		[Column,     NotNull    ] public short     TaxRatio                           { get; set; } // smallint
		[Column,     NotNull    ] public long      Tax                                { get; set; } // bigint
		[Column,     NotNull    ] public byte      NPCHired                           { get; set; } // tinyint
		[Column,     NotNull    ] public int       TempGuildID                        { get; set; } // int
		[Column,        Nullable] public string    Introduction                       { get; set; } // varchar(120)
		[Column,        Nullable] public DateTime? CreatedDungeonTime                 { get; set; } // datetime
		[Column,        Nullable] public byte?     CreatedDungeonCount                { get; set; } // tinyint
		[Column,     NotNull    ] public byte      IntroductionModificationPermission { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__SiegeFortressBattleRecord__SiegeFortress_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortressBattleRecord> SiegeFortressBattleRecordSiegeFortresses { get; set; }

		/// <summary>
		/// FK__SiegeFortress__Guild
		/// </summary>
		[Association(ThisKey="GuildID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortress__Guild", BackReferenceName="SiegeFortressGuilds")]
		public Guild SiegeFortressGuild { get; set; }

		/// <summary>
		/// FK__SiegeFortressItemForge__SiegeFortress_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortressItemForge> SiegeFortressItemForgeSiegeFortresses { get; set; }

		/// <summary>
		/// FK__SiegeFortressObject__SiegeFortress_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortressObject> SiegeFortressObjectSiegeFortresses { get; set; }

		/// <summary>
		/// FK__SiegeFortressRequest__SiegeFortress_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortressRequest> SiegeFortressRequestSiegeFortresses { get; set; }

		/// <summary>
		/// FK__SiegeFortressStoneState__SiegeFortress_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortressStoneState> SiegeFortressStoneStateSiegeFortresses { get; set; }

		/// <summary>
		/// FK__SiegeFortressStruct__SiegeFortress_BackReference
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<SiegeFortressStruct> SiegeFortressStructSiegeFortresses { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_SiegeFortressBattleRecord")]
	public partial class SiegeFortressBattleRecord
	{
		[PrimaryKey(1), NotNull] public int      FortressID  { get; set; } // int
		[PrimaryKey(2), NotNull] public int      CharID      { get; set; } // int
		[Column,        NotNull] public int      KillCount   { get; set; } // int
		[Column,        NotNull] public int      KilledCount { get; set; } // int
		[Column,        NotNull] public DateTime RankUpDate  { get; set; } // datetime
		[Column,        NotNull] public byte     CurRank     { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__SiegeFortressBattleRecord__SiegeFortress
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortressBattleRecord__SiegeFortress", BackReferenceName="SiegeFortressBattleRecordSiegeFortresses")]
		public SiegeFortress SiegeFortressBattleRecordSiegeFortress { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_SiegeFortressItemForge")]
	public partial class SiegeFortressItemForge
	{
		[PrimaryKey(1), NotNull] public int      FortressID { get; set; } // int
		[PrimaryKey(2), NotNull] public int      ItemRefID  { get; set; } // int
		[Column,        NotNull] public short    Amount     { get; set; } // smallint
		[Column,        NotNull] public byte     Finished   { get; set; } // tinyint
		[Column,        NotNull] public DateTime StartDate  { get; set; } // datetime
		[Column,        NotNull] public DateTime FinishDate { get; set; } // datetime

		#region Associations

		/// <summary>
		/// FK__SiegeFortressItemForge__SiegeFortress
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortressItemForge__SiegeFortress", BackReferenceName="SiegeFortressItemForgeSiegeFortresses")]
		public SiegeFortress SiegeFortressItemForgeSiegeFortress { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_SiegeFortressObject")]
	public partial class SiegeFortressObject
	{
		[PrimaryKey, Identity] public int   ID           { get; set; } // int
		[Column,     NotNull ] public int   FortressID   { get; set; } // int
		[Column,     NotNull ] public int   OwnerGuildID { get; set; } // int
		[Column,     NotNull ] public int   RefObjID     { get; set; } // int
		[Column,     NotNull ] public int   HP           { get; set; } // int
		[Column,     NotNull ] public short Region       { get; set; } // smallint
		[Column,     NotNull ] public float PosX         { get; set; } // real
		[Column,     NotNull ] public float PosY         { get; set; } // real
		[Column,     NotNull ] public float PosZ         { get; set; } // real
		[Column,     NotNull ] public float Direction    { get; set; } // real
		[Column,     NotNull ] public byte  OwnerLevel   { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__SiegeFortressObject__SiegeFortress
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortressObject__SiegeFortress", BackReferenceName="SiegeFortressObjectSiegeFortresses")]
		public SiegeFortress SiegeFortressObjectSiegeFortress { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_SiegeFortressRequest")]
	public partial class SiegeFortressRequest
	{
		[PrimaryKey(1), NotNull] public int  FortressID  { get; set; } // int
		[PrimaryKey(2), NotNull] public int  GuildID     { get; set; } // int
		[Column,        NotNull] public byte RequestType { get; set; } // tinyint

		#region Associations

		/// <summary>
		/// FK__SiegeFortressRequest__Guild
		/// </summary>
		[Association(ThisKey="GuildID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortressRequest__Guild", BackReferenceName="SiegeFortressRequestGuilds")]
		public Guild SiegeFortressRequestGuild { get; set; }

		/// <summary>
		/// FK__SiegeFortressRequest__SiegeFortress
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortressRequest__SiegeFortress", BackReferenceName="SiegeFortressRequestSiegeFortresses")]
		public SiegeFortress SiegeFortressRequestSiegeFortress { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_SiegeFortressStoneState")]
	public partial class SiegeFortressStoneState
	{
		[Column, NotNull] public int FortressID       { get; set; } // int
		[Column, NotNull] public int GuildID          { get; set; } // int
		[Column, NotNull] public int AccumulateDamage { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__SiegeFortressStoneState__SiegeFortress
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortressStoneState__SiegeFortress", BackReferenceName="SiegeFortressStoneStateSiegeFortresses")]
		public SiegeFortress SiegeFortressStoneStateSiegeFortress { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_SiegeFortressStruct")]
	public partial class SiegeFortressStruct
	{
		[Column, NotNull] public int      FortressID       { get; set; } // int
		[Column, NotNull] public int      OwnerGuildID     { get; set; } // int
		[Column, NotNull] public int      RefEventStructID { get; set; } // int
		[Column, NotNull] public int      RefObjID         { get; set; } // int
		[Column, NotNull] public int      HP               { get; set; } // int
		[Column, NotNull] public DateTime MakeDate         { get; set; } // datetime
		[Column, NotNull] public short    State            { get; set; } // smallint

		#region Associations

		/// <summary>
		/// FK__SiegeFortressStruct__SiegeFortress
		/// </summary>
		[Association(ThisKey="FortressID", OtherKey="FortressID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__SiegeFortressStruct__SiegeFortress", BackReferenceName="SiegeFortressStructSiegeFortresses")]
		public SiegeFortress SiegeFortressStructSiegeFortress { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_StarterItems")]
	public partial class StarterItem
	{
		[Column(),            PrimaryKey,  Identity] public int    ID       { get; set; } // int
		[Column(),            NotNull              ] public string CodeName { get; set; } // varchar(255)
		[Column(),            NotNull              ] public int    Data     { get; set; } // int
		[Column("Opt_Level"), NotNull              ] public short  OptLevel { get; set; } // smallint
		[Column(),               Nullable          ] public byte?  Race     { get; set; } // tinyint
		[Column(),               Nullable          ] public byte?  Gender   { get; set; } // tinyint
		[Column(),               Nullable          ] public int?   Order    { get; set; } // int
	}

	[Table(Schema="dbo", Name="_StaticAvatar")]
	public partial class StaticAvatar
	{
		[PrimaryKey, NotNull    ] public int  CharID  { get; set; } // int
		[Column,        Nullable] public int? Param1  { get; set; } // int
		[Column,        Nullable] public int? Param2  { get; set; } // int
		[Column,        Nullable] public int? Param3  { get; set; } // int
		[Column,        Nullable] public int? Param4  { get; set; } // int
		[Column,        Nullable] public int? Param5  { get; set; } // int
		[Column,        Nullable] public int? Param6  { get; set; } // int
		[Column,        Nullable] public int? Param7  { get; set; } // int
		[Column,        Nullable] public int? Param8  { get; set; } // int
		[Column,        Nullable] public int? Param9  { get; set; } // int
		[Column,        Nullable] public int? Param10 { get; set; } // int
		[Column,        Nullable] public int? Param11 { get; set; } // int
		[Column,        Nullable] public int? Param12 { get; set; } // int
		[Column,        Nullable] public int? Param13 { get; set; } // int
		[Column,        Nullable] public int? Param14 { get; set; } // int
		[Column,        Nullable] public int? Param15 { get; set; } // int
		[Column,        Nullable] public int? Param16 { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__StaticAvatar__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK__StaticAvatar__Char", BackReferenceName="StaticAvatarChar")]
		public Char StaticAvatarChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Tab_DBSafe_CheckState")]
	public partial class TabDBSafeCheckState
	{
		[Column("btCheckIn"), Nullable] public byte? BtCheckIn { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="Tab_RefAISkill")]
	public partial class TabRefAISkill
	{
		[Column, NotNull    ] public int    TacticsID           { get; set; } // int
		[Column, NotNull    ] public string SkillCodeName       { get; set; } // varchar(129)
		[Column, NotNull    ] public byte   ExcuteConditionType { get; set; } // tinyint
		[Column,    Nullable] public int?   ExcuteConditionData { get; set; } // int
		[Column,    Nullable] public int?   Option              { get; set; } // int
	}

	[Table(Schema="dbo", Name="Tab_RefHive")]
	public partial class TabRefHive
	{
		[Column("dwHiveID"),                 PrimaryKey, Identity] public int    DwHiveID                 { get; set; } // int
		[Column("btKeepMonsterCountType"),   Nullable            ] public byte?  BtKeepMonsterCountType   { get; set; } // tinyint
		[Column("dwOverwriteMaxTotalCount"), Nullable            ] public int?   DwOverwriteMaxTotalCount { get; set; } // int
		[Column("fMonsterCountPerPC"),       Nullable            ] public float? FMonsterCountPerPC       { get; set; } // real
		[Column("dwSpawnSpeedIncreaseRate"), Nullable            ] public int?   DwSpawnSpeedIncreaseRate { get; set; } // int
		[Column("dwMaxIncreaseRate"),        Nullable            ] public int?   DwMaxIncreaseRate        { get; set; } // int
		[Column("btFlag"),                   Nullable            ] public byte?  BtFlag                   { get; set; } // tinyint
		[Column(),                           Nullable            ] public short? GameWorldID              { get; set; } // smallint
		[Column(),                           Nullable            ] public short? HatchObjType             { get; set; } // smallint
		[Column("szDescString128"),          Nullable            ] public string SzDescString128          { get; set; } // varchar(128)
	}

	[Table(Schema="dbo", Name="Tab_RefNest")]
	public partial class TabRefNest
	{
		[Column("dwNestID"),               PrimaryKey,  Identity] public int    DwNestID               { get; set; } // int
		[Column("dwHiveID"),               NotNull              ] public int    DwHiveID               { get; set; } // int
		[Column("dwTacticsID"),            NotNull              ] public int    DwTacticsID            { get; set; } // int
		[Column("nRegionDBID"),            NotNull              ] public short  NRegionDBID            { get; set; } // smallint
		[Column("fLocalPosX"),                Nullable          ] public float? FLocalPosX             { get; set; } // real
		[Column("fLocalPosY"),                Nullable          ] public float? FLocalPosY             { get; set; } // real
		[Column("fLocalPosZ"),                Nullable          ] public float? FLocalPosZ             { get; set; } // real
		[Column("wInitialDir"),               Nullable          ] public short? WInitialDir            { get; set; } // smallint
		[Column("nRadius"),                   Nullable          ] public int?   NRadius                { get; set; } // int
		[Column("nGenerateRadius"),           Nullable          ] public int?   NGenerateRadius        { get; set; } // int
		[Column("nChampionGenPercentage"),    Nullable          ] public int?   NChampionGenPercentage { get; set; } // int
		[Column("dwDelayTimeMin"),            Nullable          ] public int?   DwDelayTimeMin         { get; set; } // int
		[Column("dwDelayTimeMax"),            Nullable          ] public int?   DwDelayTimeMax         { get; set; } // int
		[Column("dwMaxTotalCount"),        NotNull              ] public int    DwMaxTotalCount        { get; set; } // int
		[Column("btFlag"),                    Nullable          ] public byte?  BtFlag                 { get; set; } // tinyint
		[Column("btRespawn"),              NotNull              ] public byte   BtRespawn              { get; set; } // tinyint
		[Column("btType"),                 NotNull              ] public byte   BtType                 { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="Tab_RefRanking_HunterActivity")]
	public partial class TabRefRankingHunterActivity
	{
		[PrimaryKey, NotNull] public byte   Rank     { get; set; } // tinyint
		[Column,     NotNull] public string NickName { get; set; } // varchar(17)
		[Column,     NotNull] public byte   JobLevel { get; set; } // tinyint
		[Column,     NotNull] public int    JobExp   { get; set; } // int
		[Column,     NotNull] public short  Country  { get; set; } // smallint
	}

	[Table(Schema="dbo", Name="Tab_RefRanking_HunterContribution")]
	public partial class TabRefRankingHunterContribution
	{
		[PrimaryKey, NotNull] public byte   Rank         { get; set; } // tinyint
		[Column,     NotNull] public string NickName     { get; set; } // varchar(17)
		[Column,     NotNull] public byte   JobLevel     { get; set; } // tinyint
		[Column,     NotNull] public int    Contribution { get; set; } // int
	}

	[Table(Schema="dbo", Name="Tab_RefRanking_RobberActivity")]
	public partial class TabRefRankingRobberActivity
	{
		[PrimaryKey, NotNull] public byte   Rank     { get; set; } // tinyint
		[Column,     NotNull] public string NickName { get; set; } // varchar(17)
		[Column,     NotNull] public byte   JobLevel { get; set; } // tinyint
		[Column,     NotNull] public int    JobExp   { get; set; } // int
		[Column,     NotNull] public short  Country  { get; set; } // smallint
	}

	[Table(Schema="dbo", Name="Tab_RefRanking_RobberContribution")]
	public partial class TabRefRankingRobberContribution
	{
		[PrimaryKey, NotNull] public byte   Rank         { get; set; } // tinyint
		[Column,     NotNull] public string NickName     { get; set; } // varchar(17)
		[Column,     NotNull] public byte   JobLevel     { get; set; } // tinyint
		[Column,     NotNull] public int    Contribution { get; set; } // int
	}

	[Table(Schema="dbo", Name="Tab_RefRanking_TraderActivity")]
	public partial class TabRefRankingTraderActivity
	{
		[PrimaryKey, NotNull] public byte   Rank     { get; set; } // tinyint
		[Column,     NotNull] public string NickName { get; set; } // varchar(17)
		[Column,     NotNull] public byte   JobLevel { get; set; } // tinyint
		[Column,     NotNull] public int    JobExp   { get; set; } // int
		[Column,     NotNull] public short  Country  { get; set; } // smallint
	}

	[Table(Schema="dbo", Name="Tab_RefRanking_TraderContribution")]
	public partial class TabRefRankingTraderContribution
	{
		[PrimaryKey, NotNull] public byte   Rank         { get; set; } // tinyint
		[Column,     NotNull] public string NickName     { get; set; } // varchar(17)
		[Column,     NotNull] public byte   JobLevel     { get; set; } // tinyint
		[Column,     NotNull] public int    Contribution { get; set; } // int
	}

	[Table(Schema="dbo", Name="Tab_RefTactics")]
	public partial class TabRefTactic
	{
		[Column("dwTacticsID"),           PrimaryKey,  NotNull] public int    DwTacticsID             { get; set; } // int
		[Column("dwObjID"),                  Nullable         ] public int?   DwObjID                 { get; set; } // int
		[Column("btAIQoS"),                  Nullable         ] public byte?  BtAIQoS                 { get; set; } // tinyint
		[Column("nMaxStamina"),                        NotNull] public int    NMaxStamina             { get; set; } // int
		[Column("btMaxStaminaVariance"),     Nullable         ] public byte?  BtMaxStaminaVariance    { get; set; } // tinyint
		[Column("nSightRange"),                        NotNull] public int    NSightRange             { get; set; } // int
		[Column("btAggressType"),            Nullable         ] public byte?  BtAggressType           { get; set; } // tinyint
		[Column(),                           Nullable         ] public int?   AggressData             { get; set; } // int
		[Column("btChangeTarget"),           Nullable         ] public byte?  BtChangeTarget          { get; set; } // tinyint
		[Column("btHelpRequestTo"),          Nullable         ] public byte?  BtHelpRequestTo         { get; set; } // tinyint
		[Column("btHelpResponseTo"),         Nullable         ] public byte?  BtHelpResponseTo        { get; set; } // tinyint
		[Column("btBattleStyle"),            Nullable         ] public byte?  BtBattleStyle           { get; set; } // tinyint
		[Column(),                           Nullable         ] public int?   BattleStyleData         { get; set; } // int
		[Column("btDiversionBasis"),         Nullable         ] public byte?  BtDiversionBasis        { get; set; } // tinyint
		[Column(),                           Nullable         ] public int?   DiversionBasisData1     { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionBasisData2     { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionBasisData3     { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionBasisData4     { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionBasisData5     { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionBasisData6     { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionBasisData7     { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionBasisData8     { get; set; } // int
		[Column("btDiversionKeepBasis"),     Nullable         ] public byte?  BtDiversionKeepBasis    { get; set; } // tinyint
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData1 { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData2 { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData3 { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData4 { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData5 { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData6 { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData7 { get; set; } // int
		[Column(),                           Nullable         ] public int?   DiversionKeepBasisData8 { get; set; } // int
		[Column("btKeepDistance"),           Nullable         ] public byte?  BtKeepDistance          { get; set; } // tinyint
		[Column(),                           Nullable         ] public int?   KeepDistanceData        { get; set; } // int
		[Column("btTraceType"),              Nullable         ] public byte?  BtTraceType             { get; set; } // tinyint
		[Column("btTraceBoundary"),          Nullable         ] public byte?  BtTraceBoundary         { get; set; } // tinyint
		[Column(),                           Nullable         ] public int?   TraceData               { get; set; } // int
		[Column("btHomingType"),             Nullable         ] public byte?  BtHomingType            { get; set; } // tinyint
		[Column(),                           Nullable         ] public int?   HomingData              { get; set; } // int
		[Column("btAggressTypeOnHoming"),    Nullable         ] public byte?  BtAggressTypeOnHoming   { get; set; } // tinyint
		[Column("btFleeType"),               Nullable         ] public byte?  BtFleeType              { get; set; } // tinyint
		[Column("dwChampionTacticsID"),      Nullable         ] public int?   DwChampionTacticsID     { get; set; } // int
		[Column(),                           Nullable         ] public int?   AdditionOptionFlag      { get; set; } // int
		[Column("szDescString128"),          Nullable         ] public string SzDescString128         { get; set; } // varchar(129)
	}

	[Table(Schema="dbo", Name="_TEMP_ADDITEMEXTERN_CHEST_LOG")]
	public partial class TempAddıtemexternChestLog
	{
		[Identity             ] public int      ID        { get; set; } // int
		[Column,      Nullable] public string   LogString { get; set; } // varchar(256)
		[Column,   NotNull    ] public DateTime LogDate   { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_TempRemovedStaleChar")]
	public partial class TempRemovedStaleChar
	{
		[Column(),          Nullable] public int?      CharID      { get; set; } // int
		[Column(),          Nullable] public int?      UserJID     { get; set; } // int
		[Column(),          Nullable] public string    CharName    { get; set; } // varchar(17)
		[Column(),          Nullable] public DateTime? DeletedDate { get; set; } // datetime
		[Column("strDesc"), Nullable] public string    StrDesc     { get; set; } // varchar(256)
	}

	[Table(Schema="dbo", Name="_TimedJob")]
	public partial class TimedJob
	{
		[PrimaryKey, Identity   ] public int  ID         { get; set; } // int
		[Column,     NotNull    ] public int  CharID     { get; set; } // int
		[Column,     NotNull    ] public byte Category   { get; set; } // tinyint
		[Column,     NotNull    ] public int  JobID      { get; set; } // int
		[Column,     NotNull    ] public int  TimeToKeep { get; set; } // int
		[Column,        Nullable] public int? Data1      { get; set; } // int
		[Column,        Nullable] public int? Data2      { get; set; } // int
		[Column,        Nullable] public int? Data3      { get; set; } // int
		[Column,        Nullable] public int? Data4      { get; set; } // int
		[Column,        Nullable] public int? Data5      { get; set; } // int
		[Column,        Nullable] public int? Data6      { get; set; } // int
		[Column,        Nullable] public int? Data7      { get; set; } // int
		[Column,        Nullable] public int? Data8      { get; set; } // int
		[Column,     NotNull    ] public long Serial64   { get; set; } // bigint
		[Column,        Nullable] public int? JID        { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__TimedJob__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__TimedJob__Char", BackReferenceName="TimedJobChars")]
		public Char TimedJobChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_TimedJobForPet")]
	public partial class TimedJobForPet
	{
		[PrimaryKey, Identity   ] public int  ID         { get; set; } // int
		[Column,     NotNull    ] public int  CharID     { get; set; } // int
		[Column,     NotNull    ] public byte Category   { get; set; } // tinyint
		[Column,     NotNull    ] public int  JobID      { get; set; } // int
		[Column,     NotNull    ] public int  TimeToKeep { get; set; } // int
		[Column,        Nullable] public int? Data1      { get; set; } // int
		[Column,        Nullable] public int? Data2      { get; set; } // int
		[Column,        Nullable] public int? Data3      { get; set; } // int
		[Column,        Nullable] public int? Data4      { get; set; } // int
		[Column,        Nullable] public int? Data5      { get; set; } // int
		[Column,        Nullable] public int? Data6      { get; set; } // int
		[Column,        Nullable] public int? Data7      { get; set; } // int
		[Column,        Nullable] public int? Data8      { get; set; } // int
		[Column,     NotNull    ] public long Serial64   { get; set; } // bigint
		[Column,        Nullable] public int? JID        { get; set; } // int
	}

	[Table(Schema="dbo", Name="TimItemOnChar", IsView=true)]
	public partial class TimItemOnChar
	{
		[Column, NotNull    ] public int    CharID      { get; set; } // int
		[Column, NotNull    ] public string CharName16  { get; set; } // varchar(64)
		[Column,    Nullable] public byte?  OptLevel    { get; set; } // tinyint
		[Column,    Nullable] public long?  Variance    { get; set; } // bigint
		[Column, NotNull    ] public int    Data        { get; set; } // int
		[Column, NotNull    ] public byte   MagParamNum { get; set; } // tinyint
		[Column,    Nullable] public string CreaterName { get; set; } // varchar(64)
		[Column,    Nullable] public long?  MagParam1   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam2   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam3   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam4   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam5   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam6   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam7   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam8   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam9   { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam10  { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam11  { get; set; } // bigint
		[Column,    Nullable] public long?  MagParam12  { get; set; } // bigint
		[Column, NotNull    ] public long   Serial64    { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="_TrainingCamp")]
	public partial class TrainingCamp
	{
		[PrimaryKey, Identity   ] public int      ID                   { get; set; } // int
		[Column,     NotNull    ] public DateTime CreationDate         { get; set; } // smalldatetime
		[Column,     NotNull    ] public byte     Rank                 { get; set; } // tinyint
		[Column,     NotNull    ] public int      GraduateCount        { get; set; } // int
		[Column,     NotNull    ] public int      EvaluationPoint      { get; set; } // int
		[Column,     NotNull    ] public DateTime LatestEvaluationDate { get; set; } // datetime
		[Column,        Nullable] public string   CommentTitle         { get; set; } // varchar(129)
		[Column,        Nullable] public string   Comment              { get; set; } // varchar(2048)

		#region Associations

		/// <summary>
		/// FK__TrainingCampMember__TrainingCamp_BackReference
		/// </summary>
		[Association(ThisKey="ID", OtherKey="CampID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<TrainingCampMember> TrainingCampMemberTrainingCamps { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_TrainingCampBuffStatus")]
	public partial class TrainingCampBuffStatus
	{
		[PrimaryKey(1), NotNull] public int      CampID          { get; set; } // int
		[PrimaryKey(2), NotNull] public int      RecipientCharID { get; set; } // int
		[PrimaryKey(3), NotNull] public byte     BuffSlotIdx     { get; set; } // tinyint
		[Column,        NotNull] public int      DonorCharID     { get; set; } // int
		[Column,        NotNull] public DateTime StartingTime    { get; set; } // smalldatetime
		[Column,        NotNull] public int      RemainBuffPoint { get; set; } // int
		[Column,        NotNull] public byte     BuffType        { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_TrainingCampHonorRank")]
	public partial class TrainingCampHonorRank
	{
		[PrimaryKey, NotNull    ] public int   Ranking { get; set; } // int
		[Column,        Nullable] public int?  CampID  { get; set; } // int
		[Column,        Nullable] public byte? Rank    { get; set; } // tinyint
	}

	[Table(Schema="dbo", Name="_TrainingCampHonorRankUpdateDate")]
	public partial class TrainingCampHonorRankUpdateDate
	{
		[Column, Nullable] public DateTime? LastUpdateDate { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="_TrainingCampMember")]
	public partial class TrainingCampMember
	{
		[PrimaryKey(1), NotNull] public int      CampID          { get; set; } // int
		[PrimaryKey(2), NotNull] public int      CharID          { get; set; } // int
		[Column,        NotNull] public int      RefObjID        { get; set; } // int
		[Column,        NotNull] public string   CharName        { get; set; } // varchar(64)
		[Column,        NotNull] public DateTime JoinDate        { get; set; } // smalldatetime
		[Column,        NotNull] public byte     MemberClass     { get; set; } // tinyint
		[Column,        NotNull] public byte     CharJoinedLevel { get; set; } // tinyint
		[Column,        NotNull] public byte     CharCurLevel    { get; set; } // tinyint
		[Column,        NotNull] public byte     CharMaxLevel    { get; set; } // tinyint
		[Column,        NotNull] public int      HonorPoint      { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__TrainingCampMember__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__TrainingCampMember__Char", BackReferenceName="TrainingCampMemberChars")]
		public Char TrainingCampMemberChar { get; set; }

		/// <summary>
		/// FK__TrainingCampMember__TrainingCamp
		/// </summary>
		[Association(ThisKey="CampID", OtherKey="ID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__TrainingCampMember__TrainingCamp", BackReferenceName="TrainingCampMemberTrainingCamps")]
		public TrainingCamp TrainingCampMemberTrainingCamp { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_TrainingCampSubMentorHonorPoint")]
	public partial class TrainingCampSubMentorHonorPoint
	{
		[PrimaryKey, NotNull] public int CharID     { get; set; } // int
		[Column,     NotNull] public int HonorPoint { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__TrainingCampSubMentorHonorPoint__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.OneToOne, KeyName="FK__TrainingCampSubMentorHonorPoint__Char", BackReferenceName="TrainingCampSubMentorHonorPointChar")]
		public Char TrainingCampSubMentorHonorPointChar { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="_TrijobRewards")]
	public partial class TrijobReward
	{
		[PrimaryKey, NotNull] public byte JobType { get; set; } // tinyint
		[Column,     NotNull] public long Reward  { get; set; } // bigint
	}

	[Table(Schema="dbo", Name="_User")]
	public partial class User
	{
		[Column, NotNull] public int UserJID { get; set; } // int
		[Column, NotNull] public int CharID  { get; set; } // int

		#region Associations

		/// <summary>
		/// FK__User__AccountJID
		/// </summary>
		[Association(ThisKey="UserJID", OtherKey="JID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__User__AccountJID", BackReferenceName="UserAccountJıds")]
		public AccountJID UserAccountJID { get; set; }

		/// <summary>
		/// FK__User__Char
		/// </summary>
		[Association(ThisKey="CharID", OtherKey="CharID", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK__User__Char", BackReferenceName="UserChars")]
		public Char UserChar { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static AccountJID Find(this ITable<AccountJID> table, string AccountID)
		{
			return table.FirstOrDefault(t =>
				t.AccountID == AccountID);
		}

		public static AlliedClan Find(this ITable<AlliedClan> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static AssociationReputation Find(this ITable<AssociationReputation> table, string AssociationCodeName, string AssociationTypeName)
		{
			return table.FirstOrDefault(t =>
				t.AssociationCodeName == AssociationCodeName &&
				t.AssociationTypeName == AssociationTypeName);
		}

		public static BindingOptionWithItem Find(this ITable<BindingOptionWithItem> table, long NItemDBID, byte BOptType, byte NSlot)
		{
			return table.FirstOrDefault(t =>
				t.NItemDBID == NItemDBID &&
				t.BOptType  == BOptType  &&
				t.NSlot     == NSlot);
		}

		public static Char Find(this ITable<Char> table, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID);
		}

		public static CharCO Find(this ITable<CharCO> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static CharCollectionBook Find(this ITable<CharCollectionBook> table, int CharID, int ThemeID, int SlotIndex)
		{
			return table.FirstOrDefault(t =>
				t.CharID    == CharID  &&
				t.ThemeID   == ThemeID &&
				t.SlotIndex == SlotIndex);
		}

		public static CharInstanceWorldData Find(this ITable<CharInstanceWorldData> table, int CharID, int WorldID)
		{
			return table.FirstOrDefault(t =>
				t.CharID  == CharID &&
				t.WorldID == WorldID);
		}

		public static CharNameList Find(this ITable<CharNameList> table, string CharName16, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharName16 == CharName16 &&
				t.CharID     == CharID);
		}

		public static CharNickNameList Find(this ITable<CharNickNameList> table, string NickName16, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.NickName16 == NickName16 &&
				t.CharID     == CharID);
		}

		public static CharQuest Find(this ITable<CharQuest> table, int CharID, int QuestID)
		{
			return table.FirstOrDefault(t =>
				t.CharID  == CharID &&
				t.QuestID == QuestID);
		}

		public static CharSkill Find(this ITable<CharSkill> table, int CharID, int SkillID)
		{
			return table.FirstOrDefault(t =>
				t.CharID  == CharID &&
				t.SkillID == SkillID);
		}

		public static CharSkillMastery Find(this ITable<CharSkillMastery> table, int CharID, int MasteryID)
		{
			return table.FirstOrDefault(t =>
				t.CharID    == CharID &&
				t.MasteryID == MasteryID);
		}

		public static CharTrijob Find(this ITable<CharTrijob> table, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID);
		}

		public static Chest Find(this ITable<Chest> table, int UserJID, byte Slot)
		{
			return table.FirstOrDefault(t =>
				t.UserJID == UserJID &&
				t.Slot    == Slot);
		}

		public static DeletedChar Find(this ITable<DeletedChar> table, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID);
		}

		public static ErrorLog Find(this ITable<ErrorLog> table, long ErrorLogSN)
		{
			return table.FirstOrDefault(t =>
				t.ErrorLogSN == ErrorLogSN);
		}

		public static ExploitLog Find(this ITable<ExploitLog> table, int ID, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.ID     == ID &&
				t.CharID == CharID);
		}

		public static GPHistory Find(this ITable<GPHistory> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static Guild Find(this ITable<Guild> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static GuildChest Find(this ITable<GuildChest> table, int GuildID, byte Slot)
		{
			return table.FirstOrDefault(t =>
				t.GuildID == GuildID &&
				t.Slot    == Slot);
		}

		public static GuildMember Find(this ITable<GuildMember> table, int GuildID, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.GuildID == GuildID &&
				t.CharID  == CharID);
		}

		public static GuildWar Find(this ITable<GuildWar> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static InvCO Find(this ITable<InvCO> table, int COSID, byte Slot)
		{
			return table.FirstOrDefault(t =>
				t.COSID == COSID &&
				t.Slot  == Slot);
		}

		public static Inventory Find(this ITable<Inventory> table, int CharID, byte Slot)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID &&
				t.Slot   == Slot);
		}

		public static InventoryForAvatar Find(this ITable<InventoryForAvatar> table, int CharID, byte Slot)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID &&
				t.Slot   == Slot);
		}

		public static InventoryForLinkedStorage Find(this ITable<InventoryForLinkedStorage> table, long LinkedItemID, byte Slot)
		{
			return table.FirstOrDefault(t =>
				t.LinkedItemID == LinkedItemID &&
				t.Slot         == Slot);
		}

		public static Item Find(this ITable<Item> table, long ID64)
		{
			return table.FirstOrDefault(t =>
				t.ID64 == ID64);
		}

		public static ItemPool Find(this ITable<ItemPool> table, long ItemID)
		{
			return table.FirstOrDefault(t =>
				t.ItemID == ItemID);
		}

		public static ItemQuotation Find(this ITable<ItemQuotation> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static Memo Find(this ITable<Memo> table, long ID64)
		{
			return table.FirstOrDefault(t =>
				t.ID64 == ID64);
		}

		public static OldTrijob Find(this ITable<OldTrijob> table, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID);
		}

		public static RefDropItemAssign Find(this ITable<RefDropItemAssign> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefDropItemGroup Find(this ITable<RefDropItemGroup> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefEventReward Find(this ITable<RefEventReward> table, int EventID)
		{
			return table.FirstOrDefault(t =>
				t.EventID == EventID);
		}

		public static RefEventZone Find(this ITable<RefEventZone> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefGachaNpcMap Find(this ITable<RefGachaNpcMap> table, int NpcId)
		{
			return table.FirstOrDefault(t =>
				t.NpcId == NpcId);
		}

		public static RefGameWorld Find(this ITable<RefGameWorld> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefGameWorldBindGameWorldGroup Find(this ITable<RefGameWorldBindGameWorldGroup> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefGameWorldBindTriggerCategory Find(this ITable<RefGameWorldBindTriggerCategory> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefGameWorldGroup Find(this ITable<RefGameWorldGroup> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefGameWorldGroupConfig Find(this ITable<RefGameWorldGroupConfig> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefHWANLevel Find(this ITable<RefHWANLevel> table, byte HwanLevel)
		{
			return table.FirstOrDefault(t =>
				t.HwanLevel == HwanLevel);
		}

		public static RefLevel Find(this ITable<RefLevel> table, byte Lvl)
		{
			return table.FirstOrDefault(t =>
				t.Lvl == Lvl);
		}

		public static RefMagicOpt Find(this ITable<RefMagicOpt> table, short ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefMappingShopGroup Find(this ITable<RefMappingShopGroup> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefMappingShopWithTab Find(this ITable<RefMappingShopWithTab> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefMonsterAssignedItemDrop Find(this ITable<RefMonsterAssignedItemDrop> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefMonsterAssignedItemRndDrop Find(this ITable<RefMonsterAssignedItemRndDrop> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefObjChar Find(this ITable<RefObjChar> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefObjCharExtraSkill Find(this ITable<RefObjCharExtraSkill> table, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID);
		}

		public static RefObjItem Find(this ITable<RefObjItem> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefObjStruct Find(this ITable<RefObjStruct> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefOptionalTeleport Find(this ITable<RefOptionalTeleport> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefPricePolicyOfItem Find(this ITable<RefPricePolicyOfItem> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefQuestReward Find(this ITable<RefQuestReward> table, int QuestID)
		{
			return table.FirstOrDefault(t =>
				t.QuestID == QuestID);
		}

		public static RefRegion Find(this ITable<RefRegion> table, short WRegionID)
		{
			return table.FirstOrDefault(t =>
				t.WRegionID == WRegionID);
		}

		public static RefRentItem Find(this ITable<RefRentItem> table, string RentCodeName, int RefItemID)
		{
			return table.FirstOrDefault(t =>
				t.RentCodeName == RentCodeName &&
				t.RefItemID    == RefItemID);
		}

		public static RefRewardPolicyToSellPackageItem Find(this ITable<RefRewardPolicyToSellPackageItem> table, int Country, string RefPackageItemCodeName, int FourCC)
		{
			return table.FirstOrDefault(t =>
				t.Country                == Country                &&
				t.RefPackageItemCodeName == RefPackageItemCodeName &&
				t.FourCC                 == FourCC);
		}

		public static RefScheduleDefine Find(this ITable<RefScheduleDefine> table, int ScheduleDefineIdx)
		{
			return table.FirstOrDefault(t =>
				t.ScheduleDefineIdx == ScheduleDefineIdx);
		}

		public static RefServerEvent Find(this ITable<RefServerEvent> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefServerEventReward Find(this ITable<RefServerEventReward> table, int RewardID)
		{
			return table.FirstOrDefault(t =>
				t.RewardID == RewardID);
		}

		public static RefShopGood Find(this ITable<RefShopGood> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefShopItemGroup Find(this ITable<RefShopItemGroup> table, int GroupID)
		{
			return table.FirstOrDefault(t =>
				t.GroupID == GroupID);
		}

		public static RefShopItemStockPeriod Find(this ITable<RefShopItemStockPeriod> table, int Country, string RefShopGroupCodeName, string RefPackageItemCodeName)
		{
			return table.FirstOrDefault(t =>
				t.Country                == Country              &&
				t.RefShopGroupCodeName   == RefShopGroupCodeName &&
				t.RefPackageItemCodeName == RefPackageItemCodeName);
		}

		public static RefShopObject Find(this ITable<RefShopObject> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefSiegeBlessBuff Find(this ITable<RefSiegeBlessBuff> table, int BlessID)
		{
			return table.FirstOrDefault(t =>
				t.BlessID == BlessID);
		}

		public static RefSiegeDungeon Find(this ITable<RefSiegeDungeon> table, int FortressID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID == FortressID);
		}

		public static RefSiegeFortress Find(this ITable<RefSiegeFortress> table, int FortressID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID == FortressID);
		}

		public static RefSiegeFortressBattleRank Find(this ITable<RefSiegeFortressBattleRank> table, byte RankLvl)
		{
			return table.FirstOrDefault(t =>
				t.RankLvl == RankLvl);
		}

		public static RefSiegeFortressGuard Find(this ITable<RefSiegeFortressGuard> table, int FortressID, int GuardRefObjID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID    == FortressID &&
				t.GuardRefObjID == GuardRefObjID);
		}

		public static RefSiegeFortressItemForge Find(this ITable<RefSiegeFortressItemForge> table, int FortressID, int RefItemID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID == FortressID &&
				t.RefItemID  == RefItemID);
		}

		public static RefSiegeLvlSummonMonster Find(this ITable<RefSiegeLvlSummonMonster> table, int RefObjID)
		{
			return table.FirstOrDefault(t =>
				t.RefObjID == RefObjID);
		}

		public static RefSiegeQuest Find(this ITable<RefSiegeQuest> table, int QuestID)
		{
			return table.FirstOrDefault(t =>
				t.QuestID == QuestID);
		}

		public static RefSkill Find(this ITable<RefSkill> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefSkillGroup Find(this ITable<RefSkillGroup> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefSkillMastery Find(this ITable<RefSkillMastery> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTeleLink Find(this ITable<RefTeleLink> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTeleport Find(this ITable<RefTeleport> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTrigger Find(this ITable<RefTrigger> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerAction Find(this ITable<RefTriggerAction> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerActionParam Find(this ITable<RefTriggerActionParam> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerBindAction Find(this ITable<RefTriggerBindAction> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerBindCondition Find(this ITable<RefTriggerBindCondition> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerBindEvent Find(this ITable<RefTriggerBindEvent> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerCategory Find(this ITable<RefTriggerCategory> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerCategoryBindTrigger Find(this ITable<RefTriggerCategoryBindTrigger> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerCommon Find(this ITable<RefTriggerCommon> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerCondition Find(this ITable<RefTriggerCondition> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerConditionParam Find(this ITable<RefTriggerConditionParam> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerEvent Find(this ITable<RefTriggerEvent> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefTriggerVariable Find(this ITable<RefTriggerVariable> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RefUIStringMt Find(this ITable<RefUIStringMt> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static RentItemInfo Find(this ITable<RentItemInfo> table, long NItemDBID)
		{
			return table.FirstOrDefault(t =>
				t.NItemDBID == NItemDBID);
		}

		public static ResultOfPackageItemToMappingWithServerSide Find(this ITable<ResultOfPackageItemToMappingWithServerSide> table, int CharID, int Slot, long RefItemSerial64, long RefItemDBID)
		{
			return table.FirstOrDefault(t =>
				t.CharID          == CharID          &&
				t.Slot            == Slot            &&
				t.RefItemSerial64 == RefItemSerial64 &&
				t.RefItemDBID     == RefItemDBID);
		}

		public static Schedule Find(this ITable<Schedule> table, int ScheduleIdx)
		{
			return table.FirstOrDefault(t =>
				t.ScheduleIdx == ScheduleIdx);
		}

		public static ShopItemStockQuantity Find(this ITable<ShopItemStockQuantity> table, int Country, string RefShopGroupCodeName, string RefPackageItemCodeName)
		{
			return table.FirstOrDefault(t =>
				t.Country                == Country              &&
				t.RefShopGroupCodeName   == RefShopGroupCodeName &&
				t.RefPackageItemCodeName == RefPackageItemCodeName);
		}

		public static SiegeFortress Find(this ITable<SiegeFortress> table, int FortressID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID == FortressID);
		}

		public static SiegeFortressBattleRecord Find(this ITable<SiegeFortressBattleRecord> table, int FortressID, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID == FortressID &&
				t.CharID     == CharID);
		}

		public static SiegeFortressItemForge Find(this ITable<SiegeFortressItemForge> table, int FortressID, int ItemRefID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID == FortressID &&
				t.ItemRefID  == ItemRefID);
		}

		public static SiegeFortressObject Find(this ITable<SiegeFortressObject> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static SiegeFortressRequest Find(this ITable<SiegeFortressRequest> table, int FortressID, int GuildID)
		{
			return table.FirstOrDefault(t =>
				t.FortressID == FortressID &&
				t.GuildID    == GuildID);
		}

		public static StarterItem Find(this ITable<StarterItem> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static StaticAvatar Find(this ITable<StaticAvatar> table, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID);
		}

		public static TabRefHive Find(this ITable<TabRefHive> table, int DwHiveID)
		{
			return table.FirstOrDefault(t =>
				t.DwHiveID == DwHiveID);
		}

		public static TabRefNest Find(this ITable<TabRefNest> table, int DwNestID)
		{
			return table.FirstOrDefault(t =>
				t.DwNestID == DwNestID);
		}

		public static TabRefRankingHunterActivity Find(this ITable<TabRefRankingHunterActivity> table, byte Rank)
		{
			return table.FirstOrDefault(t =>
				t.Rank == Rank);
		}

		public static TabRefRankingHunterContribution Find(this ITable<TabRefRankingHunterContribution> table, byte Rank)
		{
			return table.FirstOrDefault(t =>
				t.Rank == Rank);
		}

		public static TabRefRankingRobberActivity Find(this ITable<TabRefRankingRobberActivity> table, byte Rank)
		{
			return table.FirstOrDefault(t =>
				t.Rank == Rank);
		}

		public static TabRefRankingRobberContribution Find(this ITable<TabRefRankingRobberContribution> table, byte Rank)
		{
			return table.FirstOrDefault(t =>
				t.Rank == Rank);
		}

		public static TabRefRankingTraderActivity Find(this ITable<TabRefRankingTraderActivity> table, byte Rank)
		{
			return table.FirstOrDefault(t =>
				t.Rank == Rank);
		}

		public static TabRefRankingTraderContribution Find(this ITable<TabRefRankingTraderContribution> table, byte Rank)
		{
			return table.FirstOrDefault(t =>
				t.Rank == Rank);
		}

		public static TabRefTactic Find(this ITable<TabRefTactic> table, int DwTacticsID)
		{
			return table.FirstOrDefault(t =>
				t.DwTacticsID == DwTacticsID);
		}

		public static TimedJob Find(this ITable<TimedJob> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static TimedJobForPet Find(this ITable<TimedJobForPet> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static TrainingCamp Find(this ITable<TrainingCamp> table, int ID)
		{
			return table.FirstOrDefault(t =>
				t.ID == ID);
		}

		public static TrainingCampBuffStatus Find(this ITable<TrainingCampBuffStatus> table, int CampID, int RecipientCharID, byte BuffSlotIdx)
		{
			return table.FirstOrDefault(t =>
				t.CampID          == CampID          &&
				t.RecipientCharID == RecipientCharID &&
				t.BuffSlotIdx     == BuffSlotIdx);
		}

		public static TrainingCampHonorRank Find(this ITable<TrainingCampHonorRank> table, int Ranking)
		{
			return table.FirstOrDefault(t =>
				t.Ranking == Ranking);
		}

		public static TrainingCampMember Find(this ITable<TrainingCampMember> table, int CampID, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CampID == CampID &&
				t.CharID == CharID);
		}

		public static TrainingCampSubMentorHonorPoint Find(this ITable<TrainingCampSubMentorHonorPoint> table, int CharID)
		{
			return table.FirstOrDefault(t =>
				t.CharID == CharID);
		}

		public static TrijobReward Find(this ITable<TrijobReward> table, byte JobType)
		{
			return table.FirstOrDefault(t =>
				t.JobType == JobType);
		}
	}
}

#pragma warning restore 1591
